// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module accumulate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        agg_result_rowptr_address0,
        agg_result_rowptr_ce0,
        agg_result_rowptr_we0,
        agg_result_rowptr_d0,
        agg_result_rowptr_q0,
        agg_result_colind_address0,
        agg_result_colind_ce0,
        agg_result_colind_we0,
        agg_result_colind_d0,
        agg_result_data_V_address0,
        agg_result_data_V_ce0,
        agg_result_data_V_we0,
        agg_result_data_V_d0,
        csr1_rowptr_address0,
        csr1_rowptr_ce0,
        csr1_rowptr_q0,
        csr1_rowptr_address1,
        csr1_rowptr_ce1,
        csr1_rowptr_q1,
        csr1_colind_address0,
        csr1_colind_ce0,
        csr1_colind_q0,
        csr1_data_V_address0,
        csr1_data_V_ce0,
        csr1_data_V_q0,
        csr2_rowptr_address0,
        csr2_rowptr_ce0,
        csr2_rowptr_q0,
        csr2_rowptr_address1,
        csr2_rowptr_ce1,
        csr2_rowptr_q1,
        csr2_colind_address0,
        csr2_colind_ce0,
        csr2_colind_q0,
        csr2_data_V_address0,
        csr2_data_V_ce0,
        csr2_data_V_q0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] agg_result_rowptr_address0;
output   agg_result_rowptr_ce0;
output   agg_result_rowptr_we0;
output  [31:0] agg_result_rowptr_d0;
input  [31:0] agg_result_rowptr_q0;
output  [4:0] agg_result_colind_address0;
output   agg_result_colind_ce0;
output   agg_result_colind_we0;
output  [31:0] agg_result_colind_d0;
output  [4:0] agg_result_data_V_address0;
output   agg_result_data_V_ce0;
output   agg_result_data_V_we0;
output  [31:0] agg_result_data_V_d0;
output  [2:0] csr1_rowptr_address0;
output   csr1_rowptr_ce0;
input  [31:0] csr1_rowptr_q0;
output  [2:0] csr1_rowptr_address1;
output   csr1_rowptr_ce1;
input  [31:0] csr1_rowptr_q1;
output  [4:0] csr1_colind_address0;
output   csr1_colind_ce0;
input  [31:0] csr1_colind_q0;
output  [4:0] csr1_data_V_address0;
output   csr1_data_V_ce0;
input  [31:0] csr1_data_V_q0;
output  [2:0] csr2_rowptr_address0;
output   csr2_rowptr_ce0;
input  [31:0] csr2_rowptr_q0;
output  [2:0] csr2_rowptr_address1;
output   csr2_rowptr_ce1;
input  [31:0] csr2_rowptr_q1;
output  [4:0] csr2_colind_address0;
output   csr2_colind_ce0;
input  [4:0] csr2_colind_q0;
output  [4:0] csr2_data_V_address0;
output   csr2_data_V_ce0;
input  [31:0] csr2_data_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] agg_result_rowptr_address0;
reg agg_result_rowptr_ce0;
reg agg_result_rowptr_we0;
reg[31:0] agg_result_rowptr_d0;
reg[4:0] agg_result_colind_address0;
reg agg_result_colind_ce0;
reg agg_result_colind_we0;
reg[31:0] agg_result_colind_d0;
reg[4:0] agg_result_data_V_address0;
reg agg_result_data_V_ce0;
reg agg_result_data_V_we0;
reg[31:0] agg_result_data_V_d0;
reg csr1_rowptr_ce0;
reg csr1_rowptr_ce1;
reg[4:0] csr1_colind_address0;
reg csr1_colind_ce0;
reg[4:0] csr1_data_V_address0;
reg csr1_data_V_ce0;
reg csr2_rowptr_ce0;
reg csr2_rowptr_ce1;
reg[4:0] csr2_colind_address0;
reg csr2_colind_ce0;
reg[4:0] csr2_data_V_address0;
reg csr2_data_V_ce0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_418_p2;
wire    ap_CS_fsm_state6;
reg   [0:0] tmp_2_reg_749;
reg   [0:0] tmp_11_reg_753;
wire   [31:0] grp_fu_424_p2;
wire   [2:0] i_3_fu_448_p2;
reg   [2:0] i_3_reg_647;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_fu_442_p2;
wire   [63:0] tmp_s_fu_461_p1;
reg   [63:0] tmp_s_reg_657;
wire    ap_CS_fsm_state3;
reg   [31:0] end_idx_1_reg_687;
reg   [31:0] end_idx_2_reg_700;
wire  signed [63:0] tmp_9_fu_483_p1;
reg  signed [63:0] tmp_9_reg_716;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_8_fu_477_p2;
wire  signed [63:0] tmp_1_fu_488_p1;
reg  signed [63:0] tmp_1_reg_727;
wire   [31:0] z_idx_fu_511_p2;
reg   [31:0] z_idx_reg_738;
reg   [31:0] csr1_colind_load_reg_744;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_2_fu_522_p2;
wire   [0:0] tmp_11_fu_528_p2;
wire  signed [63:0] tmp_12_fu_534_p1;
reg  signed [63:0] tmp_12_reg_757;
wire   [4:0] csr1_data_V_addr_gep_fu_172_p3;
wire   [4:0] csr2_data_V_addr_gep_fu_180_p3;
wire   [31:0] indvars_iv_next_fu_552_p2;
reg   [31:0] indvars_iv_next_reg_784;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_13_fu_558_p2;
wire   [31:0] j_6_fu_569_p2;
reg   [31:0] j_6_reg_802;
wire   [31:0] z_idx_2_fu_593_p2;
reg   [31:0] z_idx_2_reg_807;
wire   [31:0] z_idx_1_fu_604_p2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_18_fu_610_p2;
wire   [31:0] k_5_fu_621_p2;
reg   [31:0] k_5_reg_830;
wire   [31:0] z_idx_5_fu_638_p2;
wire    ap_CS_fsm_state11;
reg   [2:0] i_reg_308;
reg  signed [31:0] indvars_iv_reg_319;
wire    ap_CS_fsm_state7;
reg  signed [31:0] j6_reg_329;
reg  signed [31:0] k1_reg_339;
reg   [31:0] j_2_reg_349;
reg   [31:0] k_2_reg_363;
reg  signed [31:0] z_idx_3_reg_377;
reg  signed [31:0] j_3_reg_388;
reg  signed [31:0] z_idx_4_reg_398;
reg  signed [31:0] k_3_reg_408;
wire   [63:0] tmp_fu_454_p1;
wire   [4:0] agg_result_data_V_ad_41_gep_fu_202_p3;
wire  signed [63:0] tmp_5_fu_539_p1;
wire  signed [63:0] tmp_15_fu_563_p1;
wire  signed [63:0] tmp_14_fu_598_p1;
wire  signed [63:0] tmp_20_fu_615_p1;
wire  signed [63:0] tmp_19_fu_627_p1;
wire  signed [31:0] extLd8_fu_517_p1;
wire  signed [31:0] extLd_fu_633_p1;
wire   [31:0] tmp_10_fu_545_p2;
wire   [0:0] tmp_6_fu_467_p2;
wire   [0:0] tmp_7_fu_472_p2;
wire   [0:0] tmp_3_fu_493_p2;
wire   [31:0] tmp_4_fu_505_p2;
wire   [31:0] smax1_fu_498_p3;
wire   [0:0] tmp_16_fu_575_p2;
wire   [31:0] smax_fu_580_p3;
wire   [31:0] tmp_17_fu_587_p2;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_18_fu_610_p2 == 1'd0))) begin
        i_reg_308 <= i_3_reg_647;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_308 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvars_iv_reg_319 <= agg_result_rowptr_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvars_iv_reg_319 <= indvars_iv_next_reg_784;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j6_reg_329 <= csr1_rowptr_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j6_reg_329 <= j_2_reg_349;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd0) & (tmp_2_reg_749 == 1'd0))) begin
        j_2_reg_349 <= j6_reg_329;
    end else if ((((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0)))) begin
        j_2_reg_349 <= grp_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_3_reg_388 <= j_6_reg_802;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_477_p2 == 1'd0))) begin
        j_3_reg_388 <= j6_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k1_reg_339 <= csr2_rowptr_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        k1_reg_339 <= k_2_reg_363;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0))) begin
        k_2_reg_363 <= k1_reg_339;
    end else if ((((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd0) & (tmp_2_reg_749 == 1'd0)))) begin
        k_2_reg_363 <= grp_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_3_reg_408 <= k_5_reg_830;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_13_fu_558_p2 == 1'd0))) begin
        k_3_reg_408 <= k1_reg_339;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        z_idx_3_reg_377 <= z_idx_1_fu_604_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_477_p2 == 1'd0))) begin
        z_idx_3_reg_377 <= indvars_iv_reg_319;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        z_idx_4_reg_398 <= z_idx_5_fu_638_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_13_fu_558_p2 == 1'd0))) begin
        z_idx_4_reg_398 <= z_idx_reg_738;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        csr1_colind_load_reg_744 <= csr1_colind_q0;
        tmp_2_reg_749 <= tmp_2_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        end_idx_1_reg_687 <= csr1_rowptr_q1;
        end_idx_2_reg_700 <= csr2_rowptr_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_3_reg_647 <= i_3_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvars_iv_next_reg_784 <= indvars_iv_next_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_13_fu_558_p2 == 1'd1))) begin
        j_6_reg_802 <= j_6_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_18_fu_610_p2 == 1'd1))) begin
        k_5_reg_830 <= k_5_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_522_p2 == 1'd0))) begin
        tmp_11_reg_753 <= tmp_11_fu_528_p2;
        tmp_12_reg_757 <= tmp_12_fu_534_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_477_p2 == 1'd1))) begin
        tmp_1_reg_727 <= tmp_1_fu_488_p1;
        tmp_9_reg_716 <= tmp_9_fu_483_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_442_p2 == 1'd0))) begin
        tmp_s_reg_657[2 : 0] <= tmp_s_fu_461_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_13_fu_558_p2 == 1'd0))) begin
        z_idx_2_reg_807 <= z_idx_2_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_477_p2 == 1'd0))) begin
        z_idx_reg_738 <= z_idx_fu_511_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        agg_result_colind_address0 = tmp_19_fu_627_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        agg_result_colind_address0 = tmp_14_fu_598_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1))) begin
        agg_result_colind_address0 = tmp_5_fu_539_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0))) begin
        agg_result_colind_address0 = tmp_12_reg_757;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        agg_result_colind_address0 = tmp_12_fu_534_p1;
    end else begin
        agg_result_colind_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0)))) begin
        agg_result_colind_ce0 = 1'b1;
    end else begin
        agg_result_colind_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        agg_result_colind_d0 = extLd_fu_633_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        agg_result_colind_d0 = csr1_colind_q0;
    end else if ((((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0)))) begin
        agg_result_colind_d0 = csr1_colind_load_reg_744;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        agg_result_colind_d0 = extLd8_fu_517_p1;
    end else begin
        agg_result_colind_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state5) & (tmp_11_fu_528_p2 == 1'd0) & (tmp_2_fu_522_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0)))) begin
        agg_result_colind_we0 = 1'b1;
    end else begin
        agg_result_colind_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        agg_result_data_V_address0 = tmp_19_fu_627_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        agg_result_data_V_address0 = tmp_14_fu_598_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1))) begin
        agg_result_data_V_address0 = tmp_5_fu_539_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0))) begin
        agg_result_data_V_address0 = agg_result_data_V_ad_41_gep_fu_202_p3;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd0) & (tmp_2_reg_749 == 1'd0))) begin
        agg_result_data_V_address0 = tmp_12_reg_757;
    end else begin
        agg_result_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd0) & (tmp_2_reg_749 == 1'd0)))) begin
        agg_result_data_V_ce0 = 1'b1;
    end else begin
        agg_result_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1))) begin
        agg_result_data_V_d0 = tmp_10_fu_545_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0)))) begin
        agg_result_data_V_d0 = csr1_data_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd0) & (tmp_2_reg_749 == 1'd0)))) begin
        agg_result_data_V_d0 = csr2_data_V_q0;
    end else begin
        agg_result_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state6) & (tmp_2_reg_749 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd1) & (tmp_2_reg_749 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_11_reg_753 == 1'd0) & (tmp_2_reg_749 == 1'd0)))) begin
        agg_result_data_V_we0 = 1'b1;
    end else begin
        agg_result_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        agg_result_rowptr_address0 = tmp_s_reg_657;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        agg_result_rowptr_address0 = tmp_fu_454_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        agg_result_rowptr_address0 = 64'd0;
    end else begin
        agg_result_rowptr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        agg_result_rowptr_ce0 = 1'b1;
    end else begin
        agg_result_rowptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        agg_result_rowptr_d0 = z_idx_2_reg_807;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        agg_result_rowptr_d0 = 32'd0;
    end else begin
        agg_result_rowptr_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_18_fu_610_p2 == 1'd0)))) begin
        agg_result_rowptr_we0 = 1'b1;
    end else begin
        agg_result_rowptr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_442_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_442_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        csr1_colind_address0 = tmp_15_fu_563_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        csr1_colind_address0 = tmp_9_fu_483_p1;
    end else begin
        csr1_colind_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        csr1_colind_ce0 = 1'b1;
    end else begin
        csr1_colind_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        csr1_data_V_address0 = tmp_15_fu_563_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_522_p2 == 1'd1))) begin
        csr1_data_V_address0 = csr1_data_V_addr_gep_fu_172_p3;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_11_fu_528_p2 == 1'd1) & (tmp_2_fu_522_p2 == 1'd0))) begin
        csr1_data_V_address0 = tmp_9_reg_716;
    end else begin
        csr1_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_522_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (tmp_11_fu_528_p2 == 1'd1) & (tmp_2_fu_522_p2 == 1'd0)))) begin
        csr1_data_V_ce0 = 1'b1;
    end else begin
        csr1_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        csr1_rowptr_ce0 = 1'b1;
    end else begin
        csr1_rowptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        csr1_rowptr_ce1 = 1'b1;
    end else begin
        csr1_rowptr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        csr2_colind_address0 = tmp_20_fu_615_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        csr2_colind_address0 = tmp_1_fu_488_p1;
    end else begin
        csr2_colind_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4))) begin
        csr2_colind_ce0 = 1'b1;
    end else begin
        csr2_colind_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        csr2_data_V_address0 = tmp_20_fu_615_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_522_p2 == 1'd1))) begin
        csr2_data_V_address0 = csr2_data_V_addr_gep_fu_180_p3;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_11_fu_528_p2 == 1'd0) & (tmp_2_fu_522_p2 == 1'd0))) begin
        csr2_data_V_address0 = tmp_1_reg_727;
    end else begin
        csr2_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_522_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (tmp_11_fu_528_p2 == 1'd0) & (tmp_2_fu_522_p2 == 1'd0)))) begin
        csr2_data_V_ce0 = 1'b1;
    end else begin
        csr2_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        csr2_rowptr_ce0 = 1'b1;
    end else begin
        csr2_rowptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        csr2_rowptr_ce1 = 1'b1;
    end else begin
        csr2_rowptr_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_442_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_477_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_13_fu_558_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (tmp_18_fu_610_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign agg_result_data_V_ad_41_gep_fu_202_p3 = tmp_12_reg_757;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign csr1_data_V_addr_gep_fu_172_p3 = tmp_9_reg_716;

assign csr1_rowptr_address0 = tmp_fu_454_p1;

assign csr1_rowptr_address1 = tmp_s_fu_461_p1;

assign csr2_data_V_addr_gep_fu_180_p3 = tmp_1_reg_727;

assign csr2_rowptr_address0 = tmp_fu_454_p1;

assign csr2_rowptr_address1 = tmp_s_fu_461_p1;

assign exitcond_fu_442_p2 = ((i_reg_308 == 3'd4) ? 1'b1 : 1'b0);

assign extLd8_fu_517_p1 = $signed(csr2_colind_q0);

assign extLd_fu_633_p1 = $signed(csr2_colind_q0);

assign grp_fu_418_p2 = ($signed(k1_reg_339) + $signed(32'd1));

assign grp_fu_424_p2 = ($signed(j6_reg_329) + $signed(32'd1));

assign i_3_fu_448_p2 = (i_reg_308 + 3'd1);

assign indvars_iv_next_fu_552_p2 = ($signed(indvars_iv_reg_319) + $signed(32'd1));

assign j_6_fu_569_p2 = ($signed(j_3_reg_388) + $signed(32'd1));

assign k_5_fu_621_p2 = ($signed(k_3_reg_408) + $signed(32'd1));

assign smax1_fu_498_p3 = ((tmp_3_fu_493_p2[0:0] === 1'b1) ? j6_reg_329 : end_idx_1_reg_687);

assign smax_fu_580_p3 = ((tmp_16_fu_575_p2[0:0] === 1'b1) ? k1_reg_339 : end_idx_2_reg_700);

assign tmp_10_fu_545_p2 = (csr2_data_V_q0 + csr1_data_V_q0);

assign tmp_11_fu_528_p2 = (($signed(csr1_colind_q0) < $signed(extLd8_fu_517_p1)) ? 1'b1 : 1'b0);

assign tmp_12_fu_534_p1 = indvars_iv_reg_319;

assign tmp_13_fu_558_p2 = (($signed(j_3_reg_388) < $signed(end_idx_1_reg_687)) ? 1'b1 : 1'b0);

assign tmp_14_fu_598_p1 = z_idx_3_reg_377;

assign tmp_15_fu_563_p1 = j_3_reg_388;

assign tmp_16_fu_575_p2 = (($signed(k1_reg_339) > $signed(end_idx_2_reg_700)) ? 1'b1 : 1'b0);

assign tmp_17_fu_587_p2 = ($signed(smax_fu_580_p3) - $signed(k1_reg_339));

assign tmp_18_fu_610_p2 = (($signed(k_3_reg_408) < $signed(end_idx_2_reg_700)) ? 1'b1 : 1'b0);

assign tmp_19_fu_627_p1 = z_idx_4_reg_398;

assign tmp_1_fu_488_p1 = k1_reg_339;

assign tmp_20_fu_615_p1 = k_3_reg_408;

assign tmp_2_fu_522_p2 = ((csr1_colind_q0 == extLd8_fu_517_p1) ? 1'b1 : 1'b0);

assign tmp_3_fu_493_p2 = (($signed(j6_reg_329) > $signed(end_idx_1_reg_687)) ? 1'b1 : 1'b0);

assign tmp_4_fu_505_p2 = ($signed(indvars_iv_reg_319) - $signed(j6_reg_329));

assign tmp_5_fu_539_p1 = indvars_iv_reg_319;

assign tmp_6_fu_467_p2 = (($signed(j6_reg_329) < $signed(end_idx_1_reg_687)) ? 1'b1 : 1'b0);

assign tmp_7_fu_472_p2 = (($signed(k1_reg_339) < $signed(end_idx_2_reg_700)) ? 1'b1 : 1'b0);

assign tmp_8_fu_477_p2 = (tmp_7_fu_472_p2 & tmp_6_fu_467_p2);

assign tmp_9_fu_483_p1 = j6_reg_329;

assign tmp_fu_454_p1 = i_reg_308;

assign tmp_s_fu_461_p1 = i_3_fu_448_p2;

assign z_idx_1_fu_604_p2 = ($signed(z_idx_3_reg_377) + $signed(32'd1));

assign z_idx_2_fu_593_p2 = (z_idx_reg_738 + tmp_17_fu_587_p2);

assign z_idx_5_fu_638_p2 = ($signed(z_idx_4_reg_398) + $signed(32'd1));

assign z_idx_fu_511_p2 = (tmp_4_fu_505_p2 + smax1_fu_498_p3);

always @ (posedge ap_clk) begin
    tmp_s_reg_657[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //accumulate
