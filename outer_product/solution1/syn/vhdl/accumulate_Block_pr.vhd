-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accumulate_Block_pr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    agg_result_rowptr_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    agg_result_rowptr_ce0 : OUT STD_LOGIC;
    agg_result_rowptr_we0 : OUT STD_LOGIC;
    agg_result_rowptr_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    agg_result_rowptr_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    csr1_rowptr_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    csr1_rowptr_ce0 : OUT STD_LOGIC;
    csr1_rowptr_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    csr1_rowptr_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    csr1_rowptr_ce1 : OUT STD_LOGIC;
    csr1_rowptr_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    csr2_rowptr_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    csr2_rowptr_ce0 : OUT STD_LOGIC;
    csr2_rowptr_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    csr2_rowptr_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    csr2_rowptr_ce1 : OUT STD_LOGIC;
    csr2_rowptr_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    csr1_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    csr1_data_V_ce0 : OUT STD_LOGIC;
    csr1_data_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    csr2_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    csr2_data_V_ce0 : OUT STD_LOGIC;
    csr2_data_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    agg_result_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    agg_result_data_V_ce0 : OUT STD_LOGIC;
    agg_result_data_V_we0 : OUT STD_LOGIC;
    agg_result_data_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    agg_result_colind_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    agg_result_colind_ce0 : OUT STD_LOGIC;
    agg_result_colind_we0 : OUT STD_LOGIC;
    agg_result_colind_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    csr1_colind_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    csr1_colind_ce0 : OUT STD_LOGIC;
    csr1_colind_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    csr2_colind_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    csr2_colind_ce0 : OUT STD_LOGIC;
    csr2_colind_q0 : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of accumulate_Block_pr is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_4_reg_749 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_753 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_fu_448_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_3_reg_647 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_657 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal end_idx_1_reg_687 : STD_LOGIC_VECTOR (31 downto 0);
    signal end_idx_2_reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_reg_716 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_1_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_727 : STD_LOGIC_VECTOR (63 downto 0);
    signal z_idx_fu_511_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_idx_reg_738 : STD_LOGIC_VECTOR (31 downto 0);
    signal csr1_colind_load_reg_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_4_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_757 : STD_LOGIC_VECTOR (63 downto 0);
    signal csr1_data_V_addr_gep_fu_172_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal csr2_data_V_addr_gep_fu_180_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv_next_fu_552_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_next_reg_784 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_13_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_6_fu_569_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_6_reg_802 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_idx_5_fu_593_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_idx_5_reg_807 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_idx_2_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_18_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_5_fu_621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_5_reg_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_idx_6_fu_638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_reg_308 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal indvars_iv_reg_319 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal j6_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal k1_reg_339 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_2_reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_idx_3_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_3_reg_388 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_idx_4_reg_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_3_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal agg_result_data_V_ad_22_gep_fu_202_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal extLd7_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd_fu_633_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_545_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal smax1_fu_498_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax_fu_580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_442_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_18_fu_610_p2 = ap_const_lv1_0))) then 
                i_reg_308 <= i_3_reg_647;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_308 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvars_iv_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvars_iv_reg_319 <= agg_result_rowptr_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvars_iv_reg_319 <= indvars_iv_next_reg_784;
            end if; 
        end if;
    end process;

    j6_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                j6_reg_329 <= csr1_rowptr_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                j6_reg_329 <= j_2_reg_349;
            end if; 
        end if;
    end process;

    j_2_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_0) and (tmp_4_reg_749 = ap_const_lv1_0))) then 
                j_2_reg_349 <= j6_reg_329;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
                j_2_reg_349 <= grp_fu_424_p2;
            end if; 
        end if;
    end process;

    j_3_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                j_3_reg_388 <= j_6_reg_802;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_1_fu_477_p2 = ap_const_lv1_0))) then 
                j_3_reg_388 <= j6_reg_329;
            end if; 
        end if;
    end process;

    k1_reg_339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                k1_reg_339 <= csr2_rowptr_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                k1_reg_339 <= k_2_reg_363;
            end if; 
        end if;
    end process;

    k_2_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0))) then 
                k_2_reg_363 <= k1_reg_339;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_0) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
                k_2_reg_363 <= grp_fu_418_p2;
            end if; 
        end if;
    end process;

    k_3_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                k_3_reg_408 <= k_5_reg_830;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_13_fu_558_p2 = ap_const_lv1_0))) then 
                k_3_reg_408 <= k1_reg_339;
            end if; 
        end if;
    end process;

    z_idx_3_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                z_idx_3_reg_377 <= z_idx_2_fu_604_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_1_fu_477_p2 = ap_const_lv1_0))) then 
                z_idx_3_reg_377 <= indvars_iv_reg_319;
            end if; 
        end if;
    end process;

    z_idx_4_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                z_idx_4_reg_398 <= z_idx_6_fu_638_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_13_fu_558_p2 = ap_const_lv1_0))) then 
                z_idx_4_reg_398 <= z_idx_reg_738;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                csr1_colind_load_reg_744 <= csr1_colind_q0;
                tmp_4_reg_749 <= tmp_4_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                end_idx_1_reg_687 <= csr1_rowptr_q1;
                end_idx_2_reg_700 <= csr2_rowptr_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_3_reg_647 <= i_3_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                indvars_iv_next_reg_784 <= indvars_iv_next_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_13_fu_558_p2 = ap_const_lv1_1))) then
                j_6_reg_802 <= j_6_fu_569_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_18_fu_610_p2 = ap_const_lv1_1))) then
                k_5_reg_830 <= k_5_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_4_fu_522_p2 = ap_const_lv1_0))) then
                tmp_11_reg_753 <= tmp_11_fu_528_p2;
                tmp_12_reg_757 <= tmp_12_fu_534_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_1_fu_477_p2 = ap_const_lv1_1))) then
                tmp_2_reg_716 <= tmp_2_fu_483_p1;
                tmp_3_reg_727 <= tmp_3_fu_488_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_442_p2 = ap_const_lv1_0))) then
                    tmp_s_reg_657(2 downto 0) <= tmp_s_fu_461_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_13_fu_558_p2 = ap_const_lv1_0))) then
                z_idx_5_reg_807 <= z_idx_5_fu_593_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_1_fu_477_p2 = ap_const_lv1_0))) then
                z_idx_reg_738 <= z_idx_fu_511_p2;
            end if;
        end if;
    end process;
    tmp_s_reg_657(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_fu_442_p2, ap_CS_fsm_state4, tmp_1_fu_477_p2, ap_CS_fsm_state8, tmp_13_fu_558_p2, ap_CS_fsm_state10, tmp_18_fu_610_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_442_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_1_fu_477_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_13_fu_558_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_18_fu_610_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    agg_result_colind_address0_assign_proc : process(ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, ap_CS_fsm_state5, tmp_12_fu_534_p1, tmp_12_reg_757, ap_CS_fsm_state9, ap_CS_fsm_state11, tmp_7_fu_539_p1, tmp_14_fu_598_p1, tmp_19_fu_627_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            agg_result_colind_address0 <= tmp_19_fu_627_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            agg_result_colind_address0 <= tmp_14_fu_598_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1))) then 
            agg_result_colind_address0 <= tmp_7_fu_539_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0))) then 
            agg_result_colind_address0 <= tmp_12_reg_757(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            agg_result_colind_address0 <= tmp_12_fu_534_p1(5 - 1 downto 0);
        else 
            agg_result_colind_address0 <= "XXXXX";
        end if; 
    end process;


    agg_result_colind_ce0_assign_proc : process(ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
            agg_result_colind_ce0 <= ap_const_logic_1;
        else 
            agg_result_colind_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_colind_d0_assign_proc : process(csr1_colind_q0, ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, csr1_colind_load_reg_744, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state11, extLd7_fu_517_p1, extLd_fu_633_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            agg_result_colind_d0 <= extLd_fu_633_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            agg_result_colind_d0 <= csr1_colind_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
            agg_result_colind_d0 <= csr1_colind_load_reg_744;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            agg_result_colind_d0 <= extLd7_fu_517_p1;
        else 
            agg_result_colind_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    agg_result_colind_we0_assign_proc : process(ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, ap_CS_fsm_state5, tmp_4_fu_522_p2, tmp_11_fu_528_p2, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_11_fu_528_p2 = ap_const_lv1_0) and (tmp_4_fu_522_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
            agg_result_colind_we0 <= ap_const_logic_1;
        else 
            agg_result_colind_we0 <= ap_const_logic_0;
        end if; 
    end process;

    agg_result_data_V_ad_22_gep_fu_202_p3 <= tmp_12_reg_757(5 - 1 downto 0);

    agg_result_data_V_address0_assign_proc : process(ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, tmp_12_reg_757, ap_CS_fsm_state9, ap_CS_fsm_state11, agg_result_data_V_ad_22_gep_fu_202_p3, tmp_7_fu_539_p1, tmp_14_fu_598_p1, tmp_19_fu_627_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            agg_result_data_V_address0 <= tmp_19_fu_627_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            agg_result_data_V_address0 <= tmp_14_fu_598_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1))) then 
            agg_result_data_V_address0 <= tmp_7_fu_539_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0))) then 
            agg_result_data_V_address0 <= agg_result_data_V_ad_22_gep_fu_202_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_0) and (tmp_4_reg_749 = ap_const_lv1_0))) then 
            agg_result_data_V_address0 <= tmp_12_reg_757(5 - 1 downto 0);
        else 
            agg_result_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    agg_result_data_V_ce0_assign_proc : process(ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_0) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
            agg_result_data_V_ce0 <= ap_const_logic_1;
        else 
            agg_result_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_data_V_d0_assign_proc : process(csr1_data_V_q0, csr2_data_V_q0, ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, ap_CS_fsm_state9, ap_CS_fsm_state11, tmp_10_fu_545_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1))) then 
            agg_result_data_V_d0 <= tmp_10_fu_545_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
            agg_result_data_V_d0 <= csr1_data_V_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_0) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
            agg_result_data_V_d0 <= csr2_data_V_q0;
        else 
            agg_result_data_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    agg_result_data_V_we0_assign_proc : process(ap_CS_fsm_state6, tmp_4_reg_749, tmp_11_reg_753, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_4_reg_749 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_1) and (tmp_4_reg_749 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_11_reg_753 = ap_const_lv1_0) and (tmp_4_reg_749 = ap_const_lv1_0)))) then 
            agg_result_data_V_we0 <= ap_const_logic_1;
        else 
            agg_result_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_rowptr_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_s_reg_657, ap_CS_fsm_state10, tmp_fu_454_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            agg_result_rowptr_address0 <= tmp_s_reg_657(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            agg_result_rowptr_address0 <= tmp_fu_454_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            agg_result_rowptr_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            agg_result_rowptr_address0 <= "XXX";
        end if; 
    end process;


    agg_result_rowptr_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            agg_result_rowptr_ce0 <= ap_const_logic_1;
        else 
            agg_result_rowptr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_rowptr_d0_assign_proc : process(ap_CS_fsm_state1, z_idx_5_reg_807, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            agg_result_rowptr_d0 <= z_idx_5_reg_807;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            agg_result_rowptr_d0 <= ap_const_lv32_0;
        else 
            agg_result_rowptr_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    agg_result_rowptr_we0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state10, tmp_18_fu_610_p2)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_18_fu_610_p2 = ap_const_lv1_0)))) then 
            agg_result_rowptr_we0 <= ap_const_logic_1;
        else 
            agg_result_rowptr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, exitcond_fu_442_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_442_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond_fu_442_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_442_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    csr1_colind_address0_assign_proc : process(tmp_2_fu_483_p1, ap_CS_fsm_state4, ap_CS_fsm_state8, tmp_15_fu_563_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            csr1_colind_address0 <= tmp_15_fu_563_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            csr1_colind_address0 <= tmp_2_fu_483_p1(5 - 1 downto 0);
        else 
            csr1_colind_address0 <= "XXXXX";
        end if; 
    end process;


    csr1_colind_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            csr1_colind_ce0 <= ap_const_logic_1;
        else 
            csr1_colind_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    csr1_data_V_addr_gep_fu_172_p3 <= tmp_2_reg_716(5 - 1 downto 0);

    csr1_data_V_address0_assign_proc : process(tmp_2_reg_716, ap_CS_fsm_state5, tmp_4_fu_522_p2, tmp_11_fu_528_p2, csr1_data_V_addr_gep_fu_172_p3, ap_CS_fsm_state8, tmp_15_fu_563_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            csr1_data_V_address0 <= tmp_15_fu_563_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_4_fu_522_p2 = ap_const_lv1_1))) then 
            csr1_data_V_address0 <= csr1_data_V_addr_gep_fu_172_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_11_fu_528_p2 = ap_const_lv1_1) and (tmp_4_fu_522_p2 = ap_const_lv1_0))) then 
            csr1_data_V_address0 <= tmp_2_reg_716(5 - 1 downto 0);
        else 
            csr1_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    csr1_data_V_ce0_assign_proc : process(ap_CS_fsm_state5, tmp_4_fu_522_p2, tmp_11_fu_528_p2, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_4_fu_522_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_11_fu_528_p2 = ap_const_lv1_1) and (tmp_4_fu_522_p2 = ap_const_lv1_0)))) then 
            csr1_data_V_ce0 <= ap_const_logic_1;
        else 
            csr1_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    csr1_rowptr_address0 <= tmp_fu_454_p1(3 - 1 downto 0);
    csr1_rowptr_address1 <= tmp_s_fu_461_p1(3 - 1 downto 0);

    csr1_rowptr_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            csr1_rowptr_ce0 <= ap_const_logic_1;
        else 
            csr1_rowptr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    csr1_rowptr_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            csr1_rowptr_ce1 <= ap_const_logic_1;
        else 
            csr1_rowptr_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    csr2_colind_address0_assign_proc : process(ap_CS_fsm_state4, tmp_3_fu_488_p1, ap_CS_fsm_state10, tmp_20_fu_615_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            csr2_colind_address0 <= tmp_20_fu_615_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            csr2_colind_address0 <= tmp_3_fu_488_p1(5 - 1 downto 0);
        else 
            csr2_colind_address0 <= "XXXXX";
        end if; 
    end process;


    csr2_colind_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            csr2_colind_ce0 <= ap_const_logic_1;
        else 
            csr2_colind_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    csr2_data_V_addr_gep_fu_180_p3 <= tmp_3_reg_727(5 - 1 downto 0);

    csr2_data_V_address0_assign_proc : process(tmp_3_reg_727, ap_CS_fsm_state5, tmp_4_fu_522_p2, tmp_11_fu_528_p2, csr2_data_V_addr_gep_fu_180_p3, ap_CS_fsm_state10, tmp_20_fu_615_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            csr2_data_V_address0 <= tmp_20_fu_615_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_4_fu_522_p2 = ap_const_lv1_1))) then 
            csr2_data_V_address0 <= csr2_data_V_addr_gep_fu_180_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_11_fu_528_p2 = ap_const_lv1_0) and (tmp_4_fu_522_p2 = ap_const_lv1_0))) then 
            csr2_data_V_address0 <= tmp_3_reg_727(5 - 1 downto 0);
        else 
            csr2_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    csr2_data_V_ce0_assign_proc : process(ap_CS_fsm_state5, tmp_4_fu_522_p2, tmp_11_fu_528_p2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_4_fu_522_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_11_fu_528_p2 = ap_const_lv1_0) and (tmp_4_fu_522_p2 = ap_const_lv1_0)))) then 
            csr2_data_V_ce0 <= ap_const_logic_1;
        else 
            csr2_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    csr2_rowptr_address0 <= tmp_fu_454_p1(3 - 1 downto 0);
    csr2_rowptr_address1 <= tmp_s_fu_461_p1(3 - 1 downto 0);

    csr2_rowptr_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            csr2_rowptr_ce0 <= ap_const_logic_1;
        else 
            csr2_rowptr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    csr2_rowptr_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            csr2_rowptr_ce1 <= ap_const_logic_1;
        else 
            csr2_rowptr_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_442_p2 <= "1" when (i_reg_308 = ap_const_lv3_4) else "0";
    extLd7_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(csr2_colind_q0),32));
    extLd_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(csr2_colind_q0),32));
    grp_fu_418_p2 <= std_logic_vector(signed(k1_reg_339) + signed(ap_const_lv32_1));
    grp_fu_424_p2 <= std_logic_vector(signed(j6_reg_329) + signed(ap_const_lv32_1));
    i_3_fu_448_p2 <= std_logic_vector(unsigned(i_reg_308) + unsigned(ap_const_lv3_1));
    indvars_iv_next_fu_552_p2 <= std_logic_vector(signed(indvars_iv_reg_319) + signed(ap_const_lv32_1));
    j_6_fu_569_p2 <= std_logic_vector(signed(j_3_reg_388) + signed(ap_const_lv32_1));
    k_5_fu_621_p2 <= std_logic_vector(signed(k_3_reg_408) + signed(ap_const_lv32_1));
    smax1_fu_498_p3 <= 
        j6_reg_329 when (tmp_5_fu_493_p2(0) = '1') else 
        end_idx_1_reg_687;
    smax_fu_580_p3 <= 
        k1_reg_339 when (tmp_16_fu_575_p2(0) = '1') else 
        end_idx_2_reg_700;
    tmp_10_fu_545_p2 <= std_logic_vector(unsigned(csr2_data_V_q0) + unsigned(csr1_data_V_q0));
    tmp_11_fu_528_p2 <= "1" when (signed(csr1_colind_q0) < signed(extLd7_fu_517_p1)) else "0";
        tmp_12_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(indvars_iv_reg_319),64));

    tmp_13_fu_558_p2 <= "1" when (signed(j_3_reg_388) < signed(end_idx_1_reg_687)) else "0";
        tmp_14_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z_idx_3_reg_377),64));

        tmp_15_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j_3_reg_388),64));

    tmp_16_fu_575_p2 <= "1" when (signed(k1_reg_339) > signed(end_idx_2_reg_700)) else "0";
    tmp_17_fu_587_p2 <= std_logic_vector(unsigned(smax_fu_580_p3) - unsigned(k1_reg_339));
    tmp_18_fu_610_p2 <= "1" when (signed(k_3_reg_408) < signed(end_idx_2_reg_700)) else "0";
        tmp_19_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z_idx_4_reg_398),64));

    tmp_1_fu_477_p2 <= (tmp_9_fu_472_p2 and tmp_8_fu_467_p2);
        tmp_20_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(k_3_reg_408),64));

        tmp_2_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j6_reg_329),64));

        tmp_3_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(k1_reg_339),64));

    tmp_4_fu_522_p2 <= "1" when (csr1_colind_q0 = extLd7_fu_517_p1) else "0";
    tmp_5_fu_493_p2 <= "1" when (signed(j6_reg_329) > signed(end_idx_1_reg_687)) else "0";
    tmp_6_fu_505_p2 <= std_logic_vector(signed(indvars_iv_reg_319) - signed(j6_reg_329));
        tmp_7_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(indvars_iv_reg_319),64));

    tmp_8_fu_467_p2 <= "1" when (signed(j6_reg_329) < signed(end_idx_1_reg_687)) else "0";
    tmp_9_fu_472_p2 <= "1" when (signed(k1_reg_339) < signed(end_idx_2_reg_700)) else "0";
    tmp_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_308),64));
    tmp_s_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_fu_448_p2),64));
    z_idx_2_fu_604_p2 <= std_logic_vector(signed(z_idx_3_reg_377) + signed(ap_const_lv32_1));
    z_idx_5_fu_593_p2 <= std_logic_vector(unsigned(z_idx_reg_738) + unsigned(tmp_17_fu_587_p2));
    z_idx_6_fu_638_p2 <= std_logic_vector(signed(z_idx_4_reg_398) + signed(ap_const_lv32_1));
    z_idx_fu_511_p2 <= std_logic_vector(unsigned(tmp_6_fu_505_p2) + unsigned(smax1_fu_498_p3));
end behav;
