// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "extract_col.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic extract_col::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic extract_col::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> extract_col::ap_ST_fsm_state1 = "1";
const sc_lv<5> extract_col::ap_ST_fsm_state2 = "10";
const sc_lv<5> extract_col::ap_ST_fsm_state3 = "100";
const sc_lv<5> extract_col::ap_ST_fsm_state4 = "1000";
const sc_lv<5> extract_col::ap_ST_fsm_state5 = "10000";
const sc_lv<32> extract_col::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> extract_col::ap_const_lv32_1 = "1";
const sc_lv<32> extract_col::ap_const_lv32_2 = "10";
const sc_lv<1> extract_col::ap_const_lv1_0 = "0";
const sc_lv<1> extract_col::ap_const_lv1_1 = "1";
const sc_lv<32> extract_col::ap_const_lv32_3 = "11";
const sc_lv<3> extract_col::ap_const_lv3_0 = "000";
const sc_lv<32> extract_col::ap_const_lv32_4 = "100";
const sc_lv<2> extract_col::ap_const_lv2_2 = "10";
const sc_lv<2> extract_col::ap_const_lv2_1 = "1";
const sc_lv<2> extract_col::ap_const_lv2_0 = "00";
const sc_lv<2> extract_col::ap_const_lv2_3 = "11";
const sc_lv<3> extract_col::ap_const_lv3_1 = "1";
const sc_lv<3> extract_col::ap_const_lv3_4 = "100";
const bool extract_col::ap_const_boolean_1 = true;

extract_col::extract_col(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_141_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_141_p2 );

    SC_METHOD(thread_exitcond_fu_141_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_i_2_fu_147_p2);
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_i_cast1_fu_137_p1);
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_inp_csc_colptr_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_s_fu_116_p1 );

    SC_METHOD(thread_inp_csc_colptr_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_2_fu_127_p1 );

    SC_METHOD(thread_inp_csc_colptr_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_inp_csc_colptr_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_inp_csc_data_V_address0);
    sensitive << ( tmp_4_reg_274 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_inp_csc_data_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_inp_csc_rowind_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_158_p1 );

    SC_METHOD(thread_inp_csc_rowind_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_j_2_fu_224_p2);
    sensitive << ( j_fu_40 );

    SC_METHOD(thread_out_col_V_0);
    sensitive << ( inp_csc_data_V_q0 );
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_out_col_V_0_ap_vld);
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_out_col_V_1);
    sensitive << ( inp_csc_data_V_q0 );
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_out_col_V_1_ap_vld);
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_out_col_V_2);
    sensitive << ( inp_csc_data_V_q0 );
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_out_col_V_2_ap_vld);
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_out_col_V_3);
    sensitive << ( inp_csc_data_V_q0 );
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_out_col_V_3_ap_vld);
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( tmp_5_fu_163_p2 );
    sensitive << ( tmp_5_reg_284 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_reg_296 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_168_p1 );

    SC_METHOD(thread_tmp_1_fu_121_p2);
    sensitive << ( col );

    SC_METHOD(thread_tmp_2_fu_127_p1);
    sensitive << ( tmp_1_fu_121_p2 );

    SC_METHOD(thread_tmp_3_fu_153_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_fu_40 );

    SC_METHOD(thread_tmp_3_fu_153_p2);
    sensitive << ( end_idx_reg_252 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_141_p2 );
    sensitive << ( tmp_3_fu_153_p0 );

    SC_METHOD(thread_tmp_4_fu_158_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_fu_40 );

    SC_METHOD(thread_tmp_4_fu_158_p1);
    sensitive << ( tmp_4_fu_158_p0 );

    SC_METHOD(thread_tmp_5_fu_163_p2);
    sensitive << ( inp_csc_rowind_q0 );
    sensitive << ( i_cast1_reg_257 );
    sensitive << ( tmp_3_reg_270 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_6_fu_196_p1);
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_tmp_fu_168_p1);
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_tmp_s_fu_116_p1);
    sensitive << ( col );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_141_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "extract_col_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inp_csc_colptr_address0, "(port)inp_csc_colptr_address0");
    sc_trace(mVcdFile, inp_csc_colptr_ce0, "(port)inp_csc_colptr_ce0");
    sc_trace(mVcdFile, inp_csc_colptr_q0, "(port)inp_csc_colptr_q0");
    sc_trace(mVcdFile, inp_csc_colptr_address1, "(port)inp_csc_colptr_address1");
    sc_trace(mVcdFile, inp_csc_colptr_ce1, "(port)inp_csc_colptr_ce1");
    sc_trace(mVcdFile, inp_csc_colptr_q1, "(port)inp_csc_colptr_q1");
    sc_trace(mVcdFile, inp_csc_rowind_address0, "(port)inp_csc_rowind_address0");
    sc_trace(mVcdFile, inp_csc_rowind_ce0, "(port)inp_csc_rowind_ce0");
    sc_trace(mVcdFile, inp_csc_rowind_q0, "(port)inp_csc_rowind_q0");
    sc_trace(mVcdFile, inp_csc_data_V_address0, "(port)inp_csc_data_V_address0");
    sc_trace(mVcdFile, inp_csc_data_V_ce0, "(port)inp_csc_data_V_ce0");
    sc_trace(mVcdFile, inp_csc_data_V_q0, "(port)inp_csc_data_V_q0");
    sc_trace(mVcdFile, col, "(port)col");
    sc_trace(mVcdFile, out_col_V_0, "(port)out_col_V_0");
    sc_trace(mVcdFile, out_col_V_0_ap_vld, "(port)out_col_V_0_ap_vld");
    sc_trace(mVcdFile, out_col_V_1, "(port)out_col_V_1");
    sc_trace(mVcdFile, out_col_V_1_ap_vld, "(port)out_col_V_1_ap_vld");
    sc_trace(mVcdFile, out_col_V_2, "(port)out_col_V_2");
    sc_trace(mVcdFile, out_col_V_2_ap_vld, "(port)out_col_V_2_ap_vld");
    sc_trace(mVcdFile, out_col_V_3, "(port)out_col_V_3");
    sc_trace(mVcdFile, out_col_V_3_ap_vld, "(port)out_col_V_3_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, end_idx_reg_252, "end_idx_reg_252");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_cast1_fu_137_p1, "i_cast1_fu_137_p1");
    sc_trace(mVcdFile, i_cast1_reg_257, "i_cast1_reg_257");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_2_fu_147_p2, "i_2_fu_147_p2");
    sc_trace(mVcdFile, i_2_reg_265, "i_2_reg_265");
    sc_trace(mVcdFile, tmp_3_fu_153_p2, "tmp_3_fu_153_p2");
    sc_trace(mVcdFile, tmp_3_reg_270, "tmp_3_reg_270");
    sc_trace(mVcdFile, exitcond_fu_141_p2, "exitcond_fu_141_p2");
    sc_trace(mVcdFile, tmp_4_fu_158_p1, "tmp_4_fu_158_p1");
    sc_trace(mVcdFile, tmp_4_reg_274, "tmp_4_reg_274");
    sc_trace(mVcdFile, tmp_5_fu_163_p2, "tmp_5_fu_163_p2");
    sc_trace(mVcdFile, tmp_5_reg_284, "tmp_5_reg_284");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_6_fu_196_p1, "tmp_6_fu_196_p1");
    sc_trace(mVcdFile, tmp_6_reg_296, "tmp_6_reg_296");
    sc_trace(mVcdFile, i_reg_101, "i_reg_101");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_s_fu_116_p1, "tmp_s_fu_116_p1");
    sc_trace(mVcdFile, tmp_2_fu_127_p1, "tmp_2_fu_127_p1");
    sc_trace(mVcdFile, j_fu_40, "j_fu_40");
    sc_trace(mVcdFile, j_2_fu_224_p2, "j_2_fu_224_p2");
    sc_trace(mVcdFile, tmp_fu_168_p1, "tmp_fu_168_p1");
    sc_trace(mVcdFile, tmp_1_fu_121_p2, "tmp_1_fu_121_p2");
    sc_trace(mVcdFile, tmp_3_fu_153_p0, "tmp_3_fu_153_p0");
    sc_trace(mVcdFile, tmp_4_fu_158_p0, "tmp_4_fu_158_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

extract_col::~extract_col() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void extract_col::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_reg_101 = i_2_reg_265.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_101 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()))) {
        j_fu_40 = j_2_fu_224_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_fu_40 = inp_csc_colptr_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        end_idx_reg_252 = inp_csc_colptr_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_2_reg_265 = i_2_fu_147_p2.read();
        i_cast1_reg_257 = i_cast1_fu_137_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0))) {
        tmp_3_reg_270 = tmp_3_fu_153_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_3_fu_153_p2.read(), ap_const_lv1_1))) {
        tmp_4_reg_274 = tmp_4_fu_158_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1))) {
        tmp_5_reg_284 = tmp_5_fu_163_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_163_p2.read()))) {
        tmp_6_reg_296 = tmp_6_fu_196_p1.read();
    }
}

void extract_col::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void extract_col::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void extract_col::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void extract_col::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void extract_col::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void extract_col::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void extract_col::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void extract_col::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void extract_col::thread_exitcond_fu_141_p2() {
    exitcond_fu_141_p2 = (!i_reg_101.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_101.read() == ap_const_lv3_4);
}

void extract_col::thread_i_2_fu_147_p2() {
    i_2_fu_147_p2 = (!i_reg_101.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_101.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void extract_col::thread_i_cast1_fu_137_p1() {
    i_cast1_fu_137_p1 = esl_zext<32,3>(i_reg_101.read());
}

void extract_col::thread_inp_csc_colptr_address0() {
    inp_csc_colptr_address0 =  (sc_lv<3>) (tmp_s_fu_116_p1.read());
}

void extract_col::thread_inp_csc_colptr_address1() {
    inp_csc_colptr_address1 =  (sc_lv<3>) (tmp_2_fu_127_p1.read());
}

void extract_col::thread_inp_csc_colptr_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        inp_csc_colptr_ce0 = ap_const_logic_1;
    } else {
        inp_csc_colptr_ce0 = ap_const_logic_0;
    }
}

void extract_col::thread_inp_csc_colptr_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        inp_csc_colptr_ce1 = ap_const_logic_1;
    } else {
        inp_csc_colptr_ce1 = ap_const_logic_0;
    }
}

void extract_col::thread_inp_csc_data_V_address0() {
    inp_csc_data_V_address0 =  (sc_lv<5>) (tmp_4_reg_274.read());
}

void extract_col::thread_inp_csc_data_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        inp_csc_data_V_ce0 = ap_const_logic_1;
    } else {
        inp_csc_data_V_ce0 = ap_const_logic_0;
    }
}

void extract_col::thread_inp_csc_rowind_address0() {
    inp_csc_rowind_address0 =  (sc_lv<5>) (tmp_4_fu_158_p1.read());
}

void extract_col::thread_inp_csc_rowind_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        inp_csc_rowind_ce0 = ap_const_logic_1;
    } else {
        inp_csc_rowind_ce0 = ap_const_logic_0;
    }
}

void extract_col::thread_j_2_fu_224_p2() {
    j_2_fu_224_p2 = (!j_fu_40.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j_fu_40.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void extract_col::thread_out_col_V_0() {
    if ((esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
         esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_0))) {
        out_col_V_0 = inp_csc_data_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
                  esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_0)) || 
                 (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0) && 
                  esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_0))))) {
        out_col_V_0 = ap_const_lv32_0;
    } else {
        out_col_V_0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void extract_col::thread_out_col_V_0_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
            esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_0)) || 
           (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0) && 
            esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_0)))) || 
         (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
          esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_0)))) {
        out_col_V_0_ap_vld = ap_const_logic_1;
    } else {
        out_col_V_0_ap_vld = ap_const_logic_0;
    }
}

void extract_col::thread_out_col_V_1() {
    if ((esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
         esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_1))) {
        out_col_V_1 = inp_csc_data_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
                  esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_1)) || 
                 (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0) && 
                  esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_1))))) {
        out_col_V_1 = ap_const_lv32_0;
    } else {
        out_col_V_1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void extract_col::thread_out_col_V_1_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
            esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_1)) || 
           (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0) && 
            esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_1)))) || 
         (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
          esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_1)))) {
        out_col_V_1_ap_vld = ap_const_logic_1;
    } else {
        out_col_V_1_ap_vld = ap_const_logic_0;
    }
}

void extract_col::thread_out_col_V_2() {
    if ((esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
         esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_2))) {
        out_col_V_2 = inp_csc_data_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
                  esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_2)) || 
                 (esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_2) && 
                  esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0))))) {
        out_col_V_2 = ap_const_lv32_0;
    } else {
        out_col_V_2 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void extract_col::thread_out_col_V_2_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
            esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_2)) || 
           (esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_2) && 
            esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0)))) || 
         (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
          esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_2)))) {
        out_col_V_2_ap_vld = ap_const_logic_1;
    } else {
        out_col_V_2_ap_vld = ap_const_logic_0;
    }
}

void extract_col::thread_out_col_V_3() {
    if ((esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
         esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_3))) {
        out_col_V_3 = inp_csc_data_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
                  esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_3)) || 
                 (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0) && 
                  esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_3))))) {
        out_col_V_3 = ap_const_lv32_0;
    } else {
        out_col_V_3 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void extract_col::thread_out_col_V_3_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_163_p2.read()) && 
            esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_3)) || 
           (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_0) && 
            esl_seteq<1,2,2>(tmp_fu_168_p1.read(), ap_const_lv2_3)))) || 
         (esl_seteq<1,1,1>(tmp_3_reg_270.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_284.read()) && 
          esl_seteq<1,2,2>(tmp_6_reg_296.read(), ap_const_lv2_3)))) {
        out_col_V_3_ap_vld = ap_const_logic_1;
    } else {
        out_col_V_3_ap_vld = ap_const_logic_0;
    }
}

void extract_col::thread_tmp_1_fu_121_p2() {
    tmp_1_fu_121_p2 = (!col.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(col.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void extract_col::thread_tmp_2_fu_127_p1() {
    tmp_2_fu_127_p1 = esl_zext<64,3>(tmp_1_fu_121_p2.read());
}

void extract_col::thread_tmp_3_fu_153_p0() {
    tmp_3_fu_153_p0 = j_fu_40.read();
}

void extract_col::thread_tmp_3_fu_153_p2() {
    tmp_3_fu_153_p2 = (!tmp_3_fu_153_p0.read().is_01() || !end_idx_reg_252.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_3_fu_153_p0.read()) < sc_bigint<32>(end_idx_reg_252.read()));
}

void extract_col::thread_tmp_4_fu_158_p0() {
    tmp_4_fu_158_p0 = j_fu_40.read();
}

void extract_col::thread_tmp_4_fu_158_p1() {
    tmp_4_fu_158_p1 = esl_sext<64,32>(tmp_4_fu_158_p0.read());
}

void extract_col::thread_tmp_5_fu_163_p2() {
    tmp_5_fu_163_p2 = (!inp_csc_rowind_q0.read().is_01() || !i_cast1_reg_257.read().is_01())? sc_lv<1>(): sc_lv<1>(inp_csc_rowind_q0.read() == i_cast1_reg_257.read());
}

void extract_col::thread_tmp_6_fu_196_p1() {
    tmp_6_fu_196_p1 = i_reg_101.read().range(2-1, 0);
}

void extract_col::thread_tmp_fu_168_p1() {
    tmp_fu_168_p1 = i_reg_101.read().range(2-1, 0);
}

void extract_col::thread_tmp_s_fu_116_p1() {
    tmp_s_fu_116_p1 = esl_zext<64,3>(col.read());
}

void extract_col::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

