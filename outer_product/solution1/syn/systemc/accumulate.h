// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _accumulate_HH_
#define _accumulate_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct accumulate : public sc_module {
    // Port declarations 43
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > agg_result_rowptr_address0;
    sc_out< sc_logic > agg_result_rowptr_ce0;
    sc_out< sc_logic > agg_result_rowptr_we0;
    sc_out< sc_lv<32> > agg_result_rowptr_d0;
    sc_in< sc_lv<32> > agg_result_rowptr_q0;
    sc_out< sc_lv<18> > agg_result_colind_address0;
    sc_out< sc_logic > agg_result_colind_ce0;
    sc_out< sc_logic > agg_result_colind_we0;
    sc_out< sc_lv<32> > agg_result_colind_d0;
    sc_out< sc_lv<18> > agg_result_data_V_address0;
    sc_out< sc_logic > agg_result_data_V_ce0;
    sc_out< sc_logic > agg_result_data_V_we0;
    sc_out< sc_lv<32> > agg_result_data_V_d0;
    sc_out< sc_lv<9> > csr1_rowptr_address0;
    sc_out< sc_logic > csr1_rowptr_ce0;
    sc_in< sc_lv<32> > csr1_rowptr_q0;
    sc_out< sc_lv<9> > csr1_rowptr_address1;
    sc_out< sc_logic > csr1_rowptr_ce1;
    sc_in< sc_lv<32> > csr1_rowptr_q1;
    sc_out< sc_lv<18> > csr1_colind_address0;
    sc_out< sc_logic > csr1_colind_ce0;
    sc_in< sc_lv<32> > csr1_colind_q0;
    sc_out< sc_lv<18> > csr1_data_V_address0;
    sc_out< sc_logic > csr1_data_V_ce0;
    sc_in< sc_lv<32> > csr1_data_V_q0;
    sc_out< sc_lv<9> > csr2_rowptr_address0;
    sc_out< sc_logic > csr2_rowptr_ce0;
    sc_in< sc_lv<32> > csr2_rowptr_q0;
    sc_out< sc_lv<9> > csr2_rowptr_address1;
    sc_out< sc_logic > csr2_rowptr_ce1;
    sc_in< sc_lv<32> > csr2_rowptr_q1;
    sc_out< sc_lv<18> > csr2_colind_address0;
    sc_out< sc_logic > csr2_colind_ce0;
    sc_in< sc_lv<9> > csr2_colind_q0;
    sc_out< sc_lv<18> > csr2_data_V_address0;
    sc_out< sc_logic > csr2_data_V_ce0;
    sc_in< sc_lv<32> > csr2_data_V_q0;


    // Module declarations
    accumulate(sc_module_name name);
    SC_HAS_PROCESS(accumulate);

    ~accumulate();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > i_3_fu_438_p2;
    sc_signal< sc_lv<9> > i_3_reg_636;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_fu_432_p2;
    sc_signal< sc_lv<64> > tmp_s_fu_451_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_646;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > end_idx_1_reg_676;
    sc_signal< sc_lv<32> > end_idx_2_reg_689;
    sc_signal< sc_lv<64> > tmp_76_fu_473_p1;
    sc_signal< sc_lv<64> > tmp_76_reg_705;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_75_fu_467_p2;
    sc_signal< sc_lv<64> > tmp_77_fu_478_p1;
    sc_signal< sc_lv<64> > tmp_77_reg_716;
    sc_signal< sc_lv<32> > z_idx_fu_501_p2;
    sc_signal< sc_lv<32> > z_idx_reg_727;
    sc_signal< sc_lv<32> > csr1_colind_load_reg_733;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_78_fu_512_p2;
    sc_signal< sc_lv<1> > tmp_78_reg_738;
    sc_signal< sc_lv<64> > tmp_84_fu_524_p1;
    sc_signal< sc_lv<64> > tmp_84_reg_745;
    sc_signal< sc_lv<1> > tmp_83_fu_518_p2;
    sc_signal< sc_lv<18> > csr1_data_V_addr_gep_fu_172_p3;
    sc_signal< sc_lv<18> > csr2_data_V_addr_gep_fu_180_p3;
    sc_signal< sc_lv<32> > grp_fu_418_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_425_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > tmp_82_fu_529_p2;
    sc_signal< sc_lv<32> > tmp_82_reg_782;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > indvars_iv_next_fu_541_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_85_fu_547_p2;
    sc_signal< sc_lv<32> > j_6_fu_558_p2;
    sc_signal< sc_lv<32> > j_6_reg_805;
    sc_signal< sc_lv<32> > z_idx_2_fu_582_p2;
    sc_signal< sc_lv<32> > z_idx_2_reg_810;
    sc_signal< sc_lv<32> > z_idx_1_fu_593_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > tmp_91_fu_599_p2;
    sc_signal< sc_lv<32> > k_5_fu_610_p2;
    sc_signal< sc_lv<32> > k_5_reg_833;
    sc_signal< sc_lv<32> > z_idx_5_fu_627_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<9> > i_reg_308;
    sc_signal< sc_lv<32> > indvars_iv_reg_319;
    sc_signal< sc_lv<32> > ap_phi_mux_j_2_phi_fu_353_p6;
    sc_signal< sc_lv<32> > j6_reg_329;
    sc_signal< sc_lv<32> > ap_phi_mux_k_2_phi_fu_367_p6;
    sc_signal< sc_lv<32> > k1_reg_339;
    sc_signal< sc_lv<32> > j_2_reg_349;
    sc_signal< sc_lv<32> > k_2_reg_363;
    sc_signal< sc_lv<32> > z_idx_3_reg_377;
    sc_signal< sc_lv<32> > j_3_reg_388;
    sc_signal< sc_lv<32> > z_idx_4_reg_398;
    sc_signal< sc_lv<32> > k_3_reg_408;
    sc_signal< sc_lv<64> > tmp_fu_444_p1;
    sc_signal< sc_lv<18> > agg_result_data_V_ad_496_gep_fu_202_p3;
    sc_signal< sc_lv<64> > tmp_81_fu_535_p1;
    sc_signal< sc_lv<64> > tmp_87_fu_552_p1;
    sc_signal< sc_lv<64> > tmp_86_fu_587_p1;
    sc_signal< sc_lv<64> > tmp_93_fu_604_p1;
    sc_signal< sc_lv<64> > tmp_92_fu_616_p1;
    sc_signal< sc_lv<32> > extLd8_fu_507_p1;
    sc_signal< sc_lv<32> > extLd_fu_622_p1;
    sc_signal< sc_lv<1> > tmp_73_fu_457_p2;
    sc_signal< sc_lv<1> > tmp_74_fu_462_p2;
    sc_signal< sc_lv<1> > tmp_79_fu_483_p2;
    sc_signal< sc_lv<32> > tmp_80_fu_495_p2;
    sc_signal< sc_lv<32> > smax1_fu_488_p3;
    sc_signal< sc_lv<1> > tmp_88_fu_564_p2;
    sc_signal< sc_lv<32> > smax_fu_569_p3;
    sc_signal< sc_lv<32> > tmp_89_fu_576_p2;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_state9;
    static const sc_lv<13> ap_ST_fsm_state10;
    static const sc_lv<13> ap_ST_fsm_state11;
    static const sc_lv<13> ap_ST_fsm_state12;
    static const sc_lv<13> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<9> ap_const_lv9_1EE;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_agg_result_colind_address0();
    void thread_agg_result_colind_ce0();
    void thread_agg_result_colind_d0();
    void thread_agg_result_colind_we0();
    void thread_agg_result_data_V_ad_496_gep_fu_202_p3();
    void thread_agg_result_data_V_address0();
    void thread_agg_result_data_V_ce0();
    void thread_agg_result_data_V_d0();
    void thread_agg_result_data_V_we0();
    void thread_agg_result_rowptr_address0();
    void thread_agg_result_rowptr_ce0();
    void thread_agg_result_rowptr_d0();
    void thread_agg_result_rowptr_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_j_2_phi_fu_353_p6();
    void thread_ap_phi_mux_k_2_phi_fu_367_p6();
    void thread_ap_ready();
    void thread_csr1_colind_address0();
    void thread_csr1_colind_ce0();
    void thread_csr1_data_V_addr_gep_fu_172_p3();
    void thread_csr1_data_V_address0();
    void thread_csr1_data_V_ce0();
    void thread_csr1_rowptr_address0();
    void thread_csr1_rowptr_address1();
    void thread_csr1_rowptr_ce0();
    void thread_csr1_rowptr_ce1();
    void thread_csr2_colind_address0();
    void thread_csr2_colind_ce0();
    void thread_csr2_data_V_addr_gep_fu_180_p3();
    void thread_csr2_data_V_address0();
    void thread_csr2_data_V_ce0();
    void thread_csr2_rowptr_address0();
    void thread_csr2_rowptr_address1();
    void thread_csr2_rowptr_ce0();
    void thread_csr2_rowptr_ce1();
    void thread_exitcond_fu_432_p2();
    void thread_extLd8_fu_507_p1();
    void thread_extLd_fu_622_p1();
    void thread_grp_fu_418_p2();
    void thread_grp_fu_425_p2();
    void thread_i_3_fu_438_p2();
    void thread_indvars_iv_next_fu_541_p2();
    void thread_j_6_fu_558_p2();
    void thread_k_5_fu_610_p2();
    void thread_smax1_fu_488_p3();
    void thread_smax_fu_569_p3();
    void thread_tmp_73_fu_457_p2();
    void thread_tmp_74_fu_462_p2();
    void thread_tmp_75_fu_467_p2();
    void thread_tmp_76_fu_473_p1();
    void thread_tmp_77_fu_478_p1();
    void thread_tmp_78_fu_512_p2();
    void thread_tmp_79_fu_483_p2();
    void thread_tmp_80_fu_495_p2();
    void thread_tmp_81_fu_535_p1();
    void thread_tmp_82_fu_529_p2();
    void thread_tmp_83_fu_518_p2();
    void thread_tmp_84_fu_524_p1();
    void thread_tmp_85_fu_547_p2();
    void thread_tmp_86_fu_587_p1();
    void thread_tmp_87_fu_552_p1();
    void thread_tmp_88_fu_564_p2();
    void thread_tmp_89_fu_576_p2();
    void thread_tmp_91_fu_599_p2();
    void thread_tmp_92_fu_616_p1();
    void thread_tmp_93_fu_604_p1();
    void thread_tmp_fu_444_p1();
    void thread_tmp_s_fu_451_p1();
    void thread_z_idx_1_fu_593_p2();
    void thread_z_idx_2_fu_582_p2();
    void thread_z_idx_5_fu_627_p2();
    void thread_z_idx_fu_501_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
