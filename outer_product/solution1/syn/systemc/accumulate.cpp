// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "accumulate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic accumulate::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic accumulate::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> accumulate::ap_ST_fsm_state1 = "1";
const sc_lv<11> accumulate::ap_ST_fsm_state2 = "10";
const sc_lv<11> accumulate::ap_ST_fsm_state3 = "100";
const sc_lv<11> accumulate::ap_ST_fsm_state4 = "1000";
const sc_lv<11> accumulate::ap_ST_fsm_state5 = "10000";
const sc_lv<11> accumulate::ap_ST_fsm_state6 = "100000";
const sc_lv<11> accumulate::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> accumulate::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> accumulate::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> accumulate::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> accumulate::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> accumulate::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> accumulate::ap_const_lv32_5 = "101";
const sc_lv<1> accumulate::ap_const_lv1_0 = "0";
const sc_lv<1> accumulate::ap_const_lv1_1 = "1";
const sc_lv<32> accumulate::ap_const_lv32_1 = "1";
const sc_lv<32> accumulate::ap_const_lv32_2 = "10";
const sc_lv<32> accumulate::ap_const_lv32_3 = "11";
const sc_lv<32> accumulate::ap_const_lv32_4 = "100";
const sc_lv<32> accumulate::ap_const_lv32_7 = "111";
const sc_lv<32> accumulate::ap_const_lv32_8 = "1000";
const sc_lv<32> accumulate::ap_const_lv32_9 = "1001";
const sc_lv<32> accumulate::ap_const_lv32_A = "1010";
const sc_lv<3> accumulate::ap_const_lv3_0 = "000";
const sc_lv<32> accumulate::ap_const_lv32_6 = "110";
const sc_lv<64> accumulate::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> accumulate::ap_const_lv3_4 = "100";
const sc_lv<3> accumulate::ap_const_lv3_1 = "1";
const bool accumulate::ap_const_boolean_1 = true;

accumulate::accumulate(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_agg_result_colind_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_12_fu_534_p1 );
    sensitive << ( tmp_12_reg_757 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_5_fu_539_p1 );
    sensitive << ( tmp_14_fu_598_p1 );
    sensitive << ( tmp_19_fu_627_p1 );

    SC_METHOD(thread_agg_result_colind_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_agg_result_colind_d0);
    sensitive << ( csr1_colind_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( csr1_colind_load_reg_744 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( extLd8_fu_517_p1 );
    sensitive << ( extLd_fu_633_p1 );

    SC_METHOD(thread_agg_result_colind_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );
    sensitive << ( tmp_11_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_agg_result_data_V_ad_41_gep_fu_202_p3);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( tmp_12_reg_757 );

    SC_METHOD(thread_agg_result_data_V_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( tmp_12_reg_757 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( agg_result_data_V_ad_41_gep_fu_202_p3 );
    sensitive << ( tmp_5_fu_539_p1 );
    sensitive << ( tmp_14_fu_598_p1 );
    sensitive << ( tmp_19_fu_627_p1 );

    SC_METHOD(thread_agg_result_data_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_agg_result_data_V_d0);
    sensitive << ( csr1_data_V_q0 );
    sensitive << ( csr2_data_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_10_fu_545_p2 );

    SC_METHOD(thread_agg_result_data_V_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_reg_749 );
    sensitive << ( tmp_11_reg_753 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_agg_result_rowptr_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_reg_657 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_fu_454_p1 );

    SC_METHOD(thread_agg_result_rowptr_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_agg_result_rowptr_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( z_idx_2_reg_807 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_agg_result_rowptr_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_18_fu_610_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_442_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_442_p2 );

    SC_METHOD(thread_csr1_colind_address0);
    sensitive << ( tmp_9_fu_483_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_15_fu_563_p1 );

    SC_METHOD(thread_csr1_colind_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_csr1_data_V_addr_gep_fu_172_p3);
    sensitive << ( tmp_9_reg_716 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );

    SC_METHOD(thread_csr1_data_V_address0);
    sensitive << ( tmp_9_reg_716 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );
    sensitive << ( tmp_11_fu_528_p2 );
    sensitive << ( csr1_data_V_addr_gep_fu_172_p3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_15_fu_563_p1 );

    SC_METHOD(thread_csr1_data_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );
    sensitive << ( tmp_11_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_csr1_rowptr_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_454_p1 );

    SC_METHOD(thread_csr1_rowptr_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_461_p1 );

    SC_METHOD(thread_csr1_rowptr_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_csr1_rowptr_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_csr2_colind_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_488_p1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_20_fu_615_p1 );

    SC_METHOD(thread_csr2_colind_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_csr2_data_V_addr_gep_fu_180_p3);
    sensitive << ( tmp_1_reg_727 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );

    SC_METHOD(thread_csr2_data_V_address0);
    sensitive << ( tmp_1_reg_727 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );
    sensitive << ( tmp_11_fu_528_p2 );
    sensitive << ( csr2_data_V_addr_gep_fu_180_p3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_20_fu_615_p1 );

    SC_METHOD(thread_csr2_data_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );
    sensitive << ( tmp_11_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_csr2_rowptr_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_454_p1 );

    SC_METHOD(thread_csr2_rowptr_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_461_p1 );

    SC_METHOD(thread_csr2_rowptr_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_csr2_rowptr_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_exitcond_fu_442_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_308 );

    SC_METHOD(thread_extLd8_fu_517_p1);
    sensitive << ( csr2_colind_q0 );

    SC_METHOD(thread_extLd_fu_633_p1);
    sensitive << ( csr2_colind_q0 );

    SC_METHOD(thread_grp_fu_418_p2);
    sensitive << ( k1_reg_339 );

    SC_METHOD(thread_grp_fu_424_p2);
    sensitive << ( j6_reg_329 );

    SC_METHOD(thread_i_3_fu_448_p2);
    sensitive << ( i_reg_308 );

    SC_METHOD(thread_indvars_iv_next_fu_552_p2);
    sensitive << ( indvars_iv_reg_319 );

    SC_METHOD(thread_j_6_fu_569_p2);
    sensitive << ( j_3_reg_388 );

    SC_METHOD(thread_k_5_fu_621_p2);
    sensitive << ( k_3_reg_408 );

    SC_METHOD(thread_smax1_fu_498_p3);
    sensitive << ( end_idx_1_reg_687 );
    sensitive << ( j6_reg_329 );
    sensitive << ( tmp_3_fu_493_p2 );

    SC_METHOD(thread_smax_fu_580_p3);
    sensitive << ( end_idx_2_reg_700 );
    sensitive << ( k1_reg_339 );
    sensitive << ( tmp_16_fu_575_p2 );

    SC_METHOD(thread_tmp_10_fu_545_p2);
    sensitive << ( csr1_data_V_q0 );
    sensitive << ( csr2_data_V_q0 );

    SC_METHOD(thread_tmp_11_fu_528_p2);
    sensitive << ( csr1_colind_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_522_p2 );
    sensitive << ( extLd8_fu_517_p1 );

    SC_METHOD(thread_tmp_12_fu_534_p1);
    sensitive << ( indvars_iv_reg_319 );

    SC_METHOD(thread_tmp_13_fu_558_p2);
    sensitive << ( end_idx_1_reg_687 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j_3_reg_388 );

    SC_METHOD(thread_tmp_14_fu_598_p1);
    sensitive << ( z_idx_3_reg_377 );

    SC_METHOD(thread_tmp_15_fu_563_p1);
    sensitive << ( j_3_reg_388 );

    SC_METHOD(thread_tmp_16_fu_575_p2);
    sensitive << ( end_idx_2_reg_700 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_13_fu_558_p2 );
    sensitive << ( k1_reg_339 );

    SC_METHOD(thread_tmp_17_fu_587_p2);
    sensitive << ( k1_reg_339 );
    sensitive << ( smax_fu_580_p3 );

    SC_METHOD(thread_tmp_18_fu_610_p2);
    sensitive << ( end_idx_2_reg_700 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( k_3_reg_408 );

    SC_METHOD(thread_tmp_19_fu_627_p1);
    sensitive << ( z_idx_4_reg_398 );

    SC_METHOD(thread_tmp_1_fu_488_p1);
    sensitive << ( k1_reg_339 );

    SC_METHOD(thread_tmp_20_fu_615_p1);
    sensitive << ( k_3_reg_408 );

    SC_METHOD(thread_tmp_2_fu_522_p2);
    sensitive << ( csr1_colind_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( extLd8_fu_517_p1 );

    SC_METHOD(thread_tmp_3_fu_493_p2);
    sensitive << ( end_idx_1_reg_687 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_fu_477_p2 );
    sensitive << ( j6_reg_329 );

    SC_METHOD(thread_tmp_4_fu_505_p2);
    sensitive << ( indvars_iv_reg_319 );
    sensitive << ( j6_reg_329 );

    SC_METHOD(thread_tmp_5_fu_539_p1);
    sensitive << ( indvars_iv_reg_319 );

    SC_METHOD(thread_tmp_6_fu_467_p2);
    sensitive << ( end_idx_1_reg_687 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j6_reg_329 );

    SC_METHOD(thread_tmp_7_fu_472_p2);
    sensitive << ( end_idx_2_reg_700 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k1_reg_339 );

    SC_METHOD(thread_tmp_8_fu_477_p2);
    sensitive << ( tmp_6_fu_467_p2 );
    sensitive << ( tmp_7_fu_472_p2 );

    SC_METHOD(thread_tmp_9_fu_483_p1);
    sensitive << ( j6_reg_329 );

    SC_METHOD(thread_tmp_fu_454_p1);
    sensitive << ( i_reg_308 );

    SC_METHOD(thread_tmp_s_fu_461_p1);
    sensitive << ( i_3_fu_448_p2 );

    SC_METHOD(thread_z_idx_1_fu_604_p2);
    sensitive << ( z_idx_3_reg_377 );

    SC_METHOD(thread_z_idx_2_fu_593_p2);
    sensitive << ( z_idx_reg_738 );
    sensitive << ( tmp_17_fu_587_p2 );

    SC_METHOD(thread_z_idx_5_fu_638_p2);
    sensitive << ( z_idx_4_reg_398 );

    SC_METHOD(thread_z_idx_fu_511_p2);
    sensitive << ( tmp_4_fu_505_p2 );
    sensitive << ( smax1_fu_498_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_fu_477_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_13_fu_558_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_18_fu_610_p2 );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "accumulate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, agg_result_rowptr_address0, "(port)agg_result_rowptr_address0");
    sc_trace(mVcdFile, agg_result_rowptr_ce0, "(port)agg_result_rowptr_ce0");
    sc_trace(mVcdFile, agg_result_rowptr_we0, "(port)agg_result_rowptr_we0");
    sc_trace(mVcdFile, agg_result_rowptr_d0, "(port)agg_result_rowptr_d0");
    sc_trace(mVcdFile, agg_result_rowptr_q0, "(port)agg_result_rowptr_q0");
    sc_trace(mVcdFile, agg_result_colind_address0, "(port)agg_result_colind_address0");
    sc_trace(mVcdFile, agg_result_colind_ce0, "(port)agg_result_colind_ce0");
    sc_trace(mVcdFile, agg_result_colind_we0, "(port)agg_result_colind_we0");
    sc_trace(mVcdFile, agg_result_colind_d0, "(port)agg_result_colind_d0");
    sc_trace(mVcdFile, agg_result_data_V_address0, "(port)agg_result_data_V_address0");
    sc_trace(mVcdFile, agg_result_data_V_ce0, "(port)agg_result_data_V_ce0");
    sc_trace(mVcdFile, agg_result_data_V_we0, "(port)agg_result_data_V_we0");
    sc_trace(mVcdFile, agg_result_data_V_d0, "(port)agg_result_data_V_d0");
    sc_trace(mVcdFile, csr1_rowptr_address0, "(port)csr1_rowptr_address0");
    sc_trace(mVcdFile, csr1_rowptr_ce0, "(port)csr1_rowptr_ce0");
    sc_trace(mVcdFile, csr1_rowptr_q0, "(port)csr1_rowptr_q0");
    sc_trace(mVcdFile, csr1_rowptr_address1, "(port)csr1_rowptr_address1");
    sc_trace(mVcdFile, csr1_rowptr_ce1, "(port)csr1_rowptr_ce1");
    sc_trace(mVcdFile, csr1_rowptr_q1, "(port)csr1_rowptr_q1");
    sc_trace(mVcdFile, csr1_colind_address0, "(port)csr1_colind_address0");
    sc_trace(mVcdFile, csr1_colind_ce0, "(port)csr1_colind_ce0");
    sc_trace(mVcdFile, csr1_colind_q0, "(port)csr1_colind_q0");
    sc_trace(mVcdFile, csr1_data_V_address0, "(port)csr1_data_V_address0");
    sc_trace(mVcdFile, csr1_data_V_ce0, "(port)csr1_data_V_ce0");
    sc_trace(mVcdFile, csr1_data_V_q0, "(port)csr1_data_V_q0");
    sc_trace(mVcdFile, csr2_rowptr_address0, "(port)csr2_rowptr_address0");
    sc_trace(mVcdFile, csr2_rowptr_ce0, "(port)csr2_rowptr_ce0");
    sc_trace(mVcdFile, csr2_rowptr_q0, "(port)csr2_rowptr_q0");
    sc_trace(mVcdFile, csr2_rowptr_address1, "(port)csr2_rowptr_address1");
    sc_trace(mVcdFile, csr2_rowptr_ce1, "(port)csr2_rowptr_ce1");
    sc_trace(mVcdFile, csr2_rowptr_q1, "(port)csr2_rowptr_q1");
    sc_trace(mVcdFile, csr2_colind_address0, "(port)csr2_colind_address0");
    sc_trace(mVcdFile, csr2_colind_ce0, "(port)csr2_colind_ce0");
    sc_trace(mVcdFile, csr2_colind_q0, "(port)csr2_colind_q0");
    sc_trace(mVcdFile, csr2_data_V_address0, "(port)csr2_data_V_address0");
    sc_trace(mVcdFile, csr2_data_V_ce0, "(port)csr2_data_V_ce0");
    sc_trace(mVcdFile, csr2_data_V_q0, "(port)csr2_data_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_418_p2, "grp_fu_418_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_2_reg_749, "tmp_2_reg_749");
    sc_trace(mVcdFile, tmp_11_reg_753, "tmp_11_reg_753");
    sc_trace(mVcdFile, grp_fu_424_p2, "grp_fu_424_p2");
    sc_trace(mVcdFile, i_3_fu_448_p2, "i_3_fu_448_p2");
    sc_trace(mVcdFile, i_3_reg_647, "i_3_reg_647");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_fu_442_p2, "exitcond_fu_442_p2");
    sc_trace(mVcdFile, tmp_s_fu_461_p1, "tmp_s_fu_461_p1");
    sc_trace(mVcdFile, tmp_s_reg_657, "tmp_s_reg_657");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, end_idx_1_reg_687, "end_idx_1_reg_687");
    sc_trace(mVcdFile, end_idx_2_reg_700, "end_idx_2_reg_700");
    sc_trace(mVcdFile, tmp_9_fu_483_p1, "tmp_9_fu_483_p1");
    sc_trace(mVcdFile, tmp_9_reg_716, "tmp_9_reg_716");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_8_fu_477_p2, "tmp_8_fu_477_p2");
    sc_trace(mVcdFile, tmp_1_fu_488_p1, "tmp_1_fu_488_p1");
    sc_trace(mVcdFile, tmp_1_reg_727, "tmp_1_reg_727");
    sc_trace(mVcdFile, z_idx_fu_511_p2, "z_idx_fu_511_p2");
    sc_trace(mVcdFile, z_idx_reg_738, "z_idx_reg_738");
    sc_trace(mVcdFile, csr1_colind_load_reg_744, "csr1_colind_load_reg_744");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_2_fu_522_p2, "tmp_2_fu_522_p2");
    sc_trace(mVcdFile, tmp_11_fu_528_p2, "tmp_11_fu_528_p2");
    sc_trace(mVcdFile, tmp_12_fu_534_p1, "tmp_12_fu_534_p1");
    sc_trace(mVcdFile, tmp_12_reg_757, "tmp_12_reg_757");
    sc_trace(mVcdFile, csr1_data_V_addr_gep_fu_172_p3, "csr1_data_V_addr_gep_fu_172_p3");
    sc_trace(mVcdFile, csr2_data_V_addr_gep_fu_180_p3, "csr2_data_V_addr_gep_fu_180_p3");
    sc_trace(mVcdFile, indvars_iv_next_fu_552_p2, "indvars_iv_next_fu_552_p2");
    sc_trace(mVcdFile, indvars_iv_next_reg_784, "indvars_iv_next_reg_784");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_13_fu_558_p2, "tmp_13_fu_558_p2");
    sc_trace(mVcdFile, j_6_fu_569_p2, "j_6_fu_569_p2");
    sc_trace(mVcdFile, j_6_reg_802, "j_6_reg_802");
    sc_trace(mVcdFile, z_idx_2_fu_593_p2, "z_idx_2_fu_593_p2");
    sc_trace(mVcdFile, z_idx_2_reg_807, "z_idx_2_reg_807");
    sc_trace(mVcdFile, z_idx_1_fu_604_p2, "z_idx_1_fu_604_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_18_fu_610_p2, "tmp_18_fu_610_p2");
    sc_trace(mVcdFile, k_5_fu_621_p2, "k_5_fu_621_p2");
    sc_trace(mVcdFile, k_5_reg_830, "k_5_reg_830");
    sc_trace(mVcdFile, z_idx_5_fu_638_p2, "z_idx_5_fu_638_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_reg_308, "i_reg_308");
    sc_trace(mVcdFile, indvars_iv_reg_319, "indvars_iv_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, j6_reg_329, "j6_reg_329");
    sc_trace(mVcdFile, k1_reg_339, "k1_reg_339");
    sc_trace(mVcdFile, j_2_reg_349, "j_2_reg_349");
    sc_trace(mVcdFile, k_2_reg_363, "k_2_reg_363");
    sc_trace(mVcdFile, z_idx_3_reg_377, "z_idx_3_reg_377");
    sc_trace(mVcdFile, j_3_reg_388, "j_3_reg_388");
    sc_trace(mVcdFile, z_idx_4_reg_398, "z_idx_4_reg_398");
    sc_trace(mVcdFile, k_3_reg_408, "k_3_reg_408");
    sc_trace(mVcdFile, tmp_fu_454_p1, "tmp_fu_454_p1");
    sc_trace(mVcdFile, agg_result_data_V_ad_41_gep_fu_202_p3, "agg_result_data_V_ad_41_gep_fu_202_p3");
    sc_trace(mVcdFile, tmp_5_fu_539_p1, "tmp_5_fu_539_p1");
    sc_trace(mVcdFile, tmp_15_fu_563_p1, "tmp_15_fu_563_p1");
    sc_trace(mVcdFile, tmp_14_fu_598_p1, "tmp_14_fu_598_p1");
    sc_trace(mVcdFile, tmp_20_fu_615_p1, "tmp_20_fu_615_p1");
    sc_trace(mVcdFile, tmp_19_fu_627_p1, "tmp_19_fu_627_p1");
    sc_trace(mVcdFile, extLd8_fu_517_p1, "extLd8_fu_517_p1");
    sc_trace(mVcdFile, extLd_fu_633_p1, "extLd_fu_633_p1");
    sc_trace(mVcdFile, tmp_10_fu_545_p2, "tmp_10_fu_545_p2");
    sc_trace(mVcdFile, tmp_6_fu_467_p2, "tmp_6_fu_467_p2");
    sc_trace(mVcdFile, tmp_7_fu_472_p2, "tmp_7_fu_472_p2");
    sc_trace(mVcdFile, tmp_3_fu_493_p2, "tmp_3_fu_493_p2");
    sc_trace(mVcdFile, tmp_4_fu_505_p2, "tmp_4_fu_505_p2");
    sc_trace(mVcdFile, smax1_fu_498_p3, "smax1_fu_498_p3");
    sc_trace(mVcdFile, tmp_16_fu_575_p2, "tmp_16_fu_575_p2");
    sc_trace(mVcdFile, smax_fu_580_p3, "smax_fu_580_p3");
    sc_trace(mVcdFile, tmp_17_fu_587_p2, "tmp_17_fu_587_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

accumulate::~accumulate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void accumulate::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_610_p2.read()))) {
        i_reg_308 = i_3_reg_647.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_308 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvars_iv_reg_319 = agg_result_rowptr_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        indvars_iv_reg_319 = indvars_iv_next_reg_784.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j6_reg_329 = csr1_rowptr_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j6_reg_329 = j_2_reg_349.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_753.read()))) {
        j_2_reg_349 = j6_reg_329.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1)))) {
        j_2_reg_349 = grp_fu_424_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_3_reg_388 = j_6_reg_802.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_477_p2.read()))) {
        j_3_reg_388 = j6_reg_329.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k1_reg_339 = csr2_rowptr_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        k1_reg_339 = k_2_reg_363.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1))) {
        k_2_reg_363 = k1_reg_339.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_753.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1)))) {
        k_2_reg_363 = grp_fu_418_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        k_3_reg_408 = k_5_reg_830.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_558_p2.read()))) {
        k_3_reg_408 = k1_reg_339.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        z_idx_3_reg_377 = z_idx_1_fu_604_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_477_p2.read()))) {
        z_idx_3_reg_377 = indvars_iv_reg_319.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        z_idx_4_reg_398 = z_idx_5_fu_638_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_558_p2.read()))) {
        z_idx_4_reg_398 = z_idx_reg_738.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        csr1_colind_load_reg_744 = csr1_colind_q0.read();
        tmp_2_reg_749 = tmp_2_fu_522_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        end_idx_1_reg_687 = csr1_rowptr_q1.read();
        end_idx_2_reg_700 = csr2_rowptr_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_3_reg_647 = i_3_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        indvars_iv_next_reg_784 = indvars_iv_next_fu_552_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_558_p2.read()))) {
        j_6_reg_802 = j_6_fu_569_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_fu_610_p2.read()))) {
        k_5_reg_830 = k_5_fu_621_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_522_p2.read()))) {
        tmp_11_reg_753 = tmp_11_fu_528_p2.read();
        tmp_12_reg_757 = tmp_12_fu_534_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_477_p2.read()))) {
        tmp_1_reg_727 = tmp_1_fu_488_p1.read();
        tmp_9_reg_716 = tmp_9_fu_483_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()))) {
        tmp_s_reg_657 = tmp_s_fu_461_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_558_p2.read()))) {
        z_idx_2_reg_807 = z_idx_2_fu_593_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_477_p2.read()))) {
        z_idx_reg_738 = z_idx_fu_511_p2.read();
    }
}

void accumulate::thread_agg_result_colind_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        agg_result_colind_address0 =  (sc_lv<5>) (tmp_19_fu_627_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        agg_result_colind_address0 =  (sc_lv<5>) (tmp_14_fu_598_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1))) {
        agg_result_colind_address0 =  (sc_lv<5>) (tmp_5_fu_539_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1))) {
        agg_result_colind_address0 =  (sc_lv<5>) (tmp_12_reg_757.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        agg_result_colind_address0 =  (sc_lv<5>) (tmp_12_fu_534_p1.read());
    } else {
        agg_result_colind_address0 = "XXXXX";
    }
}

void accumulate::thread_agg_result_colind_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        agg_result_colind_ce0 = ap_const_logic_1;
    } else {
        agg_result_colind_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_agg_result_colind_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        agg_result_colind_d0 = extLd_fu_633_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        agg_result_colind_d0 = csr1_colind_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1)))) {
        agg_result_colind_d0 = csr1_colind_load_reg_744.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        agg_result_colind_d0 = extLd8_fu_517_p1.read();
    } else {
        agg_result_colind_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void accumulate::thread_agg_result_colind_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_522_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_528_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        agg_result_colind_we0 = ap_const_logic_1;
    } else {
        agg_result_colind_we0 = ap_const_logic_0;
    }
}

void accumulate::thread_agg_result_data_V_ad_41_gep_fu_202_p3() {
    agg_result_data_V_ad_41_gep_fu_202_p3 =  (sc_lv<5>) (tmp_12_reg_757.read());
}

void accumulate::thread_agg_result_data_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        agg_result_data_V_address0 =  (sc_lv<5>) (tmp_19_fu_627_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        agg_result_data_V_address0 =  (sc_lv<5>) (tmp_14_fu_598_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1))) {
        agg_result_data_V_address0 =  (sc_lv<5>) (tmp_5_fu_539_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1))) {
        agg_result_data_V_address0 = agg_result_data_V_ad_41_gep_fu_202_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_753.read()))) {
        agg_result_data_V_address0 =  (sc_lv<5>) (tmp_12_reg_757.read());
    } else {
        agg_result_data_V_address0 = "XXXXX";
    }
}

void accumulate::thread_agg_result_data_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_753.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        agg_result_data_V_ce0 = ap_const_logic_1;
    } else {
        agg_result_data_V_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_agg_result_data_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1))) {
        agg_result_data_V_d0 = tmp_10_fu_545_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        agg_result_data_V_d0 = csr1_data_V_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_753.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        agg_result_data_V_d0 = csr2_data_V_q0.read();
    } else {
        agg_result_data_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void accumulate::thread_agg_result_data_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_753.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_749.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_11_reg_753.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        agg_result_data_V_we0 = ap_const_logic_1;
    } else {
        agg_result_data_V_we0 = ap_const_logic_0;
    }
}

void accumulate::thread_agg_result_rowptr_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        agg_result_rowptr_address0 =  (sc_lv<3>) (tmp_s_reg_657.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        agg_result_rowptr_address0 =  (sc_lv<3>) (tmp_fu_454_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        agg_result_rowptr_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        agg_result_rowptr_address0 =  (sc_lv<3>) ("XXX");
    }
}

void accumulate::thread_agg_result_rowptr_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        agg_result_rowptr_ce0 = ap_const_logic_1;
    } else {
        agg_result_rowptr_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_agg_result_rowptr_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        agg_result_rowptr_d0 = z_idx_2_reg_807.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        agg_result_rowptr_d0 = ap_const_lv32_0;
    } else {
        agg_result_rowptr_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void accumulate::thread_agg_result_rowptr_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_610_p2.read())))) {
        agg_result_rowptr_we0 = ap_const_logic_1;
    } else {
        agg_result_rowptr_we0 = ap_const_logic_0;
    }
}

void accumulate::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void accumulate::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void accumulate::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void accumulate::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void accumulate::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void accumulate::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void accumulate::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void accumulate::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void accumulate::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void accumulate::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void accumulate::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void accumulate::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_442_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void accumulate::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void accumulate::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_442_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void accumulate::thread_csr1_colind_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        csr1_colind_address0 =  (sc_lv<5>) (tmp_15_fu_563_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        csr1_colind_address0 =  (sc_lv<5>) (tmp_9_fu_483_p1.read());
    } else {
        csr1_colind_address0 = "XXXXX";
    }
}

void accumulate::thread_csr1_colind_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        csr1_colind_ce0 = ap_const_logic_1;
    } else {
        csr1_colind_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_csr1_data_V_addr_gep_fu_172_p3() {
    csr1_data_V_addr_gep_fu_172_p3 =  (sc_lv<5>) (tmp_9_reg_716.read());
}

void accumulate::thread_csr1_data_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        csr1_data_V_address0 =  (sc_lv<5>) (tmp_15_fu_563_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_522_p2.read()))) {
        csr1_data_V_address0 = csr1_data_V_addr_gep_fu_172_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_522_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_528_p2.read()))) {
        csr1_data_V_address0 =  (sc_lv<5>) (tmp_9_reg_716.read());
    } else {
        csr1_data_V_address0 = "XXXXX";
    }
}

void accumulate::thread_csr1_data_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_522_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_528_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_522_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        csr1_data_V_ce0 = ap_const_logic_1;
    } else {
        csr1_data_V_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_csr1_rowptr_address0() {
    csr1_rowptr_address0 =  (sc_lv<3>) (tmp_fu_454_p1.read());
}

void accumulate::thread_csr1_rowptr_address1() {
    csr1_rowptr_address1 =  (sc_lv<3>) (tmp_s_fu_461_p1.read());
}

void accumulate::thread_csr1_rowptr_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        csr1_rowptr_ce0 = ap_const_logic_1;
    } else {
        csr1_rowptr_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_csr1_rowptr_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        csr1_rowptr_ce1 = ap_const_logic_1;
    } else {
        csr1_rowptr_ce1 = ap_const_logic_0;
    }
}

void accumulate::thread_csr2_colind_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        csr2_colind_address0 =  (sc_lv<5>) (tmp_20_fu_615_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        csr2_colind_address0 =  (sc_lv<5>) (tmp_1_fu_488_p1.read());
    } else {
        csr2_colind_address0 = "XXXXX";
    }
}

void accumulate::thread_csr2_colind_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        csr2_colind_ce0 = ap_const_logic_1;
    } else {
        csr2_colind_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_csr2_data_V_addr_gep_fu_180_p3() {
    csr2_data_V_addr_gep_fu_180_p3 =  (sc_lv<5>) (tmp_1_reg_727.read());
}

void accumulate::thread_csr2_data_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        csr2_data_V_address0 =  (sc_lv<5>) (tmp_20_fu_615_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_522_p2.read()))) {
        csr2_data_V_address0 = csr2_data_V_addr_gep_fu_180_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_522_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_528_p2.read()))) {
        csr2_data_V_address0 =  (sc_lv<5>) (tmp_1_reg_727.read());
    } else {
        csr2_data_V_address0 = "XXXXX";
    }
}

void accumulate::thread_csr2_data_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_522_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_528_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_522_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        csr2_data_V_ce0 = ap_const_logic_1;
    } else {
        csr2_data_V_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_csr2_rowptr_address0() {
    csr2_rowptr_address0 =  (sc_lv<3>) (tmp_fu_454_p1.read());
}

void accumulate::thread_csr2_rowptr_address1() {
    csr2_rowptr_address1 =  (sc_lv<3>) (tmp_s_fu_461_p1.read());
}

void accumulate::thread_csr2_rowptr_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        csr2_rowptr_ce0 = ap_const_logic_1;
    } else {
        csr2_rowptr_ce0 = ap_const_logic_0;
    }
}

void accumulate::thread_csr2_rowptr_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        csr2_rowptr_ce1 = ap_const_logic_1;
    } else {
        csr2_rowptr_ce1 = ap_const_logic_0;
    }
}

void accumulate::thread_exitcond_fu_442_p2() {
    exitcond_fu_442_p2 = (!i_reg_308.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_308.read() == ap_const_lv3_4);
}

void accumulate::thread_extLd8_fu_517_p1() {
    extLd8_fu_517_p1 = esl_sext<32,5>(csr2_colind_q0.read());
}

void accumulate::thread_extLd_fu_633_p1() {
    extLd_fu_633_p1 = esl_sext<32,5>(csr2_colind_q0.read());
}

void accumulate::thread_grp_fu_418_p2() {
    grp_fu_418_p2 = (!k1_reg_339.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(k1_reg_339.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void accumulate::thread_grp_fu_424_p2() {
    grp_fu_424_p2 = (!j6_reg_329.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(j6_reg_329.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void accumulate::thread_i_3_fu_448_p2() {
    i_3_fu_448_p2 = (!i_reg_308.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_308.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void accumulate::thread_indvars_iv_next_fu_552_p2() {
    indvars_iv_next_fu_552_p2 = (!indvars_iv_reg_319.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(indvars_iv_reg_319.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void accumulate::thread_j_6_fu_569_p2() {
    j_6_fu_569_p2 = (!j_3_reg_388.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(j_3_reg_388.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void accumulate::thread_k_5_fu_621_p2() {
    k_5_fu_621_p2 = (!k_3_reg_408.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(k_3_reg_408.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void accumulate::thread_smax1_fu_498_p3() {
    smax1_fu_498_p3 = (!tmp_3_fu_493_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_493_p2.read()[0].to_bool())? j6_reg_329.read(): end_idx_1_reg_687.read());
}

void accumulate::thread_smax_fu_580_p3() {
    smax_fu_580_p3 = (!tmp_16_fu_575_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_575_p2.read()[0].to_bool())? k1_reg_339.read(): end_idx_2_reg_700.read());
}

void accumulate::thread_tmp_10_fu_545_p2() {
    tmp_10_fu_545_p2 = (!csr2_data_V_q0.read().is_01() || !csr1_data_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(csr2_data_V_q0.read()) + sc_biguint<32>(csr1_data_V_q0.read()));
}

void accumulate::thread_tmp_11_fu_528_p2() {
    tmp_11_fu_528_p2 = (!csr1_colind_q0.read().is_01() || !extLd8_fu_517_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(csr1_colind_q0.read()) < sc_bigint<32>(extLd8_fu_517_p1.read()));
}

void accumulate::thread_tmp_12_fu_534_p1() {
    tmp_12_fu_534_p1 = esl_sext<64,32>(indvars_iv_reg_319.read());
}

void accumulate::thread_tmp_13_fu_558_p2() {
    tmp_13_fu_558_p2 = (!j_3_reg_388.read().is_01() || !end_idx_1_reg_687.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_3_reg_388.read()) < sc_bigint<32>(end_idx_1_reg_687.read()));
}

void accumulate::thread_tmp_14_fu_598_p1() {
    tmp_14_fu_598_p1 = esl_sext<64,32>(z_idx_3_reg_377.read());
}

void accumulate::thread_tmp_15_fu_563_p1() {
    tmp_15_fu_563_p1 = esl_sext<64,32>(j_3_reg_388.read());
}

void accumulate::thread_tmp_16_fu_575_p2() {
    tmp_16_fu_575_p2 = (!k1_reg_339.read().is_01() || !end_idx_2_reg_700.read().is_01())? sc_lv<1>(): (sc_bigint<32>(k1_reg_339.read()) > sc_bigint<32>(end_idx_2_reg_700.read()));
}

void accumulate::thread_tmp_17_fu_587_p2() {
    tmp_17_fu_587_p2 = (!smax_fu_580_p3.read().is_01() || !k1_reg_339.read().is_01())? sc_lv<32>(): (sc_biguint<32>(smax_fu_580_p3.read()) - sc_bigint<32>(k1_reg_339.read()));
}

void accumulate::thread_tmp_18_fu_610_p2() {
    tmp_18_fu_610_p2 = (!k_3_reg_408.read().is_01() || !end_idx_2_reg_700.read().is_01())? sc_lv<1>(): (sc_bigint<32>(k_3_reg_408.read()) < sc_bigint<32>(end_idx_2_reg_700.read()));
}

void accumulate::thread_tmp_19_fu_627_p1() {
    tmp_19_fu_627_p1 = esl_sext<64,32>(z_idx_4_reg_398.read());
}

void accumulate::thread_tmp_1_fu_488_p1() {
    tmp_1_fu_488_p1 = esl_sext<64,32>(k1_reg_339.read());
}

void accumulate::thread_tmp_20_fu_615_p1() {
    tmp_20_fu_615_p1 = esl_sext<64,32>(k_3_reg_408.read());
}

void accumulate::thread_tmp_2_fu_522_p2() {
    tmp_2_fu_522_p2 = (!csr1_colind_q0.read().is_01() || !extLd8_fu_517_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(csr1_colind_q0.read() == extLd8_fu_517_p1.read());
}

void accumulate::thread_tmp_3_fu_493_p2() {
    tmp_3_fu_493_p2 = (!j6_reg_329.read().is_01() || !end_idx_1_reg_687.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j6_reg_329.read()) > sc_bigint<32>(end_idx_1_reg_687.read()));
}

void accumulate::thread_tmp_4_fu_505_p2() {
    tmp_4_fu_505_p2 = (!indvars_iv_reg_319.read().is_01() || !j6_reg_329.read().is_01())? sc_lv<32>(): (sc_bigint<32>(indvars_iv_reg_319.read()) - sc_bigint<32>(j6_reg_329.read()));
}

void accumulate::thread_tmp_5_fu_539_p1() {
    tmp_5_fu_539_p1 = esl_sext<64,32>(indvars_iv_reg_319.read());
}

void accumulate::thread_tmp_6_fu_467_p2() {
    tmp_6_fu_467_p2 = (!j6_reg_329.read().is_01() || !end_idx_1_reg_687.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j6_reg_329.read()) < sc_bigint<32>(end_idx_1_reg_687.read()));
}

void accumulate::thread_tmp_7_fu_472_p2() {
    tmp_7_fu_472_p2 = (!k1_reg_339.read().is_01() || !end_idx_2_reg_700.read().is_01())? sc_lv<1>(): (sc_bigint<32>(k1_reg_339.read()) < sc_bigint<32>(end_idx_2_reg_700.read()));
}

void accumulate::thread_tmp_8_fu_477_p2() {
    tmp_8_fu_477_p2 = (tmp_6_fu_467_p2.read() & tmp_7_fu_472_p2.read());
}

void accumulate::thread_tmp_9_fu_483_p1() {
    tmp_9_fu_483_p1 = esl_sext<64,32>(j6_reg_329.read());
}

void accumulate::thread_tmp_fu_454_p1() {
    tmp_fu_454_p1 = esl_zext<64,3>(i_reg_308.read());
}

void accumulate::thread_tmp_s_fu_461_p1() {
    tmp_s_fu_461_p1 = esl_zext<64,3>(i_3_fu_448_p2.read());
}

void accumulate::thread_z_idx_1_fu_604_p2() {
    z_idx_1_fu_604_p2 = (!z_idx_3_reg_377.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(z_idx_3_reg_377.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void accumulate::thread_z_idx_2_fu_593_p2() {
    z_idx_2_fu_593_p2 = (!z_idx_reg_738.read().is_01() || !tmp_17_fu_587_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(z_idx_reg_738.read()) + sc_biguint<32>(tmp_17_fu_587_p2.read()));
}

void accumulate::thread_z_idx_5_fu_638_p2() {
    z_idx_5_fu_638_p2 = (!z_idx_4_reg_398.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(z_idx_4_reg_398.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void accumulate::thread_z_idx_fu_511_p2() {
    z_idx_fu_511_p2 = (!tmp_4_fu_505_p2.read().is_01() || !smax1_fu_498_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_4_fu_505_p2.read()) + sc_biguint<32>(smax1_fu_498_p3.read()));
}

void accumulate::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_442_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_477_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_558_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_610_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

