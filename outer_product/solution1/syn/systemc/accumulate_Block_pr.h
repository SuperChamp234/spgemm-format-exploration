// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _accumulate_Block_pr_HH_
#define _accumulate_Block_pr_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct accumulate_Block_pr : public sc_module {
    // Port declarations 44
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > agg_result_rowptr_address0;
    sc_out< sc_logic > agg_result_rowptr_ce0;
    sc_out< sc_logic > agg_result_rowptr_we0;
    sc_out< sc_lv<32> > agg_result_rowptr_d0;
    sc_in< sc_lv<32> > agg_result_rowptr_q0;
    sc_out< sc_lv<3> > csr1_rowptr_address0;
    sc_out< sc_logic > csr1_rowptr_ce0;
    sc_in< sc_lv<32> > csr1_rowptr_q0;
    sc_out< sc_lv<3> > csr1_rowptr_address1;
    sc_out< sc_logic > csr1_rowptr_ce1;
    sc_in< sc_lv<32> > csr1_rowptr_q1;
    sc_out< sc_lv<3> > csr2_rowptr_address0;
    sc_out< sc_logic > csr2_rowptr_ce0;
    sc_in< sc_lv<32> > csr2_rowptr_q0;
    sc_out< sc_lv<3> > csr2_rowptr_address1;
    sc_out< sc_logic > csr2_rowptr_ce1;
    sc_in< sc_lv<32> > csr2_rowptr_q1;
    sc_out< sc_lv<5> > csr1_data_V_address0;
    sc_out< sc_logic > csr1_data_V_ce0;
    sc_in< sc_lv<32> > csr1_data_V_q0;
    sc_out< sc_lv<5> > csr2_data_V_address0;
    sc_out< sc_logic > csr2_data_V_ce0;
    sc_in< sc_lv<32> > csr2_data_V_q0;
    sc_out< sc_lv<5> > agg_result_data_V_address0;
    sc_out< sc_logic > agg_result_data_V_ce0;
    sc_out< sc_logic > agg_result_data_V_we0;
    sc_out< sc_lv<32> > agg_result_data_V_d0;
    sc_out< sc_lv<5> > agg_result_colind_address0;
    sc_out< sc_logic > agg_result_colind_ce0;
    sc_out< sc_logic > agg_result_colind_we0;
    sc_out< sc_lv<32> > agg_result_colind_d0;
    sc_out< sc_lv<5> > csr1_colind_address0;
    sc_out< sc_logic > csr1_colind_ce0;
    sc_in< sc_lv<32> > csr1_colind_q0;
    sc_out< sc_lv<5> > csr2_colind_address0;
    sc_out< sc_logic > csr2_colind_ce0;
    sc_in< sc_lv<3> > csr2_colind_q0;


    // Module declarations
    accumulate_Block_pr(sc_module_name name);
    SC_HAS_PROCESS(accumulate_Block_pr);

    ~accumulate_Block_pr();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > grp_fu_418_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_4_reg_749;
    sc_signal< sc_lv<1> > tmp_11_reg_753;
    sc_signal< sc_lv<32> > grp_fu_424_p2;
    sc_signal< sc_lv<3> > i_3_fu_448_p2;
    sc_signal< sc_lv<3> > i_3_reg_647;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_fu_442_p2;
    sc_signal< sc_lv<64> > tmp_s_fu_461_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_657;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > end_idx_1_reg_687;
    sc_signal< sc_lv<32> > end_idx_2_reg_700;
    sc_signal< sc_lv<64> > tmp_2_fu_483_p1;
    sc_signal< sc_lv<64> > tmp_2_reg_716;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_1_fu_477_p2;
    sc_signal< sc_lv<64> > tmp_3_fu_488_p1;
    sc_signal< sc_lv<64> > tmp_3_reg_727;
    sc_signal< sc_lv<32> > z_idx_fu_511_p2;
    sc_signal< sc_lv<32> > z_idx_reg_738;
    sc_signal< sc_lv<32> > csr1_colind_load_reg_744;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_4_fu_522_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_528_p2;
    sc_signal< sc_lv<64> > tmp_12_fu_534_p1;
    sc_signal< sc_lv<64> > tmp_12_reg_757;
    sc_signal< sc_lv<5> > csr1_data_V_addr_gep_fu_172_p3;
    sc_signal< sc_lv<5> > csr2_data_V_addr_gep_fu_180_p3;
    sc_signal< sc_lv<32> > indvars_iv_next_fu_552_p2;
    sc_signal< sc_lv<32> > indvars_iv_next_reg_784;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_13_fu_558_p2;
    sc_signal< sc_lv<32> > j_6_fu_569_p2;
    sc_signal< sc_lv<32> > j_6_reg_802;
    sc_signal< sc_lv<32> > z_idx_5_fu_593_p2;
    sc_signal< sc_lv<32> > z_idx_5_reg_807;
    sc_signal< sc_lv<32> > z_idx_2_fu_604_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_18_fu_610_p2;
    sc_signal< sc_lv<32> > k_5_fu_621_p2;
    sc_signal< sc_lv<32> > k_5_reg_830;
    sc_signal< sc_lv<32> > z_idx_6_fu_638_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<3> > i_reg_308;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > indvars_iv_reg_319;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > j6_reg_329;
    sc_signal< sc_lv<32> > k1_reg_339;
    sc_signal< sc_lv<32> > j_2_reg_349;
    sc_signal< sc_lv<32> > k_2_reg_363;
    sc_signal< sc_lv<32> > z_idx_3_reg_377;
    sc_signal< sc_lv<32> > j_3_reg_388;
    sc_signal< sc_lv<32> > z_idx_4_reg_398;
    sc_signal< sc_lv<32> > k_3_reg_408;
    sc_signal< sc_lv<64> > tmp_fu_454_p1;
    sc_signal< sc_lv<5> > agg_result_data_V_ad_22_gep_fu_202_p3;
    sc_signal< sc_lv<64> > tmp_7_fu_539_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_563_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_598_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_615_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_627_p1;
    sc_signal< sc_lv<32> > extLd7_fu_517_p1;
    sc_signal< sc_lv<32> > extLd_fu_633_p1;
    sc_signal< sc_lv<32> > tmp_10_fu_545_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_467_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_472_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_493_p2;
    sc_signal< sc_lv<32> > tmp_6_fu_505_p2;
    sc_signal< sc_lv<32> > smax1_fu_498_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_575_p2;
    sc_signal< sc_lv<32> > smax_fu_580_p3;
    sc_signal< sc_lv<32> > tmp_17_fu_587_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_agg_result_colind_address0();
    void thread_agg_result_colind_ce0();
    void thread_agg_result_colind_d0();
    void thread_agg_result_colind_we0();
    void thread_agg_result_data_V_ad_22_gep_fu_202_p3();
    void thread_agg_result_data_V_address0();
    void thread_agg_result_data_V_ce0();
    void thread_agg_result_data_V_d0();
    void thread_agg_result_data_V_we0();
    void thread_agg_result_rowptr_address0();
    void thread_agg_result_rowptr_ce0();
    void thread_agg_result_rowptr_d0();
    void thread_agg_result_rowptr_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_csr1_colind_address0();
    void thread_csr1_colind_ce0();
    void thread_csr1_data_V_addr_gep_fu_172_p3();
    void thread_csr1_data_V_address0();
    void thread_csr1_data_V_ce0();
    void thread_csr1_rowptr_address0();
    void thread_csr1_rowptr_address1();
    void thread_csr1_rowptr_ce0();
    void thread_csr1_rowptr_ce1();
    void thread_csr2_colind_address0();
    void thread_csr2_colind_ce0();
    void thread_csr2_data_V_addr_gep_fu_180_p3();
    void thread_csr2_data_V_address0();
    void thread_csr2_data_V_ce0();
    void thread_csr2_rowptr_address0();
    void thread_csr2_rowptr_address1();
    void thread_csr2_rowptr_ce0();
    void thread_csr2_rowptr_ce1();
    void thread_exitcond_fu_442_p2();
    void thread_extLd7_fu_517_p1();
    void thread_extLd_fu_633_p1();
    void thread_grp_fu_418_p2();
    void thread_grp_fu_424_p2();
    void thread_i_3_fu_448_p2();
    void thread_indvars_iv_next_fu_552_p2();
    void thread_j_6_fu_569_p2();
    void thread_k_5_fu_621_p2();
    void thread_smax1_fu_498_p3();
    void thread_smax_fu_580_p3();
    void thread_tmp_10_fu_545_p2();
    void thread_tmp_11_fu_528_p2();
    void thread_tmp_12_fu_534_p1();
    void thread_tmp_13_fu_558_p2();
    void thread_tmp_14_fu_598_p1();
    void thread_tmp_15_fu_563_p1();
    void thread_tmp_16_fu_575_p2();
    void thread_tmp_17_fu_587_p2();
    void thread_tmp_18_fu_610_p2();
    void thread_tmp_19_fu_627_p1();
    void thread_tmp_1_fu_477_p2();
    void thread_tmp_20_fu_615_p1();
    void thread_tmp_2_fu_483_p1();
    void thread_tmp_3_fu_488_p1();
    void thread_tmp_4_fu_522_p2();
    void thread_tmp_5_fu_493_p2();
    void thread_tmp_6_fu_505_p2();
    void thread_tmp_7_fu_539_p1();
    void thread_tmp_8_fu_467_p2();
    void thread_tmp_9_fu_472_p2();
    void thread_tmp_fu_454_p1();
    void thread_tmp_s_fu_461_p1();
    void thread_z_idx_2_fu_604_p2();
    void thread_z_idx_5_fu_593_p2();
    void thread_z_idx_6_fu_638_p2();
    void thread_z_idx_fu_511_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
