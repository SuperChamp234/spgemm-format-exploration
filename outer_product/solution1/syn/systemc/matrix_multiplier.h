// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrix_multiplier_HH_
#define _matrix_multiplier_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrix_multiplier_control_s_axi.h"
#include "matrix_multiplier_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct matrix_multiplier : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const5;
    sc_signal< sc_lv<3> > ap_var_for_const2;
    sc_signal< sc_lv<4> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const7;


    // Module declarations
    matrix_multiplier(sc_module_name name);
    SC_HAS_PROCESS(matrix_multiplier);

    ~matrix_multiplier();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrix_multiplier_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* matrix_multiplier_control_s_axi_U;
    matrix_multiplier_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* matrix_multiplier_gmem_m_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > matrix1;
    sc_signal< sc_lv<32> > matrix2;
    sc_signal< sc_lv<32> > output_matrix;
    sc_signal< sc_logic > gmem_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > gmem_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > gmem_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > gmem_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<1> > exitcond2_reg_545;
    sc_signal< sc_lv<1> > exitcond2_reg_545_pp1_iter4_reg;
    sc_signal< sc_logic > gmem_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< sc_lv<1> > exitcond2_reg_545_pp1_iter2_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > exitcond2_reg_545_pp1_iter3_reg;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_lv<32> > gmem_ARADDR;
    sc_signal< sc_lv<32> > gmem_ARLEN;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<32> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_lv<2> > j_reg_191;
    sc_signal< sc_lv<2> > j1_reg_203;
    sc_signal< sc_lv<33> > tmp_7_cast_fu_225_p1;
    sc_signal< sc_lv<33> > tmp_7_cast_reg_494;
    sc_signal< sc_lv<31> > tmp_9_cast_fu_239_p1;
    sc_signal< sc_lv<31> > tmp_9_cast_reg_499;
    sc_signal< sc_lv<33> > tmp_12_cast_fu_253_p1;
    sc_signal< sc_lv<33> > tmp_12_cast_reg_506;
    sc_signal< sc_lv<2> > i_1_fu_263_p2;
    sc_signal< sc_lv<2> > i_1_reg_514;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<33> > tmp_11_cast_fu_295_p1;
    sc_signal< sc_lv<33> > tmp_11_cast_reg_519;
    sc_signal< sc_lv<1> > exitcond4_fu_257_p2;
    sc_signal< sc_lv<32> > gmem_addr_reg_524;
    sc_signal< sc_lv<1> > exitcond3_fu_314_p2;
    sc_signal< sc_lv<1> > exitcond3_reg_530;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<2> > j_1_fu_320_p2;
    sc_signal< sc_lv<2> > j_1_reg_534;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > gmem_addr_1_reg_539;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > exitcond2_fu_355_p2;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state17_pp1_stage0_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_ARREADY;
    sc_signal< bool > ap_block_state17_io;
    sc_signal< bool > ap_block_state20_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state26_pp1_stage0_iter4;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > exitcond2_reg_545_pp1_iter1_reg;
    sc_signal< sc_lv<2> > j_2_fu_361_p2;
    sc_signal< sc_lv<2> > j_2_reg_549;
    sc_signal< sc_lv<31> > matrix24_sum_fu_371_p2;
    sc_signal< sc_lv<31> > matrix24_sum_reg_554;
    sc_signal< bool > ap_block_state15_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< bool > ap_block_state18_pp1_stage1_iter1;
    sc_signal< bool > ap_block_state21_pp1_stage1_iter2;
    sc_signal< bool > ap_block_state24_pp1_stage1_iter3;
    sc_signal< bool > ap_block_state27_pp1_stage1_iter4;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_WREADY;
    sc_signal< bool > ap_block_state27_io;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<31> > matrix24_sum8_fu_404_p2;
    sc_signal< sc_lv<31> > matrix24_sum8_reg_565;
    sc_signal< sc_lv<4> > tmp_7_2_fu_409_p2;
    sc_signal< sc_lv<4> > tmp_7_2_reg_570;
    sc_signal< bool > ap_block_state16_pp1_stage2_iter0;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_state19_pp1_stage2_iter1;
    sc_signal< bool > ap_block_state22_pp1_stage2_iter2;
    sc_signal< bool > ap_block_state25_pp1_stage2_iter3;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< sc_lv<31> > matrix24_sum9_fu_428_p2;
    sc_signal< sc_lv<31> > matrix24_sum9_reg_581;
    sc_signal< sc_lv<32> > gmem_addr_2_read_reg_592;
    sc_signal< sc_lv<32> > gmem_addr_3_read_reg_597;
    sc_signal< sc_lv<32> > result_fu_446_p2;
    sc_signal< sc_lv<32> > result_reg_602;
    sc_signal< sc_lv<32> > gmem_addr_4_read_reg_607;
    sc_signal< sc_lv<32> > result_1_fu_454_p2;
    sc_signal< sc_lv<32> > result_1_reg_612;
    sc_signal< sc_lv<32> > result_2_fu_462_p2;
    sc_signal< sc_lv<32> > result_2_reg_617;
    sc_signal< sc_lv<32> > accumulator_1_2_fu_471_p2;
    sc_signal< sc_lv<32> > accumulator_1_2_reg_622;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state10;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_AWREADY;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state14;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_lv<2> > i_reg_180;
    sc_signal< sc_lv<2> > ap_phi_mux_j_phi_fu_195_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_j1_phi_fu_207_p4;
    sc_signal< sc_lv<64> > matrix12_sum_cast_fu_304_p1;
    sc_signal< sc_lv<64> > output_matrix6_sum_c_fu_345_p1;
    sc_signal< sc_lv<64> > matrix24_sum_cast_fu_384_p1;
    sc_signal< sc_lv<64> > matrix24_sum8_cast_fu_415_p1;
    sc_signal< sc_lv<64> > matrix24_sum9_cast_fu_433_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_AWREADY;
    sc_signal< bool > ap_block_pp1_stage1_01001;
    sc_signal< bool > ap_block_pp1_stage2_01001;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_WREADY;
    sc_signal< sc_lv<32> > row1_2_fu_86;
    sc_signal< sc_lv<32> > row1_2_1_fu_90;
    sc_signal< sc_lv<32> > row1_2_2_fu_94;
    sc_signal< sc_lv<30> > tmp_1_fu_215_p4;
    sc_signal< sc_lv<30> > tmp_2_fu_229_p4;
    sc_signal< sc_lv<30> > tmp_4_fu_243_p4;
    sc_signal< sc_lv<4> > p_shl_fu_273_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_281_p1;
    sc_signal< sc_lv<5> > i_cast8_fu_269_p1;
    sc_signal< sc_lv<5> > tmp_fu_285_p2;
    sc_signal< sc_lv<32> > tmp_s_fu_291_p1;
    sc_signal< sc_lv<33> > matrix12_sum_fu_299_p2;
    sc_signal< sc_lv<33> > output_matrix6_sum_fu_341_p2;
    sc_signal< sc_lv<31> > tmp_8_cast_fu_367_p1;
    sc_signal< sc_lv<3> > j1_cast_fu_380_p1;
    sc_signal< sc_lv<3> > tmp_7_1_fu_394_p2;
    sc_signal< sc_lv<31> > tmp_8_1_cast_fu_400_p1;
    sc_signal< sc_lv<4> > j1_cast3_fu_376_p1;
    sc_signal< sc_lv<31> > tmp_8_2_cast_fu_425_p1;
    sc_signal< sc_lv<32> > result_fu_446_p0;
    sc_signal< sc_lv<32> > result_1_fu_454_p0;
    sc_signal< sc_lv<32> > result_2_fu_462_p0;
    sc_signal< sc_lv<32> > tmp1_fu_467_p2;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_872;
    sc_signal< bool > ap_condition_547;
    sc_signal< bool > ap_condition_559;
    sc_signal< bool > ap_condition_572;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_fsm_state1;
    static const sc_lv<20> ap_ST_fsm_state2;
    static const sc_lv<20> ap_ST_fsm_state3;
    static const sc_lv<20> ap_ST_fsm_state4;
    static const sc_lv<20> ap_ST_fsm_state5;
    static const sc_lv<20> ap_ST_fsm_state6;
    static const sc_lv<20> ap_ST_fsm_state7;
    static const sc_lv<20> ap_ST_fsm_state8;
    static const sc_lv<20> ap_ST_fsm_state9;
    static const sc_lv<20> ap_ST_fsm_pp0_stage0;
    static const sc_lv<20> ap_ST_fsm_state12;
    static const sc_lv<20> ap_ST_fsm_state13;
    static const sc_lv<20> ap_ST_fsm_pp1_stage0;
    static const sc_lv<20> ap_ST_fsm_pp1_stage1;
    static const sc_lv<20> ap_ST_fsm_pp1_stage2;
    static const sc_lv<20> ap_ST_fsm_state28;
    static const sc_lv<20> ap_ST_fsm_state29;
    static const sc_lv<20> ap_ST_fsm_state30;
    static const sc_lv<20> ap_ST_fsm_state31;
    static const sc_lv<20> ap_ST_fsm_state32;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_C;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<4> ap_const_lv4_6;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_accumulator_1_2_fu_471_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_01001();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage2_01001();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_state10_pp0_stage0_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state14_pp1_stage0_iter0();
    void thread_ap_block_state15_io();
    void thread_ap_block_state15_pp1_stage1_iter0();
    void thread_ap_block_state16_io();
    void thread_ap_block_state16_pp1_stage2_iter0();
    void thread_ap_block_state17_io();
    void thread_ap_block_state17_pp1_stage0_iter1();
    void thread_ap_block_state18_pp1_stage1_iter1();
    void thread_ap_block_state19_pp1_stage2_iter1();
    void thread_ap_block_state20_pp1_stage0_iter2();
    void thread_ap_block_state21_pp1_stage1_iter2();
    void thread_ap_block_state22_pp1_stage2_iter2();
    void thread_ap_block_state23_pp1_stage0_iter3();
    void thread_ap_block_state24_pp1_stage1_iter3();
    void thread_ap_block_state25_pp1_stage2_iter3();
    void thread_ap_block_state26_pp1_stage0_iter4();
    void thread_ap_block_state27_io();
    void thread_ap_block_state27_pp1_stage1_iter4();
    void thread_ap_condition_547();
    void thread_ap_condition_559();
    void thread_ap_condition_572();
    void thread_ap_condition_872();
    void thread_ap_condition_pp0_exit_iter0_state10();
    void thread_ap_condition_pp1_exit_iter0_state14();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_j1_phi_fu_207_p4();
    void thread_ap_phi_mux_j_phi_fu_195_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem_ARREADY();
    void thread_ap_sig_ioackin_gmem_AWREADY();
    void thread_ap_sig_ioackin_gmem_WREADY();
    void thread_exitcond2_fu_355_p2();
    void thread_exitcond3_fu_314_p2();
    void thread_exitcond4_fu_257_p2();
    void thread_gmem_ARADDR();
    void thread_gmem_ARLEN();
    void thread_gmem_ARVALID();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WVALID();
    void thread_gmem_blk_n_AR();
    void thread_gmem_blk_n_AW();
    void thread_gmem_blk_n_B();
    void thread_gmem_blk_n_R();
    void thread_gmem_blk_n_W();
    void thread_i_1_fu_263_p2();
    void thread_i_cast8_fu_269_p1();
    void thread_j1_cast3_fu_376_p1();
    void thread_j1_cast_fu_380_p1();
    void thread_j_1_fu_320_p2();
    void thread_j_2_fu_361_p2();
    void thread_matrix12_sum_cast_fu_304_p1();
    void thread_matrix12_sum_fu_299_p2();
    void thread_matrix24_sum8_cast_fu_415_p1();
    void thread_matrix24_sum8_fu_404_p2();
    void thread_matrix24_sum9_cast_fu_433_p1();
    void thread_matrix24_sum9_fu_428_p2();
    void thread_matrix24_sum_cast_fu_384_p1();
    void thread_matrix24_sum_fu_371_p2();
    void thread_output_matrix6_sum_c_fu_345_p1();
    void thread_output_matrix6_sum_fu_341_p2();
    void thread_p_shl_cast_fu_281_p1();
    void thread_p_shl_fu_273_p3();
    void thread_result_1_fu_454_p0();
    void thread_result_1_fu_454_p2();
    void thread_result_2_fu_462_p0();
    void thread_result_2_fu_462_p2();
    void thread_result_fu_446_p0();
    void thread_result_fu_446_p2();
    void thread_tmp1_fu_467_p2();
    void thread_tmp_11_cast_fu_295_p1();
    void thread_tmp_12_cast_fu_253_p1();
    void thread_tmp_1_fu_215_p4();
    void thread_tmp_2_fu_229_p4();
    void thread_tmp_4_fu_243_p4();
    void thread_tmp_7_1_fu_394_p2();
    void thread_tmp_7_2_fu_409_p2();
    void thread_tmp_7_cast_fu_225_p1();
    void thread_tmp_8_1_cast_fu_400_p1();
    void thread_tmp_8_2_cast_fu_425_p1();
    void thread_tmp_8_cast_fu_367_p1();
    void thread_tmp_9_cast_fu_239_p1();
    void thread_tmp_fu_285_p2();
    void thread_tmp_s_fu_291_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
