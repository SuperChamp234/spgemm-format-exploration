// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _extract_col_HH_
#define _extract_col_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct extract_col : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > inp_csc_colptr_address0;
    sc_out< sc_logic > inp_csc_colptr_ce0;
    sc_in< sc_lv<32> > inp_csc_colptr_q0;
    sc_out< sc_lv<3> > inp_csc_colptr_address1;
    sc_out< sc_logic > inp_csc_colptr_ce1;
    sc_in< sc_lv<32> > inp_csc_colptr_q1;
    sc_out< sc_lv<5> > inp_csc_rowind_address0;
    sc_out< sc_logic > inp_csc_rowind_ce0;
    sc_in< sc_lv<32> > inp_csc_rowind_q0;
    sc_out< sc_lv<5> > inp_csc_data_V_address0;
    sc_out< sc_logic > inp_csc_data_V_ce0;
    sc_in< sc_lv<32> > inp_csc_data_V_q0;
    sc_in< sc_lv<3> > col;
    sc_out< sc_lv<32> > out_col_V_0;
    sc_out< sc_logic > out_col_V_0_ap_vld;
    sc_out< sc_lv<32> > out_col_V_1;
    sc_out< sc_logic > out_col_V_1_ap_vld;
    sc_out< sc_lv<32> > out_col_V_2;
    sc_out< sc_logic > out_col_V_2_ap_vld;
    sc_out< sc_lv<32> > out_col_V_3;
    sc_out< sc_logic > out_col_V_3_ap_vld;


    // Module declarations
    extract_col(sc_module_name name);
    SC_HAS_PROCESS(extract_col);

    ~extract_col();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > end_idx_reg_252;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > i_cast1_fu_137_p1;
    sc_signal< sc_lv<32> > i_cast1_reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > i_2_fu_147_p2;
    sc_signal< sc_lv<3> > i_2_reg_265;
    sc_signal< sc_lv<1> > tmp_3_fu_153_p2;
    sc_signal< sc_lv<1> > tmp_3_reg_270;
    sc_signal< sc_lv<1> > exitcond_fu_141_p2;
    sc_signal< sc_lv<64> > tmp_4_fu_158_p1;
    sc_signal< sc_lv<64> > tmp_4_reg_274;
    sc_signal< sc_lv<1> > tmp_5_fu_163_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_284;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > tmp_6_fu_196_p1;
    sc_signal< sc_lv<2> > tmp_6_reg_296;
    sc_signal< sc_lv<3> > i_reg_101;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_s_fu_116_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_127_p1;
    sc_signal< sc_lv<32> > j_fu_40;
    sc_signal< sc_lv<32> > j_2_fu_224_p2;
    sc_signal< sc_lv<2> > tmp_fu_168_p1;
    sc_signal< sc_lv<3> > tmp_1_fu_121_p2;
    sc_signal< sc_lv<32> > tmp_3_fu_153_p0;
    sc_signal< sc_lv<32> > tmp_4_fu_158_p0;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_fu_141_p2();
    void thread_i_2_fu_147_p2();
    void thread_i_cast1_fu_137_p1();
    void thread_inp_csc_colptr_address0();
    void thread_inp_csc_colptr_address1();
    void thread_inp_csc_colptr_ce0();
    void thread_inp_csc_colptr_ce1();
    void thread_inp_csc_data_V_address0();
    void thread_inp_csc_data_V_ce0();
    void thread_inp_csc_rowind_address0();
    void thread_inp_csc_rowind_ce0();
    void thread_j_2_fu_224_p2();
    void thread_out_col_V_0();
    void thread_out_col_V_0_ap_vld();
    void thread_out_col_V_1();
    void thread_out_col_V_1_ap_vld();
    void thread_out_col_V_2();
    void thread_out_col_V_2_ap_vld();
    void thread_out_col_V_3();
    void thread_out_col_V_3_ap_vld();
    void thread_tmp_1_fu_121_p2();
    void thread_tmp_2_fu_127_p1();
    void thread_tmp_3_fu_153_p0();
    void thread_tmp_3_fu_153_p2();
    void thread_tmp_4_fu_158_p0();
    void thread_tmp_4_fu_158_p1();
    void thread_tmp_5_fu_163_p2();
    void thread_tmp_6_fu_196_p1();
    void thread_tmp_fu_168_p1();
    void thread_tmp_s_fu_116_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
