// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="outer_product,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12tcsg325-1q,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=7470,HLS_SYN_DSP=4,HLS_SYN_FF=46388,HLS_SYN_LUT=63253,HLS_VERSION=2018_3}" *)

module outer_product (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        agg_result_rowptr_address0,
        agg_result_rowptr_ce0,
        agg_result_rowptr_we0,
        agg_result_rowptr_d0,
        agg_result_rowptr_q0,
        agg_result_colind_address0,
        agg_result_colind_ce0,
        agg_result_colind_we0,
        agg_result_colind_d0,
        agg_result_colind_q0,
        agg_result_data_V_address0,
        agg_result_data_V_ce0,
        agg_result_data_V_we0,
        agg_result_data_V_d0,
        agg_result_data_V_q0,
        x_csc_colptr_address0,
        x_csc_colptr_ce0,
        x_csc_colptr_q0,
        x_csc_rowind_address0,
        x_csc_rowind_ce0,
        x_csc_rowind_q0,
        x_csc_data_V_address0,
        x_csc_data_V_ce0,
        x_csc_data_V_q0,
        y_csr_rowptr_address0,
        y_csr_rowptr_ce0,
        y_csr_rowptr_q0,
        y_csr_colind_address0,
        y_csr_colind_ce0,
        y_csr_colind_q0,
        y_csr_data_V_address0,
        y_csr_data_V_ce0,
        y_csr_data_V_q0
);

parameter    ap_ST_fsm_state1 = 63'd1;
parameter    ap_ST_fsm_state2 = 63'd2;
parameter    ap_ST_fsm_state3 = 63'd4;
parameter    ap_ST_fsm_state4 = 63'd8;
parameter    ap_ST_fsm_state5 = 63'd16;
parameter    ap_ST_fsm_state6 = 63'd32;
parameter    ap_ST_fsm_state7 = 63'd64;
parameter    ap_ST_fsm_state8 = 63'd128;
parameter    ap_ST_fsm_state9 = 63'd256;
parameter    ap_ST_fsm_state10 = 63'd512;
parameter    ap_ST_fsm_state11 = 63'd1024;
parameter    ap_ST_fsm_state12 = 63'd2048;
parameter    ap_ST_fsm_state13 = 63'd4096;
parameter    ap_ST_fsm_state14 = 63'd8192;
parameter    ap_ST_fsm_state15 = 63'd16384;
parameter    ap_ST_fsm_state16 = 63'd32768;
parameter    ap_ST_fsm_state17 = 63'd65536;
parameter    ap_ST_fsm_state18 = 63'd131072;
parameter    ap_ST_fsm_state19 = 63'd262144;
parameter    ap_ST_fsm_state20 = 63'd524288;
parameter    ap_ST_fsm_state21 = 63'd1048576;
parameter    ap_ST_fsm_state22 = 63'd2097152;
parameter    ap_ST_fsm_state23 = 63'd4194304;
parameter    ap_ST_fsm_state24 = 63'd8388608;
parameter    ap_ST_fsm_state25 = 63'd16777216;
parameter    ap_ST_fsm_state26 = 63'd33554432;
parameter    ap_ST_fsm_state27 = 63'd67108864;
parameter    ap_ST_fsm_state28 = 63'd134217728;
parameter    ap_ST_fsm_state29 = 63'd268435456;
parameter    ap_ST_fsm_state30 = 63'd536870912;
parameter    ap_ST_fsm_state31 = 63'd1073741824;
parameter    ap_ST_fsm_state32 = 63'd2147483648;
parameter    ap_ST_fsm_state33 = 63'd4294967296;
parameter    ap_ST_fsm_state34 = 63'd8589934592;
parameter    ap_ST_fsm_state35 = 63'd17179869184;
parameter    ap_ST_fsm_state36 = 63'd34359738368;
parameter    ap_ST_fsm_state37 = 63'd68719476736;
parameter    ap_ST_fsm_state38 = 63'd137438953472;
parameter    ap_ST_fsm_state39 = 63'd274877906944;
parameter    ap_ST_fsm_state40 = 63'd549755813888;
parameter    ap_ST_fsm_state41 = 63'd1099511627776;
parameter    ap_ST_fsm_state42 = 63'd2199023255552;
parameter    ap_ST_fsm_state43 = 63'd4398046511104;
parameter    ap_ST_fsm_state44 = 63'd8796093022208;
parameter    ap_ST_fsm_state45 = 63'd17592186044416;
parameter    ap_ST_fsm_state46 = 63'd35184372088832;
parameter    ap_ST_fsm_state47 = 63'd70368744177664;
parameter    ap_ST_fsm_state48 = 63'd140737488355328;
parameter    ap_ST_fsm_state49 = 63'd281474976710656;
parameter    ap_ST_fsm_state50 = 63'd562949953421312;
parameter    ap_ST_fsm_state51 = 63'd1125899906842624;
parameter    ap_ST_fsm_state52 = 63'd2251799813685248;
parameter    ap_ST_fsm_state53 = 63'd4503599627370496;
parameter    ap_ST_fsm_state54 = 63'd9007199254740992;
parameter    ap_ST_fsm_state55 = 63'd18014398509481984;
parameter    ap_ST_fsm_state56 = 63'd36028797018963968;
parameter    ap_ST_fsm_state57 = 63'd72057594037927936;
parameter    ap_ST_fsm_state58 = 63'd144115188075855872;
parameter    ap_ST_fsm_state59 = 63'd288230376151711744;
parameter    ap_ST_fsm_state60 = 63'd576460752303423488;
parameter    ap_ST_fsm_state61 = 63'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 63'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 63'd4611686018427387904;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] agg_result_rowptr_address0;
output   agg_result_rowptr_ce0;
output   agg_result_rowptr_we0;
output  [31:0] agg_result_rowptr_d0;
input  [31:0] agg_result_rowptr_q0;
output  [17:0] agg_result_colind_address0;
output   agg_result_colind_ce0;
output   agg_result_colind_we0;
output  [31:0] agg_result_colind_d0;
input  [31:0] agg_result_colind_q0;
output  [17:0] agg_result_data_V_address0;
output   agg_result_data_V_ce0;
output   agg_result_data_V_we0;
output  [31:0] agg_result_data_V_d0;
input  [31:0] agg_result_data_V_q0;
output  [8:0] x_csc_colptr_address0;
output   x_csc_colptr_ce0;
input  [31:0] x_csc_colptr_q0;
output  [17:0] x_csc_rowind_address0;
output   x_csc_rowind_ce0;
input  [31:0] x_csc_rowind_q0;
output  [17:0] x_csc_data_V_address0;
output   x_csc_data_V_ce0;
input  [31:0] x_csc_data_V_q0;
output  [8:0] y_csr_rowptr_address0;
output   y_csr_rowptr_ce0;
input  [31:0] y_csr_rowptr_q0;
output  [17:0] y_csr_colind_address0;
output   y_csr_colind_ce0;
input  [31:0] y_csr_colind_q0;
output  [17:0] y_csr_data_V_address0;
output   y_csr_data_V_ce0;
input  [31:0] y_csr_data_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] agg_result_rowptr_address0;
reg agg_result_rowptr_ce0;
reg agg_result_rowptr_we0;
reg[31:0] agg_result_rowptr_d0;
reg[17:0] agg_result_colind_address0;
reg agg_result_colind_ce0;
reg agg_result_colind_we0;
reg[31:0] agg_result_colind_d0;
reg[17:0] agg_result_data_V_address0;
reg agg_result_data_V_ce0;
reg agg_result_data_V_we0;
reg[31:0] agg_result_data_V_d0;
reg x_csc_colptr_ce0;
reg x_csc_rowind_ce0;
reg x_csc_data_V_ce0;
reg y_csr_rowptr_ce0;
reg y_csr_colind_ce0;
reg y_csr_data_V_ce0;

(* fsm_encoding = "none" *) reg   [62:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] out_col_V_address0;
reg    out_col_V_ce0;
reg    out_col_V_we0;
reg   [31:0] out_col_V_d0;
wire   [31:0] out_col_V_q0;
reg   [8:0] out_row_V_address0;
reg    out_row_V_ce0;
reg    out_row_V_we0;
reg   [31:0] out_row_V_d0;
wire   [31:0] out_row_V_q0;
wire   [8:0] i_2_fu_1185_p2;
reg   [8:0] i_2_reg_1716;
wire    ap_CS_fsm_state2;
wire   [8:0] tmp_1_fu_1191_p2;
reg   [8:0] tmp_1_reg_1722;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_2_fu_1197_p1;
reg   [63:0] tmp_2_reg_1727;
wire   [0:0] tmp_3_fu_1202_p2;
reg   [0:0] tmp_3_reg_1737;
wire   [17:0] tmp_5_fu_1208_p2;
reg   [17:0] tmp_5_reg_1741;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_6_fu_1214_p1;
reg   [63:0] tmp_6_reg_1746;
wire   [0:0] tmp_7_fu_1219_p2;
reg   [0:0] tmp_7_reg_1756;
wire   [17:0] tmp_9_fu_1225_p2;
reg   [17:0] tmp_9_reg_1760;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_s_fu_1231_p1;
reg   [63:0] tmp_s_reg_1765;
wire   [0:0] tmp_10_fu_1236_p2;
reg   [0:0] tmp_10_reg_1775;
wire   [8:0] indvarinc_fu_1242_p2;
reg   [8:0] indvarinc_reg_1779;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_58_fu_1248_p1;
reg   [63:0] tmp_58_reg_1784;
wire   [0:0] tmp_59_fu_1253_p2;
reg   [0:0] tmp_59_reg_1794;
wire   [17:0] indvarinc1_fu_1259_p2;
reg   [17:0] indvarinc1_reg_1798;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_60_fu_1265_p1;
reg   [63:0] tmp_60_reg_1803;
wire   [0:0] tmp_61_fu_1270_p2;
reg   [0:0] tmp_61_reg_1813;
wire   [17:0] indvarinc2_fu_1276_p2;
reg   [17:0] indvarinc2_reg_1817;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_62_fu_1282_p1;
reg   [63:0] tmp_62_reg_1822;
wire   [0:0] tmp_63_fu_1287_p2;
reg   [0:0] tmp_63_reg_1832;
wire   [63:0] tmp_i_fu_1293_p1;
reg   [63:0] tmp_i_reg_1836;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp_67_i_fu_1298_p1;
reg   [63:0] tmp_67_i_reg_1846;
wire   [31:0] inp_csc_colptr_assig_q0;
wire    ap_CS_fsm_state15;
wire   [31:0] inp_csc_colptr_assig_q1;
reg   [31:0] end_idx_reg_1861;
wire   [31:0] i_i_cast_fu_1302_p1;
reg   [31:0] i_i_cast_reg_1866;
wire    ap_CS_fsm_state16;
wire   [8:0] i_fu_1312_p2;
reg   [8:0] i_reg_1874;
wire   [0:0] tmp_68_i_fu_1318_p2;
reg   [0:0] tmp_68_i_reg_1879;
wire   [0:0] exitcond_i_fu_1306_p2;
wire  signed [63:0] tmp_69_i_fu_1323_p1;
reg  signed [63:0] tmp_69_i_reg_1883;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_70_i_fu_1328_p2;
wire   [31:0] j_1_fu_1343_p2;
wire    ap_CS_fsm_state18;
wire   [8:0] tmp_12_fu_1349_p2;
reg   [8:0] tmp_12_reg_1906;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_13_fu_1355_p1;
reg   [63:0] tmp_13_reg_1911;
wire   [0:0] tmp_14_fu_1360_p2;
reg   [0:0] tmp_14_reg_1921;
wire   [17:0] tmp_16_fu_1366_p2;
reg   [17:0] tmp_16_reg_1925;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_17_fu_1372_p1;
reg   [63:0] tmp_17_reg_1930;
wire   [0:0] tmp_18_fu_1377_p2;
reg   [0:0] tmp_18_reg_1940;
wire   [17:0] tmp_20_fu_1383_p2;
reg   [17:0] tmp_20_reg_1944;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_21_fu_1389_p1;
reg   [63:0] tmp_21_reg_1949;
wire   [0:0] tmp_22_fu_1394_p2;
reg   [0:0] tmp_22_reg_1959;
wire   [8:0] indvarinc3_fu_1400_p2;
reg   [8:0] indvarinc3_reg_1963;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_64_fu_1406_p1;
reg   [63:0] tmp_64_reg_1968;
wire   [0:0] tmp_65_fu_1411_p2;
reg   [0:0] tmp_65_reg_1978;
wire   [17:0] indvarinc4_fu_1417_p2;
reg   [17:0] indvarinc4_reg_1982;
wire    ap_CS_fsm_state28;
wire   [63:0] tmp_66_fu_1423_p1;
reg   [63:0] tmp_66_reg_1987;
wire   [0:0] tmp_67_fu_1428_p2;
reg   [0:0] tmp_67_reg_1997;
wire   [17:0] indvarinc5_fu_1434_p2;
reg   [17:0] indvarinc5_reg_2001;
wire    ap_CS_fsm_state30;
wire   [63:0] tmp_68_fu_1440_p1;
reg   [63:0] tmp_68_reg_2006;
wire   [0:0] tmp_69_fu_1445_p2;
reg   [0:0] tmp_69_reg_2016;
wire    ap_CS_fsm_state31;
wire   [31:0] inp_csr_rowptr_assig_q0;
wire    ap_CS_fsm_state32;
wire   [31:0] inp_csr_rowptr_assig_q1;
reg   [31:0] end_idx_1_reg_2035;
wire   [31:0] i_i42_cast_fu_1451_p1;
reg   [31:0] i_i42_cast_reg_2040;
wire    ap_CS_fsm_state33;
wire   [8:0] i_1_fu_1461_p2;
reg   [8:0] i_1_reg_2048;
wire   [0:0] tmp_61_i_fu_1467_p2;
reg   [0:0] tmp_61_i_reg_2053;
wire   [0:0] exitcond_i1_fu_1455_p2;
wire  signed [63:0] tmp_62_i_fu_1472_p1;
reg  signed [63:0] tmp_62_i_reg_2057;
wire   [0:0] tmp_23_fu_1477_p2;
reg   [0:0] tmp_23_reg_2067;
wire    ap_CS_fsm_state34;
wire   [0:0] tmp_63_i_fu_1483_p2;
wire   [31:0] j_3_fu_1498_p2;
wire    ap_CS_fsm_state35;
wire   [8:0] tmp_27_fu_1504_p2;
reg   [8:0] tmp_27_reg_2084;
wire    ap_CS_fsm_state38;
wire   [63:0] tmp_28_fu_1510_p1;
reg   [63:0] tmp_28_reg_2089;
wire   [0:0] tmp_29_fu_1515_p2;
reg   [0:0] tmp_29_reg_2099;
wire   [17:0] tmp_33_fu_1521_p2;
reg   [17:0] tmp_33_reg_2103;
wire    ap_CS_fsm_state40;
wire   [63:0] tmp_34_fu_1527_p1;
reg   [63:0] tmp_34_reg_2108;
wire   [0:0] tmp_35_fu_1532_p2;
reg   [0:0] tmp_35_reg_2118;
wire   [17:0] tmp_38_fu_1538_p2;
reg   [17:0] tmp_38_reg_2122;
wire    ap_CS_fsm_state42;
wire   [63:0] tmp_39_fu_1544_p1;
reg   [63:0] tmp_39_reg_2127;
wire   [0:0] tmp_40_fu_1549_p2;
reg   [0:0] tmp_40_reg_2137;
wire   [8:0] tmp_42_fu_1555_p2;
reg   [8:0] tmp_42_reg_2141;
wire    ap_CS_fsm_state44;
wire   [63:0] tmp_43_fu_1561_p1;
reg   [63:0] tmp_43_reg_2146;
wire   [0:0] tmp_44_fu_1566_p2;
reg   [0:0] tmp_44_reg_2156;
wire   [17:0] tmp_46_fu_1572_p2;
reg   [17:0] tmp_46_reg_2160;
wire    ap_CS_fsm_state46;
wire   [63:0] tmp_47_fu_1578_p1;
reg   [63:0] tmp_47_reg_2165;
wire   [0:0] tmp_48_fu_1583_p2;
reg   [0:0] tmp_48_reg_2175;
wire   [17:0] tmp_50_fu_1589_p2;
reg   [17:0] tmp_50_reg_2179;
wire    ap_CS_fsm_state48;
wire   [63:0] tmp_51_fu_1595_p1;
reg   [63:0] tmp_51_reg_2184;
wire   [0:0] tmp_52_fu_1600_p2;
reg   [0:0] tmp_52_reg_2194;
wire   [8:0] indvarinc_i2_fu_1606_p2;
reg   [8:0] indvarinc_i2_reg_2198;
wire    ap_CS_fsm_state52;
wire   [63:0] tmp_53_fu_1612_p1;
reg   [63:0] tmp_53_reg_2203;
wire   [0:0] tmp_54_fu_1617_p2;
reg   [0:0] tmp_54_reg_2213;
wire   [17:0] indvarinc4_i8_fu_1623_p2;
reg   [17:0] indvarinc4_i8_reg_2217;
wire    ap_CS_fsm_state54;
wire   [63:0] tmp_55_fu_1629_p1;
reg   [63:0] tmp_55_reg_2222;
wire   [0:0] tmp_56_fu_1634_p2;
reg   [0:0] tmp_56_reg_2232;
wire   [63:0] p_i0_0_i1_cast_fu_1640_p1;
reg   [63:0] p_i0_0_i1_cast_reg_2236;
wire    ap_CS_fsm_state56;
wire   [17:0] p_i0_1_fu_1651_p2;
reg   [17:0] p_i0_1_reg_2244;
wire   [0:0] tmp_57_fu_1645_p2;
wire   [8:0] indvarinc_i_fu_1657_p2;
reg   [8:0] indvarinc_i_reg_2254;
wire    ap_CS_fsm_state58;
wire   [63:0] tmp_24_fu_1663_p1;
reg   [63:0] tmp_24_reg_2259;
wire   [0:0] tmp_25_fu_1668_p2;
reg   [0:0] tmp_25_reg_2269;
wire   [17:0] indvarinc4_i_fu_1674_p2;
reg   [17:0] indvarinc4_i_reg_2273;
wire    ap_CS_fsm_state60;
wire   [63:0] tmp_30_fu_1680_p1;
reg   [63:0] tmp_30_reg_2278;
wire   [0:0] tmp_31_fu_1685_p2;
reg   [0:0] tmp_31_reg_2288;
wire   [63:0] p_i0_0_i_cast_fu_1696_p1;
reg   [63:0] p_i0_0_i_cast_reg_2292;
wire    ap_CS_fsm_state62;
wire   [17:0] p_i0_fu_1707_p2;
reg   [17:0] p_i0_reg_2300;
wire   [0:0] tmp_36_fu_1701_p2;
reg   [17:0] inp_csr_data_V_assig_address0;
reg    inp_csr_data_V_assig_ce0;
reg    inp_csr_data_V_assig_we0;
wire   [31:0] inp_csr_data_V_assig_q0;
reg   [17:0] inp_csr_colind_assig_address0;
reg    inp_csr_colind_assig_ce0;
reg    inp_csr_colind_assig_we0;
wire   [31:0] inp_csr_colind_assig_q0;
reg   [8:0] inp_csr_rowptr_assig_address0;
reg    inp_csr_rowptr_assig_ce0;
reg    inp_csr_rowptr_assig_we0;
wire   [8:0] inp_csr_rowptr_assig_address1;
reg    inp_csr_rowptr_assig_ce1;
reg   [17:0] inp_csc_data_V_assig_address0;
reg    inp_csc_data_V_assig_ce0;
reg    inp_csc_data_V_assig_we0;
wire   [31:0] inp_csc_data_V_assig_q0;
reg   [17:0] inp_csc_rowind_assig_address0;
reg    inp_csc_rowind_assig_ce0;
reg    inp_csc_rowind_assig_we0;
wire   [31:0] inp_csc_rowind_assig_q0;
reg   [8:0] inp_csc_colptr_assig_address0;
reg    inp_csc_colptr_assig_ce0;
reg    inp_csc_colptr_assig_we0;
wire   [8:0] inp_csc_colptr_assig_address1;
reg    inp_csc_colptr_assig_ce1;
reg   [8:0] p_0_address0;
reg    p_0_ce0;
reg    p_0_we0;
wire   [31:0] p_0_q0;
reg   [17:0] p_1_address0;
reg    p_1_ce0;
reg    p_1_we0;
wire   [31:0] p_1_q0;
reg   [17:0] p_2_address0;
reg    p_2_ce0;
reg    p_2_we0;
wire   [31:0] p_2_q0;
reg   [8:0] p_01_address0;
reg    p_01_ce0;
reg    p_01_we0;
wire   [31:0] p_01_q0;
reg   [17:0] p_12_address0;
reg    p_12_ce0;
reg    p_12_we0;
wire   [31:0] p_12_q0;
reg   [17:0] p_23_address0;
reg    p_23_ce0;
reg    p_23_we0;
wire   [31:0] p_23_q0;
reg   [8:0] partial_z_rowptr_address0;
reg    partial_z_rowptr_ce0;
reg    partial_z_rowptr_we0;
wire   [31:0] partial_z_rowptr_q0;
reg   [17:0] partial_z_colind_address0;
reg    partial_z_colind_ce0;
reg    partial_z_colind_we0;
wire   [8:0] partial_z_colind_q0;
reg   [17:0] partial_z_data_V_address0;
reg    partial_z_data_V_ce0;
reg    partial_z_data_V_we0;
wire   [31:0] partial_z_data_V_q0;
reg   [8:0] p_04_address0;
reg    p_04_ce0;
reg    p_04_we0;
wire   [31:0] p_04_q0;
reg   [17:0] p_15_address0;
reg    p_15_ce0;
reg    p_15_we0;
wire   [31:0] p_15_q0;
reg   [17:0] p_26_address0;
reg    p_26_ce0;
reg    p_26_we0;
wire   [31:0] p_26_q0;
reg   [8:0] p_07_address0;
reg    p_07_ce0;
reg    p_07_we0;
wire   [31:0] p_07_q0;
reg    p_07_ce1;
wire   [31:0] p_07_q1;
reg   [17:0] p_18_address0;
reg    p_18_ce0;
reg    p_18_we0;
wire   [31:0] p_18_q0;
reg   [17:0] p_29_address0;
reg    p_29_ce0;
reg    p_29_we0;
wire   [31:0] p_29_q0;
reg   [8:0] p_010_address0;
reg    p_010_ce0;
reg    p_010_we0;
wire   [31:0] p_010_q0;
reg    p_010_ce1;
wire   [31:0] p_010_q1;
reg   [17:0] p_111_address0;
reg    p_111_ce0;
reg    p_111_we0;
wire   [8:0] p_111_q0;
reg   [17:0] p_212_address0;
reg    p_212_ce0;
reg    p_212_we0;
wire   [31:0] p_212_q0;
wire    grp_multiply_row_col_fu_1155_ap_start;
wire    grp_multiply_row_col_fu_1155_ap_done;
wire    grp_multiply_row_col_fu_1155_ap_idle;
wire    grp_multiply_row_col_fu_1155_ap_ready;
wire   [8:0] grp_multiply_row_col_fu_1155_agg_result_rowptr_address0;
wire    grp_multiply_row_col_fu_1155_agg_result_rowptr_ce0;
wire    grp_multiply_row_col_fu_1155_agg_result_rowptr_we0;
wire   [31:0] grp_multiply_row_col_fu_1155_agg_result_rowptr_d0;
wire   [17:0] grp_multiply_row_col_fu_1155_agg_result_colind_address0;
wire    grp_multiply_row_col_fu_1155_agg_result_colind_ce0;
wire    grp_multiply_row_col_fu_1155_agg_result_colind_we0;
wire   [8:0] grp_multiply_row_col_fu_1155_agg_result_colind_d0;
wire   [17:0] grp_multiply_row_col_fu_1155_agg_result_data_V_address0;
wire    grp_multiply_row_col_fu_1155_agg_result_data_V_ce0;
wire    grp_multiply_row_col_fu_1155_agg_result_data_V_we0;
wire   [31:0] grp_multiply_row_col_fu_1155_agg_result_data_V_d0;
wire   [8:0] grp_multiply_row_col_fu_1155_row_V_address0;
wire    grp_multiply_row_col_fu_1155_row_V_ce0;
wire   [8:0] grp_multiply_row_col_fu_1155_col_V_address0;
wire    grp_multiply_row_col_fu_1155_col_V_ce0;
wire    grp_accumulate_fu_1166_ap_start;
wire    grp_accumulate_fu_1166_ap_done;
wire    grp_accumulate_fu_1166_ap_idle;
wire    grp_accumulate_fu_1166_ap_ready;
wire   [8:0] grp_accumulate_fu_1166_agg_result_rowptr_address0;
wire    grp_accumulate_fu_1166_agg_result_rowptr_ce0;
wire    grp_accumulate_fu_1166_agg_result_rowptr_we0;
wire   [31:0] grp_accumulate_fu_1166_agg_result_rowptr_d0;
wire   [17:0] grp_accumulate_fu_1166_agg_result_colind_address0;
wire    grp_accumulate_fu_1166_agg_result_colind_ce0;
wire    grp_accumulate_fu_1166_agg_result_colind_we0;
wire   [31:0] grp_accumulate_fu_1166_agg_result_colind_d0;
wire   [17:0] grp_accumulate_fu_1166_agg_result_data_V_address0;
wire    grp_accumulate_fu_1166_agg_result_data_V_ce0;
wire    grp_accumulate_fu_1166_agg_result_data_V_we0;
wire   [31:0] grp_accumulate_fu_1166_agg_result_data_V_d0;
wire   [8:0] grp_accumulate_fu_1166_csr1_rowptr_address0;
wire    grp_accumulate_fu_1166_csr1_rowptr_ce0;
wire   [8:0] grp_accumulate_fu_1166_csr1_rowptr_address1;
wire    grp_accumulate_fu_1166_csr1_rowptr_ce1;
wire   [17:0] grp_accumulate_fu_1166_csr1_colind_address0;
wire    grp_accumulate_fu_1166_csr1_colind_ce0;
wire   [17:0] grp_accumulate_fu_1166_csr1_data_V_address0;
wire    grp_accumulate_fu_1166_csr1_data_V_ce0;
wire   [8:0] grp_accumulate_fu_1166_csr2_rowptr_address0;
wire    grp_accumulate_fu_1166_csr2_rowptr_ce0;
wire   [8:0] grp_accumulate_fu_1166_csr2_rowptr_address1;
wire    grp_accumulate_fu_1166_csr2_rowptr_ce1;
wire   [17:0] grp_accumulate_fu_1166_csr2_colind_address0;
wire    grp_accumulate_fu_1166_csr2_colind_ce0;
wire   [17:0] grp_accumulate_fu_1166_csr2_data_V_address0;
wire    grp_accumulate_fu_1166_csr2_data_V_ce0;
reg   [8:0] col_assign_reg_811;
reg   [8:0] tmp_reg_823;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_fu_1179_p2;
reg   [17:0] tmp_4_reg_834;
wire    ap_CS_fsm_state6;
reg   [17:0] tmp_8_reg_845;
wire    ap_CS_fsm_state8;
reg   [8:0] indvar_reg_856;
wire    ap_CS_fsm_state10;
reg   [17:0] indvar1_reg_867;
wire    ap_CS_fsm_state12;
reg   [17:0] indvar2_reg_878;
reg  signed [31:0] j4_i_reg_889;
wire    ap_CS_fsm_state19;
reg   [8:0] i_i_reg_899;
reg   [31:0] j4_i_be_reg_911;
reg   [8:0] tmp_11_reg_923;
wire    ap_CS_fsm_state21;
reg   [17:0] tmp_15_reg_934;
wire    ap_CS_fsm_state23;
reg   [17:0] tmp_19_reg_945;
wire    ap_CS_fsm_state25;
reg   [8:0] indvar3_reg_956;
wire    ap_CS_fsm_state27;
reg   [17:0] indvar4_reg_967;
wire    ap_CS_fsm_state29;
reg   [17:0] indvar5_reg_978;
reg  signed [31:0] j2_i_reg_989;
wire    ap_CS_fsm_state36;
reg   [8:0] i_i1_reg_999;
reg   [31:0] j2_i_be_reg_1011;
reg   [8:0] tmp_26_reg_1023;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state37;
reg   [17:0] tmp_32_reg_1034;
wire    ap_CS_fsm_state41;
reg   [17:0] tmp_37_reg_1045;
wire    ap_CS_fsm_state43;
reg   [8:0] tmp_41_reg_1056;
wire    ap_CS_fsm_state45;
reg   [17:0] tmp_45_reg_1067;
wire    ap_CS_fsm_state47;
reg   [17:0] tmp_49_reg_1078;
wire    ap_CS_fsm_state49;
reg   [8:0] invdar_i1_reg_1089;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state53;
reg   [17:0] invdar3_i7_reg_1100;
wire    ap_CS_fsm_state55;
reg   [17:0] p_i0_0_i1_reg_1111;
wire    ap_CS_fsm_state57;
reg   [8:0] invdar_i_reg_1122;
wire    ap_CS_fsm_state59;
reg   [17:0] invdar3_i_reg_1133;
wire    ap_CS_fsm_state61;
reg   [17:0] p_i0_0_i_reg_1144;
wire    ap_CS_fsm_state63;
reg    grp_multiply_row_col_fu_1155_ap_start_reg;
reg    grp_accumulate_fu_1166_ap_start_reg;
wire    ap_CS_fsm_state50;
wire   [63:0] tmp_71_i_fu_1333_p1;
wire   [63:0] tmp_72_i_fu_1338_p1;
wire   [63:0] tmp_64_i_fu_1488_p1;
wire   [63:0] tmp_65_i_fu_1493_p1;
wire   [31:0] extLd_fu_1691_p1;
reg   [62:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 63'd1;
#0 grp_multiply_row_col_fu_1155_ap_start_reg = 1'b0;
#0 grp_accumulate_fu_1166_ap_start_reg = 1'b0;
end

outer_product_out_col_V #(
    .DataWidth( 32 ),
    .AddressRange( 494 ),
    .AddressWidth( 9 ))
out_col_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_col_V_address0),
    .ce0(out_col_V_ce0),
    .we0(out_col_V_we0),
    .d0(out_col_V_d0),
    .q0(out_col_V_q0)
);

outer_product_out_col_V #(
    .DataWidth( 32 ),
    .AddressRange( 494 ),
    .AddressWidth( 9 ))
out_row_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_row_V_address0),
    .ce0(out_row_V_ce0),
    .we0(out_row_V_we0),
    .d0(out_row_V_d0),
    .q0(out_row_V_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
inp_csr_data_V_assig_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_csr_data_V_assig_address0),
    .ce0(inp_csr_data_V_assig_ce0),
    .we0(inp_csr_data_V_assig_we0),
    .d0(p_23_q0),
    .q0(inp_csr_data_V_assig_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
inp_csr_colind_assig_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_csr_colind_assig_address0),
    .ce0(inp_csr_colind_assig_ce0),
    .we0(inp_csr_colind_assig_we0),
    .d0(p_12_q0),
    .q0(inp_csr_colind_assig_q0)
);

outer_product_inp_csr_rowptr_assig #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
inp_csr_rowptr_assig_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_csr_rowptr_assig_address0),
    .ce0(inp_csr_rowptr_assig_ce0),
    .we0(inp_csr_rowptr_assig_we0),
    .d0(p_01_q0),
    .q0(inp_csr_rowptr_assig_q0),
    .address1(inp_csr_rowptr_assig_address1),
    .ce1(inp_csr_rowptr_assig_ce1),
    .q1(inp_csr_rowptr_assig_q1)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
inp_csc_data_V_assig_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_csc_data_V_assig_address0),
    .ce0(inp_csc_data_V_assig_ce0),
    .we0(inp_csc_data_V_assig_we0),
    .d0(p_2_q0),
    .q0(inp_csc_data_V_assig_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
inp_csc_rowind_assig_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_csc_rowind_assig_address0),
    .ce0(inp_csc_rowind_assig_ce0),
    .we0(inp_csc_rowind_assig_we0),
    .d0(p_1_q0),
    .q0(inp_csc_rowind_assig_q0)
);

outer_product_inp_csr_rowptr_assig #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
inp_csc_colptr_assig_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_csc_colptr_assig_address0),
    .ce0(inp_csc_colptr_assig_ce0),
    .we0(inp_csc_colptr_assig_we0),
    .d0(p_0_q0),
    .q0(inp_csc_colptr_assig_q0),
    .address1(inp_csc_colptr_assig_address1),
    .ce1(inp_csc_colptr_assig_ce1),
    .q1(inp_csc_colptr_assig_q1)
);

outer_product_p_0 #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
p_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_0_address0),
    .ce0(p_0_ce0),
    .we0(p_0_we0),
    .d0(x_csc_colptr_q0),
    .q0(p_0_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_1_address0),
    .ce0(p_1_ce0),
    .we0(p_1_we0),
    .d0(x_csc_rowind_q0),
    .q0(p_1_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_2_address0),
    .ce0(p_2_ce0),
    .we0(p_2_we0),
    .d0(x_csc_data_V_q0),
    .q0(p_2_q0)
);

outer_product_p_0 #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
p_01_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_01_address0),
    .ce0(p_01_ce0),
    .we0(p_01_we0),
    .d0(y_csr_rowptr_q0),
    .q0(p_01_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_12_address0),
    .ce0(p_12_ce0),
    .we0(p_12_we0),
    .d0(y_csr_colind_q0),
    .q0(p_12_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_23_address0),
    .ce0(p_23_ce0),
    .we0(p_23_we0),
    .d0(y_csr_data_V_q0),
    .q0(p_23_q0)
);

outer_product_p_0 #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
partial_z_rowptr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_z_rowptr_address0),
    .ce0(partial_z_rowptr_ce0),
    .we0(partial_z_rowptr_we0),
    .d0(grp_multiply_row_col_fu_1155_agg_result_rowptr_d0),
    .q0(partial_z_rowptr_q0)
);

outer_product_partial_z_colind #(
    .DataWidth( 9 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
partial_z_colind_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_z_colind_address0),
    .ce0(partial_z_colind_ce0),
    .we0(partial_z_colind_we0),
    .d0(grp_multiply_row_col_fu_1155_agg_result_colind_d0),
    .q0(partial_z_colind_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
partial_z_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_z_data_V_address0),
    .ce0(partial_z_data_V_ce0),
    .we0(partial_z_data_V_we0),
    .d0(grp_multiply_row_col_fu_1155_agg_result_data_V_d0),
    .q0(partial_z_data_V_q0)
);

outer_product_p_0 #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
p_04_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_04_address0),
    .ce0(p_04_ce0),
    .we0(p_04_we0),
    .d0(grp_accumulate_fu_1166_agg_result_rowptr_d0),
    .q0(p_04_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_15_address0),
    .ce0(p_15_ce0),
    .we0(p_15_we0),
    .d0(grp_accumulate_fu_1166_agg_result_colind_d0),
    .q0(p_15_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_26_address0),
    .ce0(p_26_ce0),
    .we0(p_26_we0),
    .d0(grp_accumulate_fu_1166_agg_result_data_V_d0),
    .q0(p_26_q0)
);

outer_product_inp_csr_rowptr_assig #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
p_07_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_07_address0),
    .ce0(p_07_ce0),
    .we0(p_07_we0),
    .d0(agg_result_rowptr_q0),
    .q0(p_07_q0),
    .address1(grp_accumulate_fu_1166_csr1_rowptr_address1),
    .ce1(p_07_ce1),
    .q1(p_07_q1)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_18_address0),
    .ce0(p_18_ce0),
    .we0(p_18_we0),
    .d0(agg_result_colind_q0),
    .q0(p_18_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_29_address0),
    .ce0(p_29_ce0),
    .we0(p_29_we0),
    .d0(agg_result_data_V_q0),
    .q0(p_29_q0)
);

outer_product_inp_csr_rowptr_assig #(
    .DataWidth( 32 ),
    .AddressRange( 495 ),
    .AddressWidth( 9 ))
p_010_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_010_address0),
    .ce0(p_010_ce0),
    .we0(p_010_we0),
    .d0(partial_z_rowptr_q0),
    .q0(p_010_q0),
    .address1(grp_accumulate_fu_1166_csr2_rowptr_address1),
    .ce1(p_010_ce1),
    .q1(p_010_q1)
);

outer_product_partial_z_colind #(
    .DataWidth( 9 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_111_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_111_address0),
    .ce0(p_111_ce0),
    .we0(p_111_we0),
    .d0(partial_z_colind_q0),
    .q0(p_111_q0)
);

outer_product_inp_csr_data_V_assig #(
    .DataWidth( 32 ),
    .AddressRange( 244036 ),
    .AddressWidth( 18 ))
p_212_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_212_address0),
    .ce0(p_212_ce0),
    .we0(p_212_we0),
    .d0(partial_z_data_V_q0),
    .q0(p_212_q0)
);

multiply_row_col grp_multiply_row_col_fu_1155(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_multiply_row_col_fu_1155_ap_start),
    .ap_done(grp_multiply_row_col_fu_1155_ap_done),
    .ap_idle(grp_multiply_row_col_fu_1155_ap_idle),
    .ap_ready(grp_multiply_row_col_fu_1155_ap_ready),
    .agg_result_rowptr_address0(grp_multiply_row_col_fu_1155_agg_result_rowptr_address0),
    .agg_result_rowptr_ce0(grp_multiply_row_col_fu_1155_agg_result_rowptr_ce0),
    .agg_result_rowptr_we0(grp_multiply_row_col_fu_1155_agg_result_rowptr_we0),
    .agg_result_rowptr_d0(grp_multiply_row_col_fu_1155_agg_result_rowptr_d0),
    .agg_result_colind_address0(grp_multiply_row_col_fu_1155_agg_result_colind_address0),
    .agg_result_colind_ce0(grp_multiply_row_col_fu_1155_agg_result_colind_ce0),
    .agg_result_colind_we0(grp_multiply_row_col_fu_1155_agg_result_colind_we0),
    .agg_result_colind_d0(grp_multiply_row_col_fu_1155_agg_result_colind_d0),
    .agg_result_data_V_address0(grp_multiply_row_col_fu_1155_agg_result_data_V_address0),
    .agg_result_data_V_ce0(grp_multiply_row_col_fu_1155_agg_result_data_V_ce0),
    .agg_result_data_V_we0(grp_multiply_row_col_fu_1155_agg_result_data_V_we0),
    .agg_result_data_V_d0(grp_multiply_row_col_fu_1155_agg_result_data_V_d0),
    .row_V_address0(grp_multiply_row_col_fu_1155_row_V_address0),
    .row_V_ce0(grp_multiply_row_col_fu_1155_row_V_ce0),
    .row_V_q0(out_row_V_q0),
    .col_V_address0(grp_multiply_row_col_fu_1155_col_V_address0),
    .col_V_ce0(grp_multiply_row_col_fu_1155_col_V_ce0),
    .col_V_q0(out_col_V_q0)
);

accumulate grp_accumulate_fu_1166(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_accumulate_fu_1166_ap_start),
    .ap_done(grp_accumulate_fu_1166_ap_done),
    .ap_idle(grp_accumulate_fu_1166_ap_idle),
    .ap_ready(grp_accumulate_fu_1166_ap_ready),
    .agg_result_rowptr_address0(grp_accumulate_fu_1166_agg_result_rowptr_address0),
    .agg_result_rowptr_ce0(grp_accumulate_fu_1166_agg_result_rowptr_ce0),
    .agg_result_rowptr_we0(grp_accumulate_fu_1166_agg_result_rowptr_we0),
    .agg_result_rowptr_d0(grp_accumulate_fu_1166_agg_result_rowptr_d0),
    .agg_result_rowptr_q0(p_04_q0),
    .agg_result_colind_address0(grp_accumulate_fu_1166_agg_result_colind_address0),
    .agg_result_colind_ce0(grp_accumulate_fu_1166_agg_result_colind_ce0),
    .agg_result_colind_we0(grp_accumulate_fu_1166_agg_result_colind_we0),
    .agg_result_colind_d0(grp_accumulate_fu_1166_agg_result_colind_d0),
    .agg_result_data_V_address0(grp_accumulate_fu_1166_agg_result_data_V_address0),
    .agg_result_data_V_ce0(grp_accumulate_fu_1166_agg_result_data_V_ce0),
    .agg_result_data_V_we0(grp_accumulate_fu_1166_agg_result_data_V_we0),
    .agg_result_data_V_d0(grp_accumulate_fu_1166_agg_result_data_V_d0),
    .csr1_rowptr_address0(grp_accumulate_fu_1166_csr1_rowptr_address0),
    .csr1_rowptr_ce0(grp_accumulate_fu_1166_csr1_rowptr_ce0),
    .csr1_rowptr_q0(p_07_q0),
    .csr1_rowptr_address1(grp_accumulate_fu_1166_csr1_rowptr_address1),
    .csr1_rowptr_ce1(grp_accumulate_fu_1166_csr1_rowptr_ce1),
    .csr1_rowptr_q1(p_07_q1),
    .csr1_colind_address0(grp_accumulate_fu_1166_csr1_colind_address0),
    .csr1_colind_ce0(grp_accumulate_fu_1166_csr1_colind_ce0),
    .csr1_colind_q0(p_18_q0),
    .csr1_data_V_address0(grp_accumulate_fu_1166_csr1_data_V_address0),
    .csr1_data_V_ce0(grp_accumulate_fu_1166_csr1_data_V_ce0),
    .csr1_data_V_q0(p_29_q0),
    .csr2_rowptr_address0(grp_accumulate_fu_1166_csr2_rowptr_address0),
    .csr2_rowptr_ce0(grp_accumulate_fu_1166_csr2_rowptr_ce0),
    .csr2_rowptr_q0(p_010_q0),
    .csr2_rowptr_address1(grp_accumulate_fu_1166_csr2_rowptr_address1),
    .csr2_rowptr_ce1(grp_accumulate_fu_1166_csr2_rowptr_ce1),
    .csr2_rowptr_q1(p_010_q1),
    .csr2_colind_address0(grp_accumulate_fu_1166_csr2_colind_address0),
    .csr2_colind_ce0(grp_accumulate_fu_1166_csr2_colind_ce0),
    .csr2_colind_q0(p_111_q0),
    .csr2_data_V_address0(grp_accumulate_fu_1166_csr2_data_V_address0),
    .csr2_data_V_ce0(grp_accumulate_fu_1166_csr2_data_V_ce0),
    .csr2_data_V_q0(p_212_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_accumulate_fu_1166_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state50)) begin
            grp_accumulate_fu_1166_ap_start_reg <= 1'b1;
        end else if ((grp_accumulate_fu_1166_ap_ready == 1'b1)) begin
            grp_accumulate_fu_1166_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_multiply_row_col_fu_1155_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond_i1_fu_1455_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
            grp_multiply_row_col_fu_1155_ap_start_reg <= 1'b1;
        end else if ((grp_multiply_row_col_fu_1155_ap_ready == 1'b1)) begin
            grp_multiply_row_col_fu_1155_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) & ((tmp_57_fu_1645_p2 == 1'd1) | (tmp_23_reg_2067 == 1'd1)))) begin
        col_assign_reg_811 <= i_2_reg_1716;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_assign_reg_811 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_i1_reg_999 <= i_1_reg_2048;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        i_i1_reg_999 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_i_reg_899 <= i_reg_1874;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        i_i_reg_899 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_59_reg_1794 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        indvar1_reg_867 <= 18'd0;
    end else if (((tmp_61_reg_1813 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar1_reg_867 <= indvarinc1_reg_1798;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_1813 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar2_reg_878 <= 18'd0;
    end else if (((tmp_63_reg_1832 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        indvar2_reg_878 <= indvarinc2_reg_1817;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_reg_1959 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        indvar3_reg_956 <= 9'd0;
    end else if (((tmp_65_reg_1978 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        indvar3_reg_956 <= indvarinc3_reg_1963;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_65_reg_1978 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        indvar4_reg_967 <= 18'd0;
    end else if (((tmp_67_reg_1997 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        indvar4_reg_967 <= indvarinc4_reg_1982;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_67_reg_1997 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        indvar5_reg_978 <= 18'd0;
    end else if (((tmp_69_reg_2016 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar5_reg_978 <= indvarinc5_reg_2001;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_reg_1775 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_reg_856 <= 9'd0;
    end else if (((tmp_59_reg_1794 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        indvar_reg_856 <= indvarinc_reg_1779;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_54_reg_2213 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        invdar3_i7_reg_1100 <= 18'd0;
    end else if (((tmp_56_reg_2232 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        invdar3_i7_reg_1100 <= indvarinc4_i8_reg_2217;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_25_reg_2269 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        invdar3_i_reg_1133 <= 18'd0;
    end else if (((tmp_31_reg_2288 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        invdar3_i_reg_1133 <= indvarinc4_i_reg_2273;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_54_reg_2213 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        invdar_i1_reg_1089 <= indvarinc_i2_reg_2198;
    end else if (((grp_accumulate_fu_1166_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        invdar_i1_reg_1089 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_multiply_row_col_fu_1155_ap_done == 1'b1) & (tmp_23_reg_2067 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        invdar_i_reg_1122 <= 9'd0;
    end else if (((tmp_25_reg_2269 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
        invdar_i_reg_1122 <= indvarinc_i_reg_2254;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & ((tmp_63_i_fu_1483_p2 == 1'd0) | (tmp_61_i_reg_2053 == 1'd0)))) begin
        j2_i_be_reg_1011 <= j2_i_reg_989;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        j2_i_be_reg_1011 <= j_3_fu_1498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        j2_i_reg_989 <= j2_i_be_reg_1011;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        j2_i_reg_989 <= inp_csr_rowptr_assig_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & ((tmp_70_i_fu_1328_p2 == 1'd0) | (tmp_68_i_reg_1879 == 1'd0)))) begin
        j4_i_be_reg_911 <= j4_i_reg_889;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j4_i_be_reg_911 <= j_1_fu_1343_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j4_i_reg_889 <= j4_i_be_reg_911;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        j4_i_reg_889 <= inp_csc_colptr_assig_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_56_reg_2232 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        p_i0_0_i1_reg_1111 <= 18'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        p_i0_0_i1_reg_1111 <= p_i0_1_reg_2244;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
        p_i0_0_i_reg_1144 <= 18'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        p_i0_0_i_reg_1144 <= p_i0_reg_2300;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_1306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_11_reg_923 <= 9'd0;
    end else if (((tmp_14_reg_1921 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        tmp_11_reg_923 <= tmp_12_reg_1906;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_14_reg_1921 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        tmp_15_reg_934 <= 18'd0;
    end else if (((tmp_18_reg_1940 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_15_reg_934 <= tmp_16_reg_1925;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_reg_1940 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_19_reg_945 <= 18'd0;
    end else if (((tmp_22_reg_1959 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        tmp_19_reg_945 <= tmp_20_reg_1944;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_multiply_row_col_fu_1155_ap_done == 1'b1) & (tmp_23_reg_2067 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        tmp_26_reg_1023 <= 9'd0;
    end else if (((tmp_29_reg_2099 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        tmp_26_reg_1023 <= tmp_27_reg_2084;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_29_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        tmp_32_reg_1034 <= 18'd0;
    end else if (((tmp_35_reg_2118 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        tmp_32_reg_1034 <= tmp_33_reg_2103;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_35_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        tmp_37_reg_1045 <= 18'd0;
    end else if (((tmp_40_reg_2137 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        tmp_37_reg_1045 <= tmp_38_reg_2122;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_40_reg_2137 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        tmp_41_reg_1056 <= 9'd0;
    end else if (((tmp_44_reg_2156 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        tmp_41_reg_1056 <= tmp_42_reg_2141;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_44_reg_2156 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        tmp_45_reg_1067 <= 18'd0;
    end else if (((tmp_48_reg_2175 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        tmp_45_reg_1067 <= tmp_46_reg_2160;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_48_reg_2175 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        tmp_49_reg_1078 <= 18'd0;
    end else if (((tmp_52_reg_2194 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        tmp_49_reg_1078 <= tmp_50_reg_2179;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_reg_1737 == 1'd1))) begin
        tmp_4_reg_834 <= 18'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_7_reg_1756 == 1'd0))) begin
        tmp_4_reg_834 <= tmp_5_reg_1741;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_7_reg_1756 == 1'd1))) begin
        tmp_8_reg_845 <= 18'd0;
    end else if (((tmp_10_reg_1775 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_8_reg_845 <= tmp_9_reg_1760;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1179_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_823 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_reg_1737 == 1'd0))) begin
        tmp_reg_823 <= tmp_1_reg_1722;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        end_idx_1_reg_2035 <= inp_csr_rowptr_assig_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        end_idx_reg_1861 <= inp_csc_colptr_assig_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_1_reg_2048 <= i_1_fu_1461_p2;
        i_i42_cast_reg_2040[8 : 0] <= i_i42_cast_fu_1451_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_1716 <= i_2_fu_1185_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_i_cast_reg_1866[8 : 0] <= i_i_cast_fu_1302_p1[8 : 0];
        i_reg_1874 <= i_fu_1312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvarinc1_reg_1798 <= indvarinc1_fu_1259_p2;
        tmp_60_reg_1803[17 : 0] <= tmp_60_fu_1265_p1[17 : 0];
        tmp_61_reg_1813 <= tmp_61_fu_1270_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvarinc2_reg_1817 <= indvarinc2_fu_1276_p2;
        tmp_62_reg_1822[17 : 0] <= tmp_62_fu_1282_p1[17 : 0];
        tmp_63_reg_1832 <= tmp_63_fu_1287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        indvarinc3_reg_1963 <= indvarinc3_fu_1400_p2;
        tmp_64_reg_1968[8 : 0] <= tmp_64_fu_1406_p1[8 : 0];
        tmp_65_reg_1978 <= tmp_65_fu_1411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        indvarinc4_i8_reg_2217 <= indvarinc4_i8_fu_1623_p2;
        tmp_55_reg_2222[17 : 0] <= tmp_55_fu_1629_p1[17 : 0];
        tmp_56_reg_2232 <= tmp_56_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        indvarinc4_i_reg_2273 <= indvarinc4_i_fu_1674_p2;
        tmp_30_reg_2278[17 : 0] <= tmp_30_fu_1680_p1[17 : 0];
        tmp_31_reg_2288 <= tmp_31_fu_1685_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        indvarinc4_reg_1982 <= indvarinc4_fu_1417_p2;
        tmp_66_reg_1987[17 : 0] <= tmp_66_fu_1423_p1[17 : 0];
        tmp_67_reg_1997 <= tmp_67_fu_1428_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        indvarinc5_reg_2001 <= indvarinc5_fu_1434_p2;
        tmp_68_reg_2006[17 : 0] <= tmp_68_fu_1440_p1[17 : 0];
        tmp_69_reg_2016 <= tmp_69_fu_1445_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        indvarinc_i2_reg_2198 <= indvarinc_i2_fu_1606_p2;
        tmp_53_reg_2203[8 : 0] <= tmp_53_fu_1612_p1[8 : 0];
        tmp_54_reg_2213 <= tmp_54_fu_1617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        indvarinc_i_reg_2254 <= indvarinc_i_fu_1657_p2;
        tmp_24_reg_2259[8 : 0] <= tmp_24_fu_1663_p1[8 : 0];
        tmp_25_reg_2269 <= tmp_25_fu_1668_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvarinc_reg_1779 <= indvarinc_fu_1242_p2;
        tmp_58_reg_1784[8 : 0] <= tmp_58_fu_1248_p1[8 : 0];
        tmp_59_reg_1794 <= tmp_59_fu_1253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_reg_2067 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        p_i0_0_i1_cast_reg_2236[17 : 0] <= p_i0_0_i1_cast_fu_1640_p1[17 : 0];
        p_i0_1_reg_2244 <= p_i0_1_fu_1651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        p_i0_0_i_cast_reg_2292[17 : 0] <= p_i0_0_i_cast_fu_1696_p1[17 : 0];
        p_i0_reg_2300 <= p_i0_fu_1707_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_10_reg_1775 <= tmp_10_fu_1236_p2;
        tmp_9_reg_1760 <= tmp_9_fu_1225_p2;
        tmp_s_reg_1765[17 : 0] <= tmp_s_fu_1231_p1[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_12_reg_1906 <= tmp_12_fu_1349_p2;
        tmp_13_reg_1911[8 : 0] <= tmp_13_fu_1355_p1[8 : 0];
        tmp_14_reg_1921 <= tmp_14_fu_1360_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_16_reg_1925 <= tmp_16_fu_1366_p2;
        tmp_17_reg_1930[17 : 0] <= tmp_17_fu_1372_p1[17 : 0];
        tmp_18_reg_1940 <= tmp_18_fu_1377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_1_reg_1722 <= tmp_1_fu_1191_p2;
        tmp_2_reg_1727[8 : 0] <= tmp_2_fu_1197_p1[8 : 0];
        tmp_3_reg_1737 <= tmp_3_fu_1202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_20_reg_1944 <= tmp_20_fu_1383_p2;
        tmp_21_reg_1949[17 : 0] <= tmp_21_fu_1389_p1[17 : 0];
        tmp_22_reg_1959 <= tmp_22_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_1455_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        tmp_23_reg_2067 <= tmp_23_fu_1477_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_27_reg_2084 <= tmp_27_fu_1504_p2;
        tmp_28_reg_2089[8 : 0] <= tmp_28_fu_1510_p1[8 : 0];
        tmp_29_reg_2099 <= tmp_29_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_33_reg_2103 <= tmp_33_fu_1521_p2;
        tmp_34_reg_2108[17 : 0] <= tmp_34_fu_1527_p1[17 : 0];
        tmp_35_reg_2118 <= tmp_35_fu_1532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        tmp_38_reg_2122 <= tmp_38_fu_1538_p2;
        tmp_39_reg_2127[17 : 0] <= tmp_39_fu_1544_p1[17 : 0];
        tmp_40_reg_2137 <= tmp_40_fu_1549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_42_reg_2141 <= tmp_42_fu_1555_p2;
        tmp_43_reg_2146[8 : 0] <= tmp_43_fu_1561_p1[8 : 0];
        tmp_44_reg_2156 <= tmp_44_fu_1566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_46_reg_2160 <= tmp_46_fu_1572_p2;
        tmp_47_reg_2165[17 : 0] <= tmp_47_fu_1578_p1[17 : 0];
        tmp_48_reg_2175 <= tmp_48_fu_1583_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_50_reg_2179 <= tmp_50_fu_1589_p2;
        tmp_51_reg_2184[17 : 0] <= tmp_51_fu_1595_p1[17 : 0];
        tmp_52_reg_2194 <= tmp_52_fu_1600_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_5_reg_1741 <= tmp_5_fu_1208_p2;
        tmp_6_reg_1746[17 : 0] <= tmp_6_fu_1214_p1[17 : 0];
        tmp_7_reg_1756 <= tmp_7_fu_1219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_1455_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        tmp_61_i_reg_2053 <= tmp_61_i_fu_1467_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_1455_p2 == 1'd0) & (tmp_61_i_fu_1467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        tmp_62_i_reg_2057 <= tmp_62_i_fu_1472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_63_reg_1832 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        tmp_67_i_reg_1846[8 : 0] <= tmp_67_i_fu_1298_p1[8 : 0];
        tmp_i_reg_1836[8 : 0] <= tmp_i_fu_1293_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_1306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_68_i_reg_1879 <= tmp_68_i_fu_1318_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_1306_p2 == 1'd0) & (tmp_68_i_fu_1318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_69_i_reg_1883 <= tmp_69_i_fu_1323_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        agg_result_colind_address0 = tmp_30_reg_2278;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        agg_result_colind_address0 = tmp_55_reg_2222;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        agg_result_colind_address0 = tmp_34_fu_1527_p1;
    end else begin
        agg_result_colind_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state55))) begin
        agg_result_colind_ce0 = 1'b1;
    end else begin
        agg_result_colind_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        agg_result_colind_d0 = extLd_fu_1691_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        agg_result_colind_d0 = p_15_q0;
    end else begin
        agg_result_colind_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state55))) begin
        agg_result_colind_we0 = 1'b1;
    end else begin
        agg_result_colind_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        agg_result_data_V_address0 = p_i0_0_i_cast_reg_2292;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        agg_result_data_V_address0 = p_i0_0_i1_cast_reg_2236;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        agg_result_data_V_address0 = tmp_39_fu_1544_p1;
    end else begin
        agg_result_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state57))) begin
        agg_result_data_V_ce0 = 1'b1;
    end else begin
        agg_result_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        agg_result_data_V_d0 = partial_z_data_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        agg_result_data_V_d0 = p_26_q0;
    end else begin
        agg_result_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state57))) begin
        agg_result_data_V_we0 = 1'b1;
    end else begin
        agg_result_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        agg_result_rowptr_address0 = tmp_24_reg_2259;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        agg_result_rowptr_address0 = tmp_53_reg_2203;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        agg_result_rowptr_address0 = tmp_28_fu_1510_p1;
    end else begin
        agg_result_rowptr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53))) begin
        agg_result_rowptr_ce0 = 1'b1;
    end else begin
        agg_result_rowptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        agg_result_rowptr_d0 = partial_z_rowptr_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        agg_result_rowptr_d0 = p_04_q0;
    end else begin
        agg_result_rowptr_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53))) begin
        agg_result_rowptr_we0 = 1'b1;
    end else begin
        agg_result_rowptr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_1179_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_1179_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        inp_csc_colptr_assig_address0 = tmp_i_fu_1293_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        inp_csc_colptr_assig_address0 = tmp_58_reg_1784;
    end else begin
        inp_csc_colptr_assig_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14))) begin
        inp_csc_colptr_assig_ce0 = 1'b1;
    end else begin
        inp_csc_colptr_assig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        inp_csc_colptr_assig_ce1 = 1'b1;
    end else begin
        inp_csc_colptr_assig_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        inp_csc_colptr_assig_we0 = 1'b1;
    end else begin
        inp_csc_colptr_assig_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        inp_csc_data_V_assig_address0 = tmp_69_i_reg_1883;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        inp_csc_data_V_assig_address0 = tmp_62_reg_1822;
    end else begin
        inp_csc_data_V_assig_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14))) begin
        inp_csc_data_V_assig_ce0 = 1'b1;
    end else begin
        inp_csc_data_V_assig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        inp_csc_data_V_assig_we0 = 1'b1;
    end else begin
        inp_csc_data_V_assig_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        inp_csc_rowind_assig_address0 = tmp_69_i_fu_1323_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        inp_csc_rowind_assig_address0 = tmp_60_reg_1803;
    end else begin
        inp_csc_rowind_assig_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16))) begin
        inp_csc_rowind_assig_ce0 = 1'b1;
    end else begin
        inp_csc_rowind_assig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        inp_csc_rowind_assig_we0 = 1'b1;
    end else begin
        inp_csc_rowind_assig_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        inp_csr_colind_assig_address0 = tmp_62_i_fu_1472_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        inp_csr_colind_assig_address0 = tmp_66_reg_1987;
    end else begin
        inp_csr_colind_assig_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29))) begin
        inp_csr_colind_assig_ce0 = 1'b1;
    end else begin
        inp_csr_colind_assig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        inp_csr_colind_assig_we0 = 1'b1;
    end else begin
        inp_csr_colind_assig_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        inp_csr_data_V_assig_address0 = tmp_62_i_reg_2057;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        inp_csr_data_V_assig_address0 = tmp_68_reg_2006;
    end else begin
        inp_csr_data_V_assig_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31))) begin
        inp_csr_data_V_assig_ce0 = 1'b1;
    end else begin
        inp_csr_data_V_assig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        inp_csr_data_V_assig_we0 = 1'b1;
    end else begin
        inp_csr_data_V_assig_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        inp_csr_rowptr_assig_address0 = tmp_i_reg_1836;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        inp_csr_rowptr_assig_address0 = tmp_64_reg_1968;
    end else begin
        inp_csr_rowptr_assig_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27))) begin
        inp_csr_rowptr_assig_ce0 = 1'b1;
    end else begin
        inp_csr_rowptr_assig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        inp_csr_rowptr_assig_ce1 = 1'b1;
    end else begin
        inp_csr_rowptr_assig_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        inp_csr_rowptr_assig_we0 = 1'b1;
    end else begin
        inp_csr_rowptr_assig_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        out_col_V_address0 = tmp_72_i_fu_1338_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_col_V_address0 = tmp_71_i_fu_1333_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        out_col_V_address0 = grp_multiply_row_col_fu_1155_col_V_address0;
    end else begin
        out_col_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        out_col_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        out_col_V_ce0 = grp_multiply_row_col_fu_1155_col_V_ce0;
    end else begin
        out_col_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        out_col_V_d0 = inp_csc_data_V_assig_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_col_V_d0 = 32'd0;
    end else begin
        out_col_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state17) & ((tmp_70_i_fu_1328_p2 == 1'd0) | (tmp_68_i_reg_1879 == 1'd0))))) begin
        out_col_V_we0 = 1'b1;
    end else begin
        out_col_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        out_row_V_address0 = tmp_65_i_fu_1493_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        out_row_V_address0 = tmp_64_i_fu_1488_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        out_row_V_address0 = grp_multiply_row_col_fu_1155_row_V_address0;
    end else begin
        out_row_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        out_row_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        out_row_V_ce0 = grp_multiply_row_col_fu_1155_row_V_ce0;
    end else begin
        out_row_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        out_row_V_d0 = inp_csr_data_V_assig_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        out_row_V_d0 = 32'd0;
    end else begin
        out_row_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state34) & ((tmp_63_i_fu_1483_p2 == 1'd0) | (tmp_61_i_reg_2053 == 1'd0))))) begin
        out_row_V_we0 = 1'b1;
    end else begin
        out_row_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        p_010_address0 = tmp_43_reg_2146;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_010_address0 = grp_accumulate_fu_1166_csr2_rowptr_address0;
    end else begin
        p_010_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        p_010_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_010_ce0 = grp_accumulate_fu_1166_csr2_rowptr_ce0;
    end else begin
        p_010_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        p_010_ce1 = grp_accumulate_fu_1166_csr2_rowptr_ce1;
    end else begin
        p_010_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        p_010_we0 = 1'b1;
    end else begin
        p_010_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        p_01_address0 = tmp_64_fu_1406_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        p_01_address0 = tmp_13_reg_1911;
    end else begin
        p_01_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21))) begin
        p_01_ce0 = 1'b1;
    end else begin
        p_01_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        p_01_we0 = 1'b1;
    end else begin
        p_01_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        p_04_address0 = tmp_53_fu_1612_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_04_address0 = grp_accumulate_fu_1166_agg_result_rowptr_address0;
    end else begin
        p_04_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        p_04_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_04_ce0 = grp_accumulate_fu_1166_agg_result_rowptr_ce0;
    end else begin
        p_04_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        p_04_we0 = grp_accumulate_fu_1166_agg_result_rowptr_we0;
    end else begin
        p_04_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        p_07_address0 = tmp_28_reg_2089;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_07_address0 = grp_accumulate_fu_1166_csr1_rowptr_address0;
    end else begin
        p_07_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        p_07_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_07_ce0 = grp_accumulate_fu_1166_csr1_rowptr_ce0;
    end else begin
        p_07_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        p_07_ce1 = grp_accumulate_fu_1166_csr1_rowptr_ce1;
    end else begin
        p_07_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        p_07_we0 = 1'b1;
    end else begin
        p_07_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_0_address0 = tmp_58_fu_1248_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_0_address0 = tmp_2_reg_1727;
    end else begin
        p_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9))) begin
        p_0_ce0 = 1'b1;
    end else begin
        p_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_0_we0 = 1'b1;
    end else begin
        p_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_111_address0 = tmp_47_reg_2165;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_111_address0 = grp_accumulate_fu_1166_csr2_colind_address0;
    end else begin
        p_111_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_111_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_111_ce0 = grp_accumulate_fu_1166_csr2_colind_ce0;
    end else begin
        p_111_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        p_111_we0 = 1'b1;
    end else begin
        p_111_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p_12_address0 = tmp_66_fu_1423_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        p_12_address0 = tmp_17_reg_1930;
    end else begin
        p_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23))) begin
        p_12_ce0 = 1'b1;
    end else begin
        p_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        p_12_we0 = 1'b1;
    end else begin
        p_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        p_15_address0 = tmp_55_fu_1629_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_15_address0 = grp_accumulate_fu_1166_agg_result_colind_address0;
    end else begin
        p_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        p_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_15_ce0 = grp_accumulate_fu_1166_agg_result_colind_ce0;
    end else begin
        p_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        p_15_we0 = grp_accumulate_fu_1166_agg_result_colind_we0;
    end else begin
        p_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        p_18_address0 = tmp_34_reg_2108;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_18_address0 = grp_accumulate_fu_1166_csr1_colind_address0;
    end else begin
        p_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        p_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_18_ce0 = grp_accumulate_fu_1166_csr1_colind_ce0;
    end else begin
        p_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        p_18_we0 = 1'b1;
    end else begin
        p_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        p_1_address0 = tmp_60_fu_1265_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_1_address0 = tmp_6_reg_1746;
    end else begin
        p_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state11))) begin
        p_1_ce0 = 1'b1;
    end else begin
        p_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_1_we0 = 1'b1;
    end else begin
        p_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        p_212_address0 = tmp_51_reg_2184;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_212_address0 = grp_accumulate_fu_1166_csr2_data_V_address0;
    end else begin
        p_212_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        p_212_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_212_ce0 = grp_accumulate_fu_1166_csr2_data_V_ce0;
    end else begin
        p_212_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        p_212_we0 = 1'b1;
    end else begin
        p_212_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        p_23_address0 = tmp_68_fu_1440_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        p_23_address0 = tmp_21_reg_1949;
    end else begin
        p_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25))) begin
        p_23_ce0 = 1'b1;
    end else begin
        p_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        p_23_we0 = 1'b1;
    end else begin
        p_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        p_26_address0 = p_i0_0_i1_cast_fu_1640_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_26_address0 = grp_accumulate_fu_1166_agg_result_data_V_address0;
    end else begin
        p_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        p_26_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_26_ce0 = grp_accumulate_fu_1166_agg_result_data_V_ce0;
    end else begin
        p_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        p_26_we0 = grp_accumulate_fu_1166_agg_result_data_V_we0;
    end else begin
        p_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        p_29_address0 = tmp_39_reg_2127;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_29_address0 = grp_accumulate_fu_1166_csr1_data_V_address0;
    end else begin
        p_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        p_29_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        p_29_ce0 = grp_accumulate_fu_1166_csr1_data_V_ce0;
    end else begin
        p_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        p_29_we0 = 1'b1;
    end else begin
        p_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_2_address0 = tmp_62_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_2_address0 = tmp_s_reg_1765;
    end else begin
        p_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state13))) begin
        p_2_ce0 = 1'b1;
    end else begin
        p_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_2_we0 = 1'b1;
    end else begin
        p_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        partial_z_colind_address0 = tmp_30_fu_1680_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        partial_z_colind_address0 = tmp_47_fu_1578_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_colind_address0 = grp_multiply_row_col_fu_1155_agg_result_colind_address0;
    end else begin
        partial_z_colind_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state46))) begin
        partial_z_colind_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_colind_ce0 = grp_multiply_row_col_fu_1155_agg_result_colind_ce0;
    end else begin
        partial_z_colind_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_colind_we0 = grp_multiply_row_col_fu_1155_agg_result_colind_we0;
    end else begin
        partial_z_colind_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        partial_z_data_V_address0 = p_i0_0_i_cast_fu_1696_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        partial_z_data_V_address0 = tmp_51_fu_1595_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_data_V_address0 = grp_multiply_row_col_fu_1155_agg_result_data_V_address0;
    end else begin
        partial_z_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state48))) begin
        partial_z_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_data_V_ce0 = grp_multiply_row_col_fu_1155_agg_result_data_V_ce0;
    end else begin
        partial_z_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_data_V_we0 = grp_multiply_row_col_fu_1155_agg_result_data_V_we0;
    end else begin
        partial_z_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        partial_z_rowptr_address0 = tmp_24_fu_1663_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        partial_z_rowptr_address0 = tmp_43_fu_1561_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_rowptr_address0 = grp_multiply_row_col_fu_1155_agg_result_rowptr_address0;
    end else begin
        partial_z_rowptr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state44))) begin
        partial_z_rowptr_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_rowptr_ce0 = grp_multiply_row_col_fu_1155_agg_result_rowptr_ce0;
    end else begin
        partial_z_rowptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_z_rowptr_we0 = grp_multiply_row_col_fu_1155_agg_result_rowptr_we0;
    end else begin
        partial_z_rowptr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_csc_colptr_ce0 = 1'b1;
    end else begin
        x_csc_colptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x_csc_data_V_ce0 = 1'b1;
    end else begin
        x_csc_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x_csc_rowind_ce0 = 1'b1;
    end else begin
        x_csc_rowind_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        y_csr_colind_ce0 = 1'b1;
    end else begin
        y_csr_colind_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        y_csr_data_V_ce0 = 1'b1;
    end else begin
        y_csr_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        y_csr_rowptr_ce0 = 1'b1;
    end else begin
        y_csr_rowptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_1179_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_reg_1737 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_7_reg_1756 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_10_reg_1775 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((tmp_59_reg_1794 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((tmp_61_reg_1813 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((tmp_63_reg_1832 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((exitcond_i_fu_1306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & ((tmp_70_i_fu_1328_p2 == 1'd0) | (tmp_68_i_reg_1879 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((tmp_14_reg_1921 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((tmp_18_reg_1940 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((tmp_22_reg_1959 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((tmp_65_reg_1978 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((tmp_67_reg_1997 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((tmp_69_reg_2016 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((exitcond_i1_fu_1455_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & ((tmp_63_i_fu_1483_p2 == 1'd0) | (tmp_61_i_reg_2053 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_multiply_row_col_fu_1155_ap_done == 1'b1) & (tmp_23_reg_2067 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else if (((grp_multiply_row_col_fu_1155_ap_done == 1'b1) & (tmp_23_reg_2067 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((tmp_29_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((tmp_35_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((tmp_40_reg_2137 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((tmp_44_reg_2156 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((tmp_48_reg_2175 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((tmp_52_reg_2194 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((grp_accumulate_fu_1166_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((tmp_54_reg_2213 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((tmp_56_reg_2232 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((1'b1 == ap_CS_fsm_state56) & ((tmp_57_fu_1645_p2 == 1'd1) | (tmp_23_reg_2067 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((tmp_25_reg_2269 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((tmp_31_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((tmp_36_fu_1701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond_fu_1179_p2 = ((col_assign_reg_811 == 9'd494) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_1455_p2 = ((i_i1_reg_999 == 9'd494) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1306_p2 = ((i_i_reg_899 == 9'd494) ? 1'b1 : 1'b0);

assign extLd_fu_1691_p1 = partial_z_colind_q0;

assign grp_accumulate_fu_1166_ap_start = grp_accumulate_fu_1166_ap_start_reg;

assign grp_multiply_row_col_fu_1155_ap_start = grp_multiply_row_col_fu_1155_ap_start_reg;

assign i_1_fu_1461_p2 = (i_i1_reg_999 + 9'd1);

assign i_2_fu_1185_p2 = (col_assign_reg_811 + 9'd1);

assign i_fu_1312_p2 = (i_i_reg_899 + 9'd1);

assign i_i42_cast_fu_1451_p1 = i_i1_reg_999;

assign i_i_cast_fu_1302_p1 = i_i_reg_899;

assign indvarinc1_fu_1259_p2 = (indvar1_reg_867 + 18'd1);

assign indvarinc2_fu_1276_p2 = (indvar2_reg_878 + 18'd1);

assign indvarinc3_fu_1400_p2 = (indvar3_reg_956 + 9'd1);

assign indvarinc4_fu_1417_p2 = (indvar4_reg_967 + 18'd1);

assign indvarinc4_i8_fu_1623_p2 = (invdar3_i7_reg_1100 + 18'd1);

assign indvarinc4_i_fu_1674_p2 = (invdar3_i_reg_1133 + 18'd1);

assign indvarinc5_fu_1434_p2 = (indvar5_reg_978 + 18'd1);

assign indvarinc_fu_1242_p2 = (indvar_reg_856 + 9'd1);

assign indvarinc_i2_fu_1606_p2 = (invdar_i1_reg_1089 + 9'd1);

assign indvarinc_i_fu_1657_p2 = (invdar_i_reg_1122 + 9'd1);

assign inp_csc_colptr_assig_address1 = tmp_67_i_fu_1298_p1;

assign inp_csr_rowptr_assig_address1 = tmp_67_i_reg_1846;

assign j_1_fu_1343_p2 = ($signed(j4_i_reg_889) + $signed(32'd1));

assign j_3_fu_1498_p2 = ($signed(j2_i_reg_989) + $signed(32'd1));

assign p_i0_0_i1_cast_fu_1640_p1 = p_i0_0_i1_reg_1111;

assign p_i0_0_i_cast_fu_1696_p1 = p_i0_0_i_reg_1144;

assign p_i0_1_fu_1651_p2 = (p_i0_0_i1_reg_1111 + 18'd1);

assign p_i0_fu_1707_p2 = (p_i0_0_i_reg_1144 + 18'd1);

assign tmp_10_fu_1236_p2 = ((tmp_8_reg_845 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_12_fu_1349_p2 = (tmp_11_reg_923 + 9'd1);

assign tmp_13_fu_1355_p1 = tmp_11_reg_923;

assign tmp_14_fu_1360_p2 = ((tmp_11_reg_923 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_16_fu_1366_p2 = (tmp_15_reg_934 + 18'd1);

assign tmp_17_fu_1372_p1 = tmp_15_reg_934;

assign tmp_18_fu_1377_p2 = ((tmp_15_reg_934 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_1_fu_1191_p2 = (tmp_reg_823 + 9'd1);

assign tmp_20_fu_1383_p2 = (tmp_19_reg_945 + 18'd1);

assign tmp_21_fu_1389_p1 = tmp_19_reg_945;

assign tmp_22_fu_1394_p2 = ((tmp_19_reg_945 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_23_fu_1477_p2 = ((col_assign_reg_811 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_24_fu_1663_p1 = invdar_i_reg_1122;

assign tmp_25_fu_1668_p2 = ((invdar_i_reg_1122 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_27_fu_1504_p2 = (tmp_26_reg_1023 + 9'd1);

assign tmp_28_fu_1510_p1 = tmp_26_reg_1023;

assign tmp_29_fu_1515_p2 = ((tmp_26_reg_1023 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_2_fu_1197_p1 = tmp_reg_823;

assign tmp_30_fu_1680_p1 = invdar3_i_reg_1133;

assign tmp_31_fu_1685_p2 = ((invdar3_i_reg_1133 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_33_fu_1521_p2 = (tmp_32_reg_1034 + 18'd1);

assign tmp_34_fu_1527_p1 = tmp_32_reg_1034;

assign tmp_35_fu_1532_p2 = ((tmp_32_reg_1034 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_36_fu_1701_p2 = ((p_i0_0_i_reg_1144 == 18'd244036) ? 1'b1 : 1'b0);

assign tmp_38_fu_1538_p2 = (tmp_37_reg_1045 + 18'd1);

assign tmp_39_fu_1544_p1 = tmp_37_reg_1045;

assign tmp_3_fu_1202_p2 = ((tmp_reg_823 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_40_fu_1549_p2 = ((tmp_37_reg_1045 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_42_fu_1555_p2 = (tmp_41_reg_1056 + 9'd1);

assign tmp_43_fu_1561_p1 = tmp_41_reg_1056;

assign tmp_44_fu_1566_p2 = ((tmp_41_reg_1056 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_46_fu_1572_p2 = (tmp_45_reg_1067 + 18'd1);

assign tmp_47_fu_1578_p1 = tmp_45_reg_1067;

assign tmp_48_fu_1583_p2 = ((tmp_45_reg_1067 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_50_fu_1589_p2 = (tmp_49_reg_1078 + 18'd1);

assign tmp_51_fu_1595_p1 = tmp_49_reg_1078;

assign tmp_52_fu_1600_p2 = ((tmp_49_reg_1078 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_53_fu_1612_p1 = invdar_i1_reg_1089;

assign tmp_54_fu_1617_p2 = ((invdar_i1_reg_1089 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_55_fu_1629_p1 = invdar3_i7_reg_1100;

assign tmp_56_fu_1634_p2 = ((invdar3_i7_reg_1100 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_57_fu_1645_p2 = ((p_i0_0_i1_reg_1111 == 18'd244036) ? 1'b1 : 1'b0);

assign tmp_58_fu_1248_p1 = indvar_reg_856;

assign tmp_59_fu_1253_p2 = ((indvar_reg_856 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_5_fu_1208_p2 = (tmp_4_reg_834 + 18'd1);

assign tmp_60_fu_1265_p1 = indvar1_reg_867;

assign tmp_61_fu_1270_p2 = ((indvar1_reg_867 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_61_i_fu_1467_p2 = (($signed(j2_i_reg_989) < $signed(end_idx_1_reg_2035)) ? 1'b1 : 1'b0);

assign tmp_62_fu_1282_p1 = indvar2_reg_878;

assign tmp_62_i_fu_1472_p1 = j2_i_reg_989;

assign tmp_63_fu_1287_p2 = ((indvar2_reg_878 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_63_i_fu_1483_p2 = ((inp_csr_colind_assig_q0 == i_i42_cast_reg_2040) ? 1'b1 : 1'b0);

assign tmp_64_fu_1406_p1 = indvar3_reg_956;

assign tmp_64_i_fu_1488_p1 = i_i1_reg_999;

assign tmp_65_fu_1411_p2 = ((indvar3_reg_956 == 9'd494) ? 1'b1 : 1'b0);

assign tmp_65_i_fu_1493_p1 = i_i1_reg_999;

assign tmp_66_fu_1423_p1 = indvar4_reg_967;

assign tmp_67_fu_1428_p2 = ((indvar4_reg_967 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_67_i_fu_1298_p1 = i_2_reg_1716;

assign tmp_68_fu_1440_p1 = indvar5_reg_978;

assign tmp_68_i_fu_1318_p2 = (($signed(j4_i_reg_889) < $signed(end_idx_reg_1861)) ? 1'b1 : 1'b0);

assign tmp_69_fu_1445_p2 = ((indvar5_reg_978 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_69_i_fu_1323_p1 = j4_i_reg_889;

assign tmp_6_fu_1214_p1 = tmp_4_reg_834;

assign tmp_70_i_fu_1328_p2 = ((inp_csc_rowind_assig_q0 == i_i_cast_reg_1866) ? 1'b1 : 1'b0);

assign tmp_71_i_fu_1333_p1 = i_i_reg_899;

assign tmp_72_i_fu_1338_p1 = i_i_reg_899;

assign tmp_7_fu_1219_p2 = ((tmp_4_reg_834 == 18'd244035) ? 1'b1 : 1'b0);

assign tmp_9_fu_1225_p2 = (tmp_8_reg_845 + 18'd1);

assign tmp_i_fu_1293_p1 = col_assign_reg_811;

assign tmp_s_fu_1231_p1 = tmp_8_reg_845;

assign x_csc_colptr_address0 = tmp_2_fu_1197_p1;

assign x_csc_data_V_address0 = tmp_s_fu_1231_p1;

assign x_csc_rowind_address0 = tmp_6_fu_1214_p1;

assign y_csr_colind_address0 = tmp_17_fu_1372_p1;

assign y_csr_data_V_address0 = tmp_21_fu_1389_p1;

assign y_csr_rowptr_address0 = tmp_13_fu_1355_p1;

always @ (posedge ap_clk) begin
    tmp_2_reg_1727[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_6_reg_1746[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_s_reg_1765[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_58_reg_1784[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_60_reg_1803[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_62_reg_1822[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_i_reg_1836[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_67_i_reg_1846[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    i_i_cast_reg_1866[31:9] <= 23'b00000000000000000000000;
    tmp_13_reg_1911[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_17_reg_1930[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_21_reg_1949[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_64_reg_1968[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_66_reg_1987[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_68_reg_2006[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    i_i42_cast_reg_2040[31:9] <= 23'b00000000000000000000000;
    tmp_28_reg_2089[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_34_reg_2108[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_39_reg_2127[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_43_reg_2146[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_47_reg_2165[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_51_reg_2184[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_53_reg_2203[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_55_reg_2222[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    p_i0_0_i1_cast_reg_2236[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    tmp_24_reg_2259[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_30_reg_2278[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    p_i0_0_i_cast_reg_2292[63:18] <= 46'b0000000000000000000000000000000000000000000000;
end

endmodule //outer_product
