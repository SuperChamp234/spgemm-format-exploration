-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity row_product is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_X_ROWPTR_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_X_ROWPTR_ID_WIDTH : INTEGER := 1;
    C_M_AXI_X_ROWPTR_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_ROWPTR_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_X_ROWPTR_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_ROWPTR_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_ROWPTR_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_ROWPTR_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_COLIND_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_X_COLIND_ID_WIDTH : INTEGER := 1;
    C_M_AXI_X_COLIND_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_COLIND_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_X_COLIND_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_COLIND_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_COLIND_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_COLIND_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_DATA_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_X_DATA_ID_WIDTH : INTEGER := 1;
    C_M_AXI_X_DATA_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_DATA_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_X_DATA_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_DATA_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_DATA_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_DATA_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_ROWPTR_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_Y_ROWPTR_ID_WIDTH : INTEGER := 1;
    C_M_AXI_Y_ROWPTR_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_ROWPTR_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_Y_ROWPTR_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_ROWPTR_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_ROWPTR_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_ROWPTR_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_COLIND_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_Y_COLIND_ID_WIDTH : INTEGER := 1;
    C_M_AXI_Y_COLIND_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_COLIND_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_Y_COLIND_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_COLIND_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_COLIND_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_COLIND_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_DATA_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_Y_DATA_ID_WIDTH : INTEGER := 1;
    C_M_AXI_Y_DATA_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_DATA_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_Y_DATA_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_DATA_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_DATA_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Y_DATA_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_ROWPTR_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_Z_ROWPTR_ID_WIDTH : INTEGER := 1;
    C_M_AXI_Z_ROWPTR_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_ROWPTR_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_Z_ROWPTR_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_ROWPTR_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_ROWPTR_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_ROWPTR_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_COLIND_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_Z_COLIND_ID_WIDTH : INTEGER := 1;
    C_M_AXI_Z_COLIND_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_COLIND_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_Z_COLIND_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_COLIND_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_COLIND_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_COLIND_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_DATA_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_Z_DATA_ID_WIDTH : INTEGER := 1;
    C_M_AXI_Z_DATA_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_DATA_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_Z_DATA_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_DATA_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_DATA_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_Z_DATA_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_ROWPTR_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_X_ROWPTR_USER_VALUE : INTEGER := 0;
    C_M_AXI_X_ROWPTR_PROT_VALUE : INTEGER := 0;
    C_M_AXI_X_ROWPTR_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_X_COLIND_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_X_COLIND_USER_VALUE : INTEGER := 0;
    C_M_AXI_X_COLIND_PROT_VALUE : INTEGER := 0;
    C_M_AXI_X_COLIND_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_X_DATA_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_X_DATA_USER_VALUE : INTEGER := 0;
    C_M_AXI_X_DATA_PROT_VALUE : INTEGER := 0;
    C_M_AXI_X_DATA_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_Y_ROWPTR_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_Y_ROWPTR_USER_VALUE : INTEGER := 0;
    C_M_AXI_Y_ROWPTR_PROT_VALUE : INTEGER := 0;
    C_M_AXI_Y_ROWPTR_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_Y_COLIND_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_Y_COLIND_USER_VALUE : INTEGER := 0;
    C_M_AXI_Y_COLIND_PROT_VALUE : INTEGER := 0;
    C_M_AXI_Y_COLIND_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_Y_DATA_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_Y_DATA_USER_VALUE : INTEGER := 0;
    C_M_AXI_Y_DATA_PROT_VALUE : INTEGER := 0;
    C_M_AXI_Y_DATA_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_Z_ROWPTR_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_Z_ROWPTR_USER_VALUE : INTEGER := 0;
    C_M_AXI_Z_ROWPTR_PROT_VALUE : INTEGER := 0;
    C_M_AXI_Z_ROWPTR_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_Z_COLIND_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_Z_COLIND_USER_VALUE : INTEGER := 0;
    C_M_AXI_Z_COLIND_PROT_VALUE : INTEGER := 0;
    C_M_AXI_Z_COLIND_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_Z_DATA_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_Z_DATA_USER_VALUE : INTEGER := 0;
    C_M_AXI_Z_DATA_PROT_VALUE : INTEGER := 0;
    C_M_AXI_Z_DATA_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_x_rowptr_AWVALID : OUT STD_LOGIC;
    m_axi_x_rowptr_AWREADY : IN STD_LOGIC;
    m_axi_x_rowptr_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ADDR_WIDTH-1 downto 0);
    m_axi_x_rowptr_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_x_rowptr_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_x_rowptr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_rowptr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_rowptr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_rowptr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_rowptr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_rowptr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_rowptr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_rowptr_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_AWUSER_WIDTH-1 downto 0);
    m_axi_x_rowptr_WVALID : OUT STD_LOGIC;
    m_axi_x_rowptr_WREADY : IN STD_LOGIC;
    m_axi_x_rowptr_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_DATA_WIDTH-1 downto 0);
    m_axi_x_rowptr_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_DATA_WIDTH/8-1 downto 0);
    m_axi_x_rowptr_WLAST : OUT STD_LOGIC;
    m_axi_x_rowptr_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_x_rowptr_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_WUSER_WIDTH-1 downto 0);
    m_axi_x_rowptr_ARVALID : OUT STD_LOGIC;
    m_axi_x_rowptr_ARREADY : IN STD_LOGIC;
    m_axi_x_rowptr_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ADDR_WIDTH-1 downto 0);
    m_axi_x_rowptr_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_x_rowptr_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_x_rowptr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_rowptr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_rowptr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_rowptr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_rowptr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_rowptr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_rowptr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_rowptr_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ARUSER_WIDTH-1 downto 0);
    m_axi_x_rowptr_RVALID : IN STD_LOGIC;
    m_axi_x_rowptr_RREADY : OUT STD_LOGIC;
    m_axi_x_rowptr_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_DATA_WIDTH-1 downto 0);
    m_axi_x_rowptr_RLAST : IN STD_LOGIC;
    m_axi_x_rowptr_RID : IN STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_x_rowptr_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_RUSER_WIDTH-1 downto 0);
    m_axi_x_rowptr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_rowptr_BVALID : IN STD_LOGIC;
    m_axi_x_rowptr_BREADY : OUT STD_LOGIC;
    m_axi_x_rowptr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_rowptr_BID : IN STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_x_rowptr_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_ROWPTR_BUSER_WIDTH-1 downto 0);
    m_axi_x_colind_AWVALID : OUT STD_LOGIC;
    m_axi_x_colind_AWREADY : IN STD_LOGIC;
    m_axi_x_colind_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ADDR_WIDTH-1 downto 0);
    m_axi_x_colind_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ID_WIDTH-1 downto 0);
    m_axi_x_colind_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_x_colind_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_colind_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_colind_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_colind_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_colind_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_colind_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_colind_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_colind_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_AWUSER_WIDTH-1 downto 0);
    m_axi_x_colind_WVALID : OUT STD_LOGIC;
    m_axi_x_colind_WREADY : IN STD_LOGIC;
    m_axi_x_colind_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_DATA_WIDTH-1 downto 0);
    m_axi_x_colind_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_DATA_WIDTH/8-1 downto 0);
    m_axi_x_colind_WLAST : OUT STD_LOGIC;
    m_axi_x_colind_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ID_WIDTH-1 downto 0);
    m_axi_x_colind_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_WUSER_WIDTH-1 downto 0);
    m_axi_x_colind_ARVALID : OUT STD_LOGIC;
    m_axi_x_colind_ARREADY : IN STD_LOGIC;
    m_axi_x_colind_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ADDR_WIDTH-1 downto 0);
    m_axi_x_colind_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ID_WIDTH-1 downto 0);
    m_axi_x_colind_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_x_colind_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_colind_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_colind_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_colind_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_colind_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_colind_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_colind_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_colind_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ARUSER_WIDTH-1 downto 0);
    m_axi_x_colind_RVALID : IN STD_LOGIC;
    m_axi_x_colind_RREADY : OUT STD_LOGIC;
    m_axi_x_colind_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_DATA_WIDTH-1 downto 0);
    m_axi_x_colind_RLAST : IN STD_LOGIC;
    m_axi_x_colind_RID : IN STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ID_WIDTH-1 downto 0);
    m_axi_x_colind_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_RUSER_WIDTH-1 downto 0);
    m_axi_x_colind_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_colind_BVALID : IN STD_LOGIC;
    m_axi_x_colind_BREADY : OUT STD_LOGIC;
    m_axi_x_colind_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_colind_BID : IN STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_ID_WIDTH-1 downto 0);
    m_axi_x_colind_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_COLIND_BUSER_WIDTH-1 downto 0);
    m_axi_x_data_AWVALID : OUT STD_LOGIC;
    m_axi_x_data_AWREADY : IN STD_LOGIC;
    m_axi_x_data_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_x_data_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ID_WIDTH-1 downto 0);
    m_axi_x_data_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_x_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_data_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_AWUSER_WIDTH-1 downto 0);
    m_axi_x_data_WVALID : OUT STD_LOGIC;
    m_axi_x_data_WREADY : IN STD_LOGIC;
    m_axi_x_data_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_DATA_WIDTH-1 downto 0);
    m_axi_x_data_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_DATA_WIDTH/8-1 downto 0);
    m_axi_x_data_WLAST : OUT STD_LOGIC;
    m_axi_x_data_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ID_WIDTH-1 downto 0);
    m_axi_x_data_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_WUSER_WIDTH-1 downto 0);
    m_axi_x_data_ARVALID : OUT STD_LOGIC;
    m_axi_x_data_ARREADY : IN STD_LOGIC;
    m_axi_x_data_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_x_data_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ID_WIDTH-1 downto 0);
    m_axi_x_data_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_x_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_x_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_x_data_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ARUSER_WIDTH-1 downto 0);
    m_axi_x_data_RVALID : IN STD_LOGIC;
    m_axi_x_data_RREADY : OUT STD_LOGIC;
    m_axi_x_data_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_X_DATA_DATA_WIDTH-1 downto 0);
    m_axi_x_data_RLAST : IN STD_LOGIC;
    m_axi_x_data_RID : IN STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ID_WIDTH-1 downto 0);
    m_axi_x_data_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_DATA_RUSER_WIDTH-1 downto 0);
    m_axi_x_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_data_BVALID : IN STD_LOGIC;
    m_axi_x_data_BREADY : OUT STD_LOGIC;
    m_axi_x_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_x_data_BID : IN STD_LOGIC_VECTOR (C_M_AXI_X_DATA_ID_WIDTH-1 downto 0);
    m_axi_x_data_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_DATA_BUSER_WIDTH-1 downto 0);
    m_axi_y_rowptr_AWVALID : OUT STD_LOGIC;
    m_axi_y_rowptr_AWREADY : IN STD_LOGIC;
    m_axi_y_rowptr_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ADDR_WIDTH-1 downto 0);
    m_axi_y_rowptr_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_y_rowptr_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_y_rowptr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_rowptr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_rowptr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_rowptr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_rowptr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_rowptr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_rowptr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_rowptr_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_AWUSER_WIDTH-1 downto 0);
    m_axi_y_rowptr_WVALID : OUT STD_LOGIC;
    m_axi_y_rowptr_WREADY : IN STD_LOGIC;
    m_axi_y_rowptr_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_DATA_WIDTH-1 downto 0);
    m_axi_y_rowptr_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_DATA_WIDTH/8-1 downto 0);
    m_axi_y_rowptr_WLAST : OUT STD_LOGIC;
    m_axi_y_rowptr_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_y_rowptr_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_WUSER_WIDTH-1 downto 0);
    m_axi_y_rowptr_ARVALID : OUT STD_LOGIC;
    m_axi_y_rowptr_ARREADY : IN STD_LOGIC;
    m_axi_y_rowptr_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ADDR_WIDTH-1 downto 0);
    m_axi_y_rowptr_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_y_rowptr_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_y_rowptr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_rowptr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_rowptr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_rowptr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_rowptr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_rowptr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_rowptr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_rowptr_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ARUSER_WIDTH-1 downto 0);
    m_axi_y_rowptr_RVALID : IN STD_LOGIC;
    m_axi_y_rowptr_RREADY : OUT STD_LOGIC;
    m_axi_y_rowptr_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_DATA_WIDTH-1 downto 0);
    m_axi_y_rowptr_RLAST : IN STD_LOGIC;
    m_axi_y_rowptr_RID : IN STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_y_rowptr_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_RUSER_WIDTH-1 downto 0);
    m_axi_y_rowptr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_rowptr_BVALID : IN STD_LOGIC;
    m_axi_y_rowptr_BREADY : OUT STD_LOGIC;
    m_axi_y_rowptr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_rowptr_BID : IN STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_y_rowptr_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Y_ROWPTR_BUSER_WIDTH-1 downto 0);
    m_axi_y_colind_AWVALID : OUT STD_LOGIC;
    m_axi_y_colind_AWREADY : IN STD_LOGIC;
    m_axi_y_colind_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ADDR_WIDTH-1 downto 0);
    m_axi_y_colind_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ID_WIDTH-1 downto 0);
    m_axi_y_colind_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_y_colind_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_colind_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_colind_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_colind_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_colind_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_colind_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_colind_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_colind_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_AWUSER_WIDTH-1 downto 0);
    m_axi_y_colind_WVALID : OUT STD_LOGIC;
    m_axi_y_colind_WREADY : IN STD_LOGIC;
    m_axi_y_colind_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_DATA_WIDTH-1 downto 0);
    m_axi_y_colind_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_DATA_WIDTH/8-1 downto 0);
    m_axi_y_colind_WLAST : OUT STD_LOGIC;
    m_axi_y_colind_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ID_WIDTH-1 downto 0);
    m_axi_y_colind_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_WUSER_WIDTH-1 downto 0);
    m_axi_y_colind_ARVALID : OUT STD_LOGIC;
    m_axi_y_colind_ARREADY : IN STD_LOGIC;
    m_axi_y_colind_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ADDR_WIDTH-1 downto 0);
    m_axi_y_colind_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ID_WIDTH-1 downto 0);
    m_axi_y_colind_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_y_colind_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_colind_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_colind_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_colind_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_colind_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_colind_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_colind_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_colind_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ARUSER_WIDTH-1 downto 0);
    m_axi_y_colind_RVALID : IN STD_LOGIC;
    m_axi_y_colind_RREADY : OUT STD_LOGIC;
    m_axi_y_colind_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_DATA_WIDTH-1 downto 0);
    m_axi_y_colind_RLAST : IN STD_LOGIC;
    m_axi_y_colind_RID : IN STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ID_WIDTH-1 downto 0);
    m_axi_y_colind_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_RUSER_WIDTH-1 downto 0);
    m_axi_y_colind_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_colind_BVALID : IN STD_LOGIC;
    m_axi_y_colind_BREADY : OUT STD_LOGIC;
    m_axi_y_colind_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_colind_BID : IN STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_ID_WIDTH-1 downto 0);
    m_axi_y_colind_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Y_COLIND_BUSER_WIDTH-1 downto 0);
    m_axi_y_data_AWVALID : OUT STD_LOGIC;
    m_axi_y_data_AWREADY : IN STD_LOGIC;
    m_axi_y_data_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_y_data_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ID_WIDTH-1 downto 0);
    m_axi_y_data_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_y_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_data_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_AWUSER_WIDTH-1 downto 0);
    m_axi_y_data_WVALID : OUT STD_LOGIC;
    m_axi_y_data_WREADY : IN STD_LOGIC;
    m_axi_y_data_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_DATA_WIDTH-1 downto 0);
    m_axi_y_data_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_DATA_WIDTH/8-1 downto 0);
    m_axi_y_data_WLAST : OUT STD_LOGIC;
    m_axi_y_data_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ID_WIDTH-1 downto 0);
    m_axi_y_data_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_WUSER_WIDTH-1 downto 0);
    m_axi_y_data_ARVALID : OUT STD_LOGIC;
    m_axi_y_data_ARREADY : IN STD_LOGIC;
    m_axi_y_data_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_y_data_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ID_WIDTH-1 downto 0);
    m_axi_y_data_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_y_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_y_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_y_data_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ARUSER_WIDTH-1 downto 0);
    m_axi_y_data_RVALID : IN STD_LOGIC;
    m_axi_y_data_RREADY : OUT STD_LOGIC;
    m_axi_y_data_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_DATA_WIDTH-1 downto 0);
    m_axi_y_data_RLAST : IN STD_LOGIC;
    m_axi_y_data_RID : IN STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ID_WIDTH-1 downto 0);
    m_axi_y_data_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_RUSER_WIDTH-1 downto 0);
    m_axi_y_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_data_BVALID : IN STD_LOGIC;
    m_axi_y_data_BREADY : OUT STD_LOGIC;
    m_axi_y_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_y_data_BID : IN STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_ID_WIDTH-1 downto 0);
    m_axi_y_data_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Y_DATA_BUSER_WIDTH-1 downto 0);
    m_axi_z_rowptr_AWVALID : OUT STD_LOGIC;
    m_axi_z_rowptr_AWREADY : IN STD_LOGIC;
    m_axi_z_rowptr_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ADDR_WIDTH-1 downto 0);
    m_axi_z_rowptr_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_z_rowptr_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_z_rowptr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_rowptr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_rowptr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_rowptr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_rowptr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_rowptr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_rowptr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_rowptr_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_AWUSER_WIDTH-1 downto 0);
    m_axi_z_rowptr_WVALID : OUT STD_LOGIC;
    m_axi_z_rowptr_WREADY : IN STD_LOGIC;
    m_axi_z_rowptr_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_DATA_WIDTH-1 downto 0);
    m_axi_z_rowptr_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_DATA_WIDTH/8-1 downto 0);
    m_axi_z_rowptr_WLAST : OUT STD_LOGIC;
    m_axi_z_rowptr_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_z_rowptr_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_WUSER_WIDTH-1 downto 0);
    m_axi_z_rowptr_ARVALID : OUT STD_LOGIC;
    m_axi_z_rowptr_ARREADY : IN STD_LOGIC;
    m_axi_z_rowptr_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ADDR_WIDTH-1 downto 0);
    m_axi_z_rowptr_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_z_rowptr_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_z_rowptr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_rowptr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_rowptr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_rowptr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_rowptr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_rowptr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_rowptr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_rowptr_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ARUSER_WIDTH-1 downto 0);
    m_axi_z_rowptr_RVALID : IN STD_LOGIC;
    m_axi_z_rowptr_RREADY : OUT STD_LOGIC;
    m_axi_z_rowptr_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_DATA_WIDTH-1 downto 0);
    m_axi_z_rowptr_RLAST : IN STD_LOGIC;
    m_axi_z_rowptr_RID : IN STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_z_rowptr_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_RUSER_WIDTH-1 downto 0);
    m_axi_z_rowptr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_rowptr_BVALID : IN STD_LOGIC;
    m_axi_z_rowptr_BREADY : OUT STD_LOGIC;
    m_axi_z_rowptr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_rowptr_BID : IN STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_ID_WIDTH-1 downto 0);
    m_axi_z_rowptr_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Z_ROWPTR_BUSER_WIDTH-1 downto 0);
    m_axi_z_colind_AWVALID : OUT STD_LOGIC;
    m_axi_z_colind_AWREADY : IN STD_LOGIC;
    m_axi_z_colind_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ADDR_WIDTH-1 downto 0);
    m_axi_z_colind_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ID_WIDTH-1 downto 0);
    m_axi_z_colind_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_z_colind_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_colind_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_colind_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_colind_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_colind_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_colind_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_colind_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_colind_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_AWUSER_WIDTH-1 downto 0);
    m_axi_z_colind_WVALID : OUT STD_LOGIC;
    m_axi_z_colind_WREADY : IN STD_LOGIC;
    m_axi_z_colind_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_DATA_WIDTH-1 downto 0);
    m_axi_z_colind_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_DATA_WIDTH/8-1 downto 0);
    m_axi_z_colind_WLAST : OUT STD_LOGIC;
    m_axi_z_colind_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ID_WIDTH-1 downto 0);
    m_axi_z_colind_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_WUSER_WIDTH-1 downto 0);
    m_axi_z_colind_ARVALID : OUT STD_LOGIC;
    m_axi_z_colind_ARREADY : IN STD_LOGIC;
    m_axi_z_colind_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ADDR_WIDTH-1 downto 0);
    m_axi_z_colind_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ID_WIDTH-1 downto 0);
    m_axi_z_colind_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_z_colind_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_colind_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_colind_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_colind_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_colind_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_colind_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_colind_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_colind_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ARUSER_WIDTH-1 downto 0);
    m_axi_z_colind_RVALID : IN STD_LOGIC;
    m_axi_z_colind_RREADY : OUT STD_LOGIC;
    m_axi_z_colind_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_DATA_WIDTH-1 downto 0);
    m_axi_z_colind_RLAST : IN STD_LOGIC;
    m_axi_z_colind_RID : IN STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ID_WIDTH-1 downto 0);
    m_axi_z_colind_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_RUSER_WIDTH-1 downto 0);
    m_axi_z_colind_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_colind_BVALID : IN STD_LOGIC;
    m_axi_z_colind_BREADY : OUT STD_LOGIC;
    m_axi_z_colind_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_colind_BID : IN STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_ID_WIDTH-1 downto 0);
    m_axi_z_colind_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Z_COLIND_BUSER_WIDTH-1 downto 0);
    m_axi_z_data_AWVALID : OUT STD_LOGIC;
    m_axi_z_data_AWREADY : IN STD_LOGIC;
    m_axi_z_data_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_z_data_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ID_WIDTH-1 downto 0);
    m_axi_z_data_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_z_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_data_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_AWUSER_WIDTH-1 downto 0);
    m_axi_z_data_WVALID : OUT STD_LOGIC;
    m_axi_z_data_WREADY : IN STD_LOGIC;
    m_axi_z_data_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_DATA_WIDTH-1 downto 0);
    m_axi_z_data_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_DATA_WIDTH/8-1 downto 0);
    m_axi_z_data_WLAST : OUT STD_LOGIC;
    m_axi_z_data_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ID_WIDTH-1 downto 0);
    m_axi_z_data_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_WUSER_WIDTH-1 downto 0);
    m_axi_z_data_ARVALID : OUT STD_LOGIC;
    m_axi_z_data_ARREADY : IN STD_LOGIC;
    m_axi_z_data_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_z_data_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ID_WIDTH-1 downto 0);
    m_axi_z_data_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_z_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_z_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_z_data_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ARUSER_WIDTH-1 downto 0);
    m_axi_z_data_RVALID : IN STD_LOGIC;
    m_axi_z_data_RREADY : OUT STD_LOGIC;
    m_axi_z_data_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_DATA_WIDTH-1 downto 0);
    m_axi_z_data_RLAST : IN STD_LOGIC;
    m_axi_z_data_RID : IN STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ID_WIDTH-1 downto 0);
    m_axi_z_data_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_RUSER_WIDTH-1 downto 0);
    m_axi_z_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_data_BVALID : IN STD_LOGIC;
    m_axi_z_data_BREADY : OUT STD_LOGIC;
    m_axi_z_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_z_data_BID : IN STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_ID_WIDTH-1 downto 0);
    m_axi_z_data_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_Z_DATA_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of row_product is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "row_product_row_product,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=18,HLS_SYN_DSP=0,HLS_SYN_FF=9865,HLS_SYN_LUT=22207,HLS_VERSION=2020_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_ID_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 40;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_M_AXI_AWUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ARUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_WUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_RUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_BUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal x_rowptr_AWREADY : STD_LOGIC;
    signal x_rowptr_WREADY : STD_LOGIC;
    signal x_rowptr_ARREADY : STD_LOGIC;
    signal x_rowptr_RVALID : STD_LOGIC;
    signal x_rowptr_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal x_rowptr_RLAST : STD_LOGIC;
    signal x_rowptr_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal x_rowptr_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal x_rowptr_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal x_rowptr_BVALID : STD_LOGIC;
    signal x_rowptr_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal x_rowptr_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal x_rowptr_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal x_colind_AWREADY : STD_LOGIC;
    signal x_colind_WREADY : STD_LOGIC;
    signal x_colind_ARREADY : STD_LOGIC;
    signal x_colind_RVALID : STD_LOGIC;
    signal x_colind_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal x_colind_RLAST : STD_LOGIC;
    signal x_colind_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal x_colind_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal x_colind_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal x_colind_BVALID : STD_LOGIC;
    signal x_colind_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal x_colind_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal x_colind_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal x_data_AWREADY : STD_LOGIC;
    signal x_data_WREADY : STD_LOGIC;
    signal x_data_ARREADY : STD_LOGIC;
    signal x_data_RVALID : STD_LOGIC;
    signal x_data_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal x_data_RLAST : STD_LOGIC;
    signal x_data_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal x_data_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal x_data_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal x_data_BVALID : STD_LOGIC;
    signal x_data_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal x_data_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal x_data_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal y_rowptr_AWREADY : STD_LOGIC;
    signal y_rowptr_WREADY : STD_LOGIC;
    signal y_rowptr_ARREADY : STD_LOGIC;
    signal y_rowptr_RVALID : STD_LOGIC;
    signal y_rowptr_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal y_rowptr_RLAST : STD_LOGIC;
    signal y_rowptr_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal y_rowptr_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal y_rowptr_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal y_rowptr_BVALID : STD_LOGIC;
    signal y_rowptr_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal y_rowptr_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal y_rowptr_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal y_colind_AWREADY : STD_LOGIC;
    signal y_colind_WREADY : STD_LOGIC;
    signal y_colind_ARREADY : STD_LOGIC;
    signal y_colind_RVALID : STD_LOGIC;
    signal y_colind_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal y_colind_RLAST : STD_LOGIC;
    signal y_colind_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal y_colind_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal y_colind_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal y_colind_BVALID : STD_LOGIC;
    signal y_colind_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal y_colind_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal y_colind_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal y_data_AWREADY : STD_LOGIC;
    signal y_data_WREADY : STD_LOGIC;
    signal y_data_ARREADY : STD_LOGIC;
    signal y_data_RVALID : STD_LOGIC;
    signal y_data_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal y_data_RLAST : STD_LOGIC;
    signal y_data_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal y_data_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal y_data_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal y_data_BVALID : STD_LOGIC;
    signal y_data_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal y_data_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal y_data_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal z_rowptr_AWREADY : STD_LOGIC;
    signal z_rowptr_WREADY : STD_LOGIC;
    signal z_rowptr_ARREADY : STD_LOGIC;
    signal z_rowptr_RVALID : STD_LOGIC;
    signal z_rowptr_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal z_rowptr_RLAST : STD_LOGIC;
    signal z_rowptr_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal z_rowptr_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal z_rowptr_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal z_rowptr_BVALID : STD_LOGIC;
    signal z_rowptr_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal z_rowptr_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal z_rowptr_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal z_colind_AWREADY : STD_LOGIC;
    signal z_colind_WREADY : STD_LOGIC;
    signal z_colind_ARREADY : STD_LOGIC;
    signal z_colind_RVALID : STD_LOGIC;
    signal z_colind_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal z_colind_RLAST : STD_LOGIC;
    signal z_colind_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal z_colind_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal z_colind_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal z_colind_BVALID : STD_LOGIC;
    signal z_colind_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal z_colind_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal z_colind_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal z_data_AWREADY : STD_LOGIC;
    signal z_data_WREADY : STD_LOGIC;
    signal z_data_ARREADY : STD_LOGIC;
    signal z_data_RVALID : STD_LOGIC;
    signal z_data_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal z_data_RLAST : STD_LOGIC;
    signal z_data_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal z_data_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal z_data_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal z_data_BVALID : STD_LOGIC;
    signal z_data_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal z_data_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal z_data_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_start : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_done : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_continue : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_idle : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_ready : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_BREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WLAST : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARVALID : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_RREADY : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_BREADY : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_start_full_n : STD_LOGIC;
    signal Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_start_write : STD_LOGIC;

    component row_product_Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_z_rowptr_AWVALID : OUT STD_LOGIC;
        m_axi_z_rowptr_AWREADY : IN STD_LOGIC;
        m_axi_z_rowptr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_z_rowptr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_rowptr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_rowptr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_rowptr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_rowptr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_rowptr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_rowptr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_rowptr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_rowptr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_WVALID : OUT STD_LOGIC;
        m_axi_z_rowptr_WREADY : IN STD_LOGIC;
        m_axi_z_rowptr_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_rowptr_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_rowptr_WLAST : OUT STD_LOGIC;
        m_axi_z_rowptr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_ARVALID : OUT STD_LOGIC;
        m_axi_z_rowptr_ARREADY : IN STD_LOGIC;
        m_axi_z_rowptr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_z_rowptr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_rowptr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_rowptr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_rowptr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_rowptr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_rowptr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_rowptr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_rowptr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_rowptr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_RVALID : IN STD_LOGIC;
        m_axi_z_rowptr_RREADY : OUT STD_LOGIC;
        m_axi_z_rowptr_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_rowptr_RLAST : IN STD_LOGIC;
        m_axi_z_rowptr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_rowptr_BVALID : IN STD_LOGIC;
        m_axi_z_rowptr_BREADY : OUT STD_LOGIC;
        m_axi_z_rowptr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_rowptr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_rowptr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_AWVALID : OUT STD_LOGIC;
        m_axi_x_rowptr_AWREADY : IN STD_LOGIC;
        m_axi_x_rowptr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_x_rowptr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_rowptr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_rowptr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_rowptr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_rowptr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_rowptr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_rowptr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_rowptr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_rowptr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_WVALID : OUT STD_LOGIC;
        m_axi_x_rowptr_WREADY : IN STD_LOGIC;
        m_axi_x_rowptr_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_rowptr_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_rowptr_WLAST : OUT STD_LOGIC;
        m_axi_x_rowptr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_ARVALID : OUT STD_LOGIC;
        m_axi_x_rowptr_ARREADY : IN STD_LOGIC;
        m_axi_x_rowptr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_x_rowptr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_rowptr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_rowptr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_rowptr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_rowptr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_rowptr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_rowptr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_rowptr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_rowptr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_RVALID : IN STD_LOGIC;
        m_axi_x_rowptr_RREADY : OUT STD_LOGIC;
        m_axi_x_rowptr_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_rowptr_RLAST : IN STD_LOGIC;
        m_axi_x_rowptr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_rowptr_BVALID : IN STD_LOGIC;
        m_axi_x_rowptr_BREADY : OUT STD_LOGIC;
        m_axi_x_rowptr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_rowptr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_rowptr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_AWVALID : OUT STD_LOGIC;
        m_axi_x_colind_AWREADY : IN STD_LOGIC;
        m_axi_x_colind_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_x_colind_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_colind_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_colind_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_colind_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_colind_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_colind_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_colind_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_colind_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_colind_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_WVALID : OUT STD_LOGIC;
        m_axi_x_colind_WREADY : IN STD_LOGIC;
        m_axi_x_colind_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_colind_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_colind_WLAST : OUT STD_LOGIC;
        m_axi_x_colind_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_ARVALID : OUT STD_LOGIC;
        m_axi_x_colind_ARREADY : IN STD_LOGIC;
        m_axi_x_colind_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_x_colind_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_colind_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_colind_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_colind_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_colind_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_colind_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_colind_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_colind_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_colind_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_RVALID : IN STD_LOGIC;
        m_axi_x_colind_RREADY : OUT STD_LOGIC;
        m_axi_x_colind_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_colind_RLAST : IN STD_LOGIC;
        m_axi_x_colind_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_colind_BVALID : IN STD_LOGIC;
        m_axi_x_colind_BREADY : OUT STD_LOGIC;
        m_axi_x_colind_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_colind_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_colind_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_AWVALID : OUT STD_LOGIC;
        m_axi_x_data_AWREADY : IN STD_LOGIC;
        m_axi_x_data_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_x_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_WVALID : OUT STD_LOGIC;
        m_axi_x_data_WREADY : IN STD_LOGIC;
        m_axi_x_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_data_WLAST : OUT STD_LOGIC;
        m_axi_x_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_ARVALID : OUT STD_LOGIC;
        m_axi_x_data_ARREADY : IN STD_LOGIC;
        m_axi_x_data_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_x_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_x_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_x_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_RVALID : IN STD_LOGIC;
        m_axi_x_data_RREADY : OUT STD_LOGIC;
        m_axi_x_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_x_data_RLAST : IN STD_LOGIC;
        m_axi_x_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_data_BVALID : IN STD_LOGIC;
        m_axi_x_data_BREADY : OUT STD_LOGIC;
        m_axi_x_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_x_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_x_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_AWVALID : OUT STD_LOGIC;
        m_axi_y_rowptr_AWREADY : IN STD_LOGIC;
        m_axi_y_rowptr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_y_rowptr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_rowptr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_rowptr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_rowptr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_rowptr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_rowptr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_rowptr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_rowptr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_rowptr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_WVALID : OUT STD_LOGIC;
        m_axi_y_rowptr_WREADY : IN STD_LOGIC;
        m_axi_y_rowptr_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_rowptr_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_rowptr_WLAST : OUT STD_LOGIC;
        m_axi_y_rowptr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_ARVALID : OUT STD_LOGIC;
        m_axi_y_rowptr_ARREADY : IN STD_LOGIC;
        m_axi_y_rowptr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_y_rowptr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_rowptr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_rowptr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_rowptr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_rowptr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_rowptr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_rowptr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_rowptr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_rowptr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_RVALID : IN STD_LOGIC;
        m_axi_y_rowptr_RREADY : OUT STD_LOGIC;
        m_axi_y_rowptr_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_rowptr_RLAST : IN STD_LOGIC;
        m_axi_y_rowptr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_rowptr_BVALID : IN STD_LOGIC;
        m_axi_y_rowptr_BREADY : OUT STD_LOGIC;
        m_axi_y_rowptr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_rowptr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_rowptr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_AWVALID : OUT STD_LOGIC;
        m_axi_y_data_AWREADY : IN STD_LOGIC;
        m_axi_y_data_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_y_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_WVALID : OUT STD_LOGIC;
        m_axi_y_data_WREADY : IN STD_LOGIC;
        m_axi_y_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_data_WLAST : OUT STD_LOGIC;
        m_axi_y_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_ARVALID : OUT STD_LOGIC;
        m_axi_y_data_ARREADY : IN STD_LOGIC;
        m_axi_y_data_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_y_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_RVALID : IN STD_LOGIC;
        m_axi_y_data_RREADY : OUT STD_LOGIC;
        m_axi_y_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_data_RLAST : IN STD_LOGIC;
        m_axi_y_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_data_BVALID : IN STD_LOGIC;
        m_axi_y_data_BREADY : OUT STD_LOGIC;
        m_axi_y_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_AWVALID : OUT STD_LOGIC;
        m_axi_y_colind_AWREADY : IN STD_LOGIC;
        m_axi_y_colind_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_y_colind_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_colind_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_colind_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_colind_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_colind_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_colind_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_colind_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_colind_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_colind_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_WVALID : OUT STD_LOGIC;
        m_axi_y_colind_WREADY : IN STD_LOGIC;
        m_axi_y_colind_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_colind_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_colind_WLAST : OUT STD_LOGIC;
        m_axi_y_colind_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_ARVALID : OUT STD_LOGIC;
        m_axi_y_colind_ARREADY : IN STD_LOGIC;
        m_axi_y_colind_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_y_colind_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_colind_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_colind_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_colind_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_colind_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_colind_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_y_colind_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_colind_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_y_colind_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_RVALID : IN STD_LOGIC;
        m_axi_y_colind_RREADY : OUT STD_LOGIC;
        m_axi_y_colind_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_y_colind_RLAST : IN STD_LOGIC;
        m_axi_y_colind_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_colind_BVALID : IN STD_LOGIC;
        m_axi_y_colind_BREADY : OUT STD_LOGIC;
        m_axi_y_colind_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_y_colind_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_y_colind_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_AWVALID : OUT STD_LOGIC;
        m_axi_z_colind_AWREADY : IN STD_LOGIC;
        m_axi_z_colind_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_z_colind_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_colind_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_colind_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_colind_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_colind_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_colind_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_colind_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_colind_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_colind_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_WVALID : OUT STD_LOGIC;
        m_axi_z_colind_WREADY : IN STD_LOGIC;
        m_axi_z_colind_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_colind_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_colind_WLAST : OUT STD_LOGIC;
        m_axi_z_colind_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_ARVALID : OUT STD_LOGIC;
        m_axi_z_colind_ARREADY : IN STD_LOGIC;
        m_axi_z_colind_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_z_colind_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_colind_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_colind_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_colind_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_colind_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_colind_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_colind_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_colind_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_colind_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_RVALID : IN STD_LOGIC;
        m_axi_z_colind_RREADY : OUT STD_LOGIC;
        m_axi_z_colind_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_colind_RLAST : IN STD_LOGIC;
        m_axi_z_colind_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_colind_BVALID : IN STD_LOGIC;
        m_axi_z_colind_BREADY : OUT STD_LOGIC;
        m_axi_z_colind_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_colind_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_colind_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_AWVALID : OUT STD_LOGIC;
        m_axi_z_data_AWREADY : IN STD_LOGIC;
        m_axi_z_data_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_z_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_WVALID : OUT STD_LOGIC;
        m_axi_z_data_WREADY : IN STD_LOGIC;
        m_axi_z_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_data_WLAST : OUT STD_LOGIC;
        m_axi_z_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_ARVALID : OUT STD_LOGIC;
        m_axi_z_data_ARREADY : IN STD_LOGIC;
        m_axi_z_data_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_z_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_z_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_z_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_RVALID : IN STD_LOGIC;
        m_axi_z_data_RREADY : OUT STD_LOGIC;
        m_axi_z_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_z_data_RLAST : IN STD_LOGIC;
        m_axi_z_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_data_BVALID : IN STD_LOGIC;
        m_axi_z_data_BREADY : OUT STD_LOGIC;
        m_axi_z_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_z_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_z_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component row_product_x_rowptr_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_x_colind_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_x_data_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_y_rowptr_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_y_colind_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_y_data_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_z_rowptr_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_z_colind_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component row_product_z_data_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    control_s_axi_U : component row_product_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    x_rowptr_m_axi_U : component row_product_x_rowptr_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_X_ROWPTR_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_X_ROWPTR_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_X_ROWPTR_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_X_ROWPTR_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_X_ROWPTR_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_X_ROWPTR_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_X_ROWPTR_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_X_ROWPTR_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_X_ROWPTR_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_X_ROWPTR_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_X_ROWPTR_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_X_ROWPTR_CACHE_VALUE)
    port map (
        AWVALID => m_axi_x_rowptr_AWVALID,
        AWREADY => m_axi_x_rowptr_AWREADY,
        AWADDR => m_axi_x_rowptr_AWADDR,
        AWID => m_axi_x_rowptr_AWID,
        AWLEN => m_axi_x_rowptr_AWLEN,
        AWSIZE => m_axi_x_rowptr_AWSIZE,
        AWBURST => m_axi_x_rowptr_AWBURST,
        AWLOCK => m_axi_x_rowptr_AWLOCK,
        AWCACHE => m_axi_x_rowptr_AWCACHE,
        AWPROT => m_axi_x_rowptr_AWPROT,
        AWQOS => m_axi_x_rowptr_AWQOS,
        AWREGION => m_axi_x_rowptr_AWREGION,
        AWUSER => m_axi_x_rowptr_AWUSER,
        WVALID => m_axi_x_rowptr_WVALID,
        WREADY => m_axi_x_rowptr_WREADY,
        WDATA => m_axi_x_rowptr_WDATA,
        WSTRB => m_axi_x_rowptr_WSTRB,
        WLAST => m_axi_x_rowptr_WLAST,
        WID => m_axi_x_rowptr_WID,
        WUSER => m_axi_x_rowptr_WUSER,
        ARVALID => m_axi_x_rowptr_ARVALID,
        ARREADY => m_axi_x_rowptr_ARREADY,
        ARADDR => m_axi_x_rowptr_ARADDR,
        ARID => m_axi_x_rowptr_ARID,
        ARLEN => m_axi_x_rowptr_ARLEN,
        ARSIZE => m_axi_x_rowptr_ARSIZE,
        ARBURST => m_axi_x_rowptr_ARBURST,
        ARLOCK => m_axi_x_rowptr_ARLOCK,
        ARCACHE => m_axi_x_rowptr_ARCACHE,
        ARPROT => m_axi_x_rowptr_ARPROT,
        ARQOS => m_axi_x_rowptr_ARQOS,
        ARREGION => m_axi_x_rowptr_ARREGION,
        ARUSER => m_axi_x_rowptr_ARUSER,
        RVALID => m_axi_x_rowptr_RVALID,
        RREADY => m_axi_x_rowptr_RREADY,
        RDATA => m_axi_x_rowptr_RDATA,
        RLAST => m_axi_x_rowptr_RLAST,
        RID => m_axi_x_rowptr_RID,
        RUSER => m_axi_x_rowptr_RUSER,
        RRESP => m_axi_x_rowptr_RRESP,
        BVALID => m_axi_x_rowptr_BVALID,
        BREADY => m_axi_x_rowptr_BREADY,
        BRESP => m_axi_x_rowptr_BRESP,
        BID => m_axi_x_rowptr_BID,
        BUSER => m_axi_x_rowptr_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARVALID,
        I_ARREADY => x_rowptr_ARREADY,
        I_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARADDR,
        I_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARID,
        I_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARLEN,
        I_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARSIZE,
        I_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARLOCK,
        I_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARCACHE,
        I_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARQOS,
        I_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARPROT,
        I_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARUSER,
        I_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARBURST,
        I_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARREGION,
        I_RVALID => x_rowptr_RVALID,
        I_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_RREADY,
        I_RDATA => x_rowptr_RDATA,
        I_RID => x_rowptr_RID,
        I_RUSER => x_rowptr_RUSER,
        I_RRESP => x_rowptr_RRESP,
        I_RLAST => x_rowptr_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => x_rowptr_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => x_rowptr_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => x_rowptr_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => x_rowptr_BRESP,
        I_BID => x_rowptr_BID,
        I_BUSER => x_rowptr_BUSER);

    x_colind_m_axi_U : component row_product_x_colind_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_X_COLIND_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_X_COLIND_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_X_COLIND_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_X_COLIND_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_X_COLIND_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_X_COLIND_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_X_COLIND_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_X_COLIND_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_X_COLIND_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_X_COLIND_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_X_COLIND_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_X_COLIND_CACHE_VALUE)
    port map (
        AWVALID => m_axi_x_colind_AWVALID,
        AWREADY => m_axi_x_colind_AWREADY,
        AWADDR => m_axi_x_colind_AWADDR,
        AWID => m_axi_x_colind_AWID,
        AWLEN => m_axi_x_colind_AWLEN,
        AWSIZE => m_axi_x_colind_AWSIZE,
        AWBURST => m_axi_x_colind_AWBURST,
        AWLOCK => m_axi_x_colind_AWLOCK,
        AWCACHE => m_axi_x_colind_AWCACHE,
        AWPROT => m_axi_x_colind_AWPROT,
        AWQOS => m_axi_x_colind_AWQOS,
        AWREGION => m_axi_x_colind_AWREGION,
        AWUSER => m_axi_x_colind_AWUSER,
        WVALID => m_axi_x_colind_WVALID,
        WREADY => m_axi_x_colind_WREADY,
        WDATA => m_axi_x_colind_WDATA,
        WSTRB => m_axi_x_colind_WSTRB,
        WLAST => m_axi_x_colind_WLAST,
        WID => m_axi_x_colind_WID,
        WUSER => m_axi_x_colind_WUSER,
        ARVALID => m_axi_x_colind_ARVALID,
        ARREADY => m_axi_x_colind_ARREADY,
        ARADDR => m_axi_x_colind_ARADDR,
        ARID => m_axi_x_colind_ARID,
        ARLEN => m_axi_x_colind_ARLEN,
        ARSIZE => m_axi_x_colind_ARSIZE,
        ARBURST => m_axi_x_colind_ARBURST,
        ARLOCK => m_axi_x_colind_ARLOCK,
        ARCACHE => m_axi_x_colind_ARCACHE,
        ARPROT => m_axi_x_colind_ARPROT,
        ARQOS => m_axi_x_colind_ARQOS,
        ARREGION => m_axi_x_colind_ARREGION,
        ARUSER => m_axi_x_colind_ARUSER,
        RVALID => m_axi_x_colind_RVALID,
        RREADY => m_axi_x_colind_RREADY,
        RDATA => m_axi_x_colind_RDATA,
        RLAST => m_axi_x_colind_RLAST,
        RID => m_axi_x_colind_RID,
        RUSER => m_axi_x_colind_RUSER,
        RRESP => m_axi_x_colind_RRESP,
        BVALID => m_axi_x_colind_BVALID,
        BREADY => m_axi_x_colind_BREADY,
        BRESP => m_axi_x_colind_BRESP,
        BID => m_axi_x_colind_BID,
        BUSER => m_axi_x_colind_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARVALID,
        I_ARREADY => x_colind_ARREADY,
        I_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARADDR,
        I_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARID,
        I_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARLEN,
        I_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARSIZE,
        I_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARLOCK,
        I_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARCACHE,
        I_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARQOS,
        I_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARPROT,
        I_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARUSER,
        I_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARBURST,
        I_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARREGION,
        I_RVALID => x_colind_RVALID,
        I_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_RREADY,
        I_RDATA => x_colind_RDATA,
        I_RID => x_colind_RID,
        I_RUSER => x_colind_RUSER,
        I_RRESP => x_colind_RRESP,
        I_RLAST => x_colind_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => x_colind_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => x_colind_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => x_colind_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => x_colind_BRESP,
        I_BID => x_colind_BID,
        I_BUSER => x_colind_BUSER);

    x_data_m_axi_U : component row_product_x_data_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_X_DATA_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_X_DATA_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_X_DATA_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_X_DATA_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_X_DATA_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_X_DATA_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_X_DATA_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_X_DATA_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_X_DATA_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_X_DATA_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_X_DATA_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_X_DATA_CACHE_VALUE)
    port map (
        AWVALID => m_axi_x_data_AWVALID,
        AWREADY => m_axi_x_data_AWREADY,
        AWADDR => m_axi_x_data_AWADDR,
        AWID => m_axi_x_data_AWID,
        AWLEN => m_axi_x_data_AWLEN,
        AWSIZE => m_axi_x_data_AWSIZE,
        AWBURST => m_axi_x_data_AWBURST,
        AWLOCK => m_axi_x_data_AWLOCK,
        AWCACHE => m_axi_x_data_AWCACHE,
        AWPROT => m_axi_x_data_AWPROT,
        AWQOS => m_axi_x_data_AWQOS,
        AWREGION => m_axi_x_data_AWREGION,
        AWUSER => m_axi_x_data_AWUSER,
        WVALID => m_axi_x_data_WVALID,
        WREADY => m_axi_x_data_WREADY,
        WDATA => m_axi_x_data_WDATA,
        WSTRB => m_axi_x_data_WSTRB,
        WLAST => m_axi_x_data_WLAST,
        WID => m_axi_x_data_WID,
        WUSER => m_axi_x_data_WUSER,
        ARVALID => m_axi_x_data_ARVALID,
        ARREADY => m_axi_x_data_ARREADY,
        ARADDR => m_axi_x_data_ARADDR,
        ARID => m_axi_x_data_ARID,
        ARLEN => m_axi_x_data_ARLEN,
        ARSIZE => m_axi_x_data_ARSIZE,
        ARBURST => m_axi_x_data_ARBURST,
        ARLOCK => m_axi_x_data_ARLOCK,
        ARCACHE => m_axi_x_data_ARCACHE,
        ARPROT => m_axi_x_data_ARPROT,
        ARQOS => m_axi_x_data_ARQOS,
        ARREGION => m_axi_x_data_ARREGION,
        ARUSER => m_axi_x_data_ARUSER,
        RVALID => m_axi_x_data_RVALID,
        RREADY => m_axi_x_data_RREADY,
        RDATA => m_axi_x_data_RDATA,
        RLAST => m_axi_x_data_RLAST,
        RID => m_axi_x_data_RID,
        RUSER => m_axi_x_data_RUSER,
        RRESP => m_axi_x_data_RRESP,
        BVALID => m_axi_x_data_BVALID,
        BREADY => m_axi_x_data_BREADY,
        BRESP => m_axi_x_data_BRESP,
        BID => m_axi_x_data_BID,
        BUSER => m_axi_x_data_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARVALID,
        I_ARREADY => x_data_ARREADY,
        I_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARADDR,
        I_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARID,
        I_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARLEN,
        I_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARSIZE,
        I_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARLOCK,
        I_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARCACHE,
        I_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARQOS,
        I_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARPROT,
        I_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARUSER,
        I_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARBURST,
        I_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARREGION,
        I_RVALID => x_data_RVALID,
        I_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_RREADY,
        I_RDATA => x_data_RDATA,
        I_RID => x_data_RID,
        I_RUSER => x_data_RUSER,
        I_RRESP => x_data_RRESP,
        I_RLAST => x_data_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => x_data_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => x_data_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => x_data_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => x_data_BRESP,
        I_BID => x_data_BID,
        I_BUSER => x_data_BUSER);

    y_rowptr_m_axi_U : component row_product_y_rowptr_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_Y_ROWPTR_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_Y_ROWPTR_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_Y_ROWPTR_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_Y_ROWPTR_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_Y_ROWPTR_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_Y_ROWPTR_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_Y_ROWPTR_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_Y_ROWPTR_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_Y_ROWPTR_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_Y_ROWPTR_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_Y_ROWPTR_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_Y_ROWPTR_CACHE_VALUE)
    port map (
        AWVALID => m_axi_y_rowptr_AWVALID,
        AWREADY => m_axi_y_rowptr_AWREADY,
        AWADDR => m_axi_y_rowptr_AWADDR,
        AWID => m_axi_y_rowptr_AWID,
        AWLEN => m_axi_y_rowptr_AWLEN,
        AWSIZE => m_axi_y_rowptr_AWSIZE,
        AWBURST => m_axi_y_rowptr_AWBURST,
        AWLOCK => m_axi_y_rowptr_AWLOCK,
        AWCACHE => m_axi_y_rowptr_AWCACHE,
        AWPROT => m_axi_y_rowptr_AWPROT,
        AWQOS => m_axi_y_rowptr_AWQOS,
        AWREGION => m_axi_y_rowptr_AWREGION,
        AWUSER => m_axi_y_rowptr_AWUSER,
        WVALID => m_axi_y_rowptr_WVALID,
        WREADY => m_axi_y_rowptr_WREADY,
        WDATA => m_axi_y_rowptr_WDATA,
        WSTRB => m_axi_y_rowptr_WSTRB,
        WLAST => m_axi_y_rowptr_WLAST,
        WID => m_axi_y_rowptr_WID,
        WUSER => m_axi_y_rowptr_WUSER,
        ARVALID => m_axi_y_rowptr_ARVALID,
        ARREADY => m_axi_y_rowptr_ARREADY,
        ARADDR => m_axi_y_rowptr_ARADDR,
        ARID => m_axi_y_rowptr_ARID,
        ARLEN => m_axi_y_rowptr_ARLEN,
        ARSIZE => m_axi_y_rowptr_ARSIZE,
        ARBURST => m_axi_y_rowptr_ARBURST,
        ARLOCK => m_axi_y_rowptr_ARLOCK,
        ARCACHE => m_axi_y_rowptr_ARCACHE,
        ARPROT => m_axi_y_rowptr_ARPROT,
        ARQOS => m_axi_y_rowptr_ARQOS,
        ARREGION => m_axi_y_rowptr_ARREGION,
        ARUSER => m_axi_y_rowptr_ARUSER,
        RVALID => m_axi_y_rowptr_RVALID,
        RREADY => m_axi_y_rowptr_RREADY,
        RDATA => m_axi_y_rowptr_RDATA,
        RLAST => m_axi_y_rowptr_RLAST,
        RID => m_axi_y_rowptr_RID,
        RUSER => m_axi_y_rowptr_RUSER,
        RRESP => m_axi_y_rowptr_RRESP,
        BVALID => m_axi_y_rowptr_BVALID,
        BREADY => m_axi_y_rowptr_BREADY,
        BRESP => m_axi_y_rowptr_BRESP,
        BID => m_axi_y_rowptr_BID,
        BUSER => m_axi_y_rowptr_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARVALID,
        I_ARREADY => y_rowptr_ARREADY,
        I_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARADDR,
        I_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARID,
        I_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARLEN,
        I_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARSIZE,
        I_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARLOCK,
        I_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARCACHE,
        I_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARQOS,
        I_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARPROT,
        I_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARUSER,
        I_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARBURST,
        I_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARREGION,
        I_RVALID => y_rowptr_RVALID,
        I_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_RREADY,
        I_RDATA => y_rowptr_RDATA,
        I_RID => y_rowptr_RID,
        I_RUSER => y_rowptr_RUSER,
        I_RRESP => y_rowptr_RRESP,
        I_RLAST => y_rowptr_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => y_rowptr_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => y_rowptr_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => y_rowptr_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => y_rowptr_BRESP,
        I_BID => y_rowptr_BID,
        I_BUSER => y_rowptr_BUSER);

    y_colind_m_axi_U : component row_product_y_colind_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_Y_COLIND_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_Y_COLIND_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_Y_COLIND_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_Y_COLIND_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_Y_COLIND_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_Y_COLIND_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_Y_COLIND_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_Y_COLIND_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_Y_COLIND_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_Y_COLIND_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_Y_COLIND_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_Y_COLIND_CACHE_VALUE)
    port map (
        AWVALID => m_axi_y_colind_AWVALID,
        AWREADY => m_axi_y_colind_AWREADY,
        AWADDR => m_axi_y_colind_AWADDR,
        AWID => m_axi_y_colind_AWID,
        AWLEN => m_axi_y_colind_AWLEN,
        AWSIZE => m_axi_y_colind_AWSIZE,
        AWBURST => m_axi_y_colind_AWBURST,
        AWLOCK => m_axi_y_colind_AWLOCK,
        AWCACHE => m_axi_y_colind_AWCACHE,
        AWPROT => m_axi_y_colind_AWPROT,
        AWQOS => m_axi_y_colind_AWQOS,
        AWREGION => m_axi_y_colind_AWREGION,
        AWUSER => m_axi_y_colind_AWUSER,
        WVALID => m_axi_y_colind_WVALID,
        WREADY => m_axi_y_colind_WREADY,
        WDATA => m_axi_y_colind_WDATA,
        WSTRB => m_axi_y_colind_WSTRB,
        WLAST => m_axi_y_colind_WLAST,
        WID => m_axi_y_colind_WID,
        WUSER => m_axi_y_colind_WUSER,
        ARVALID => m_axi_y_colind_ARVALID,
        ARREADY => m_axi_y_colind_ARREADY,
        ARADDR => m_axi_y_colind_ARADDR,
        ARID => m_axi_y_colind_ARID,
        ARLEN => m_axi_y_colind_ARLEN,
        ARSIZE => m_axi_y_colind_ARSIZE,
        ARBURST => m_axi_y_colind_ARBURST,
        ARLOCK => m_axi_y_colind_ARLOCK,
        ARCACHE => m_axi_y_colind_ARCACHE,
        ARPROT => m_axi_y_colind_ARPROT,
        ARQOS => m_axi_y_colind_ARQOS,
        ARREGION => m_axi_y_colind_ARREGION,
        ARUSER => m_axi_y_colind_ARUSER,
        RVALID => m_axi_y_colind_RVALID,
        RREADY => m_axi_y_colind_RREADY,
        RDATA => m_axi_y_colind_RDATA,
        RLAST => m_axi_y_colind_RLAST,
        RID => m_axi_y_colind_RID,
        RUSER => m_axi_y_colind_RUSER,
        RRESP => m_axi_y_colind_RRESP,
        BVALID => m_axi_y_colind_BVALID,
        BREADY => m_axi_y_colind_BREADY,
        BRESP => m_axi_y_colind_BRESP,
        BID => m_axi_y_colind_BID,
        BUSER => m_axi_y_colind_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARVALID,
        I_ARREADY => y_colind_ARREADY,
        I_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARADDR,
        I_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARID,
        I_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARLEN,
        I_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARSIZE,
        I_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARLOCK,
        I_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARCACHE,
        I_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARQOS,
        I_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARPROT,
        I_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARUSER,
        I_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARBURST,
        I_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARREGION,
        I_RVALID => y_colind_RVALID,
        I_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_RREADY,
        I_RDATA => y_colind_RDATA,
        I_RID => y_colind_RID,
        I_RUSER => y_colind_RUSER,
        I_RRESP => y_colind_RRESP,
        I_RLAST => y_colind_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => y_colind_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => y_colind_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => y_colind_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => y_colind_BRESP,
        I_BID => y_colind_BID,
        I_BUSER => y_colind_BUSER);

    y_data_m_axi_U : component row_product_y_data_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_Y_DATA_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_Y_DATA_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_Y_DATA_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_Y_DATA_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_Y_DATA_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_Y_DATA_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_Y_DATA_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_Y_DATA_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_Y_DATA_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_Y_DATA_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_Y_DATA_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_Y_DATA_CACHE_VALUE)
    port map (
        AWVALID => m_axi_y_data_AWVALID,
        AWREADY => m_axi_y_data_AWREADY,
        AWADDR => m_axi_y_data_AWADDR,
        AWID => m_axi_y_data_AWID,
        AWLEN => m_axi_y_data_AWLEN,
        AWSIZE => m_axi_y_data_AWSIZE,
        AWBURST => m_axi_y_data_AWBURST,
        AWLOCK => m_axi_y_data_AWLOCK,
        AWCACHE => m_axi_y_data_AWCACHE,
        AWPROT => m_axi_y_data_AWPROT,
        AWQOS => m_axi_y_data_AWQOS,
        AWREGION => m_axi_y_data_AWREGION,
        AWUSER => m_axi_y_data_AWUSER,
        WVALID => m_axi_y_data_WVALID,
        WREADY => m_axi_y_data_WREADY,
        WDATA => m_axi_y_data_WDATA,
        WSTRB => m_axi_y_data_WSTRB,
        WLAST => m_axi_y_data_WLAST,
        WID => m_axi_y_data_WID,
        WUSER => m_axi_y_data_WUSER,
        ARVALID => m_axi_y_data_ARVALID,
        ARREADY => m_axi_y_data_ARREADY,
        ARADDR => m_axi_y_data_ARADDR,
        ARID => m_axi_y_data_ARID,
        ARLEN => m_axi_y_data_ARLEN,
        ARSIZE => m_axi_y_data_ARSIZE,
        ARBURST => m_axi_y_data_ARBURST,
        ARLOCK => m_axi_y_data_ARLOCK,
        ARCACHE => m_axi_y_data_ARCACHE,
        ARPROT => m_axi_y_data_ARPROT,
        ARQOS => m_axi_y_data_ARQOS,
        ARREGION => m_axi_y_data_ARREGION,
        ARUSER => m_axi_y_data_ARUSER,
        RVALID => m_axi_y_data_RVALID,
        RREADY => m_axi_y_data_RREADY,
        RDATA => m_axi_y_data_RDATA,
        RLAST => m_axi_y_data_RLAST,
        RID => m_axi_y_data_RID,
        RUSER => m_axi_y_data_RUSER,
        RRESP => m_axi_y_data_RRESP,
        BVALID => m_axi_y_data_BVALID,
        BREADY => m_axi_y_data_BREADY,
        BRESP => m_axi_y_data_BRESP,
        BID => m_axi_y_data_BID,
        BUSER => m_axi_y_data_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARVALID,
        I_ARREADY => y_data_ARREADY,
        I_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARADDR,
        I_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARID,
        I_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARLEN,
        I_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARSIZE,
        I_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARLOCK,
        I_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARCACHE,
        I_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARQOS,
        I_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARPROT,
        I_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARUSER,
        I_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARBURST,
        I_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARREGION,
        I_RVALID => y_data_RVALID,
        I_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_RREADY,
        I_RDATA => y_data_RDATA,
        I_RID => y_data_RID,
        I_RUSER => y_data_RUSER,
        I_RRESP => y_data_RRESP,
        I_RLAST => y_data_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => y_data_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => y_data_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => y_data_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => y_data_BRESP,
        I_BID => y_data_BID,
        I_BUSER => y_data_BUSER);

    z_rowptr_m_axi_U : component row_product_z_rowptr_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_Z_ROWPTR_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_Z_ROWPTR_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_Z_ROWPTR_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_Z_ROWPTR_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_Z_ROWPTR_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_Z_ROWPTR_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_Z_ROWPTR_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_Z_ROWPTR_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_Z_ROWPTR_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_Z_ROWPTR_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_Z_ROWPTR_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_Z_ROWPTR_CACHE_VALUE)
    port map (
        AWVALID => m_axi_z_rowptr_AWVALID,
        AWREADY => m_axi_z_rowptr_AWREADY,
        AWADDR => m_axi_z_rowptr_AWADDR,
        AWID => m_axi_z_rowptr_AWID,
        AWLEN => m_axi_z_rowptr_AWLEN,
        AWSIZE => m_axi_z_rowptr_AWSIZE,
        AWBURST => m_axi_z_rowptr_AWBURST,
        AWLOCK => m_axi_z_rowptr_AWLOCK,
        AWCACHE => m_axi_z_rowptr_AWCACHE,
        AWPROT => m_axi_z_rowptr_AWPROT,
        AWQOS => m_axi_z_rowptr_AWQOS,
        AWREGION => m_axi_z_rowptr_AWREGION,
        AWUSER => m_axi_z_rowptr_AWUSER,
        WVALID => m_axi_z_rowptr_WVALID,
        WREADY => m_axi_z_rowptr_WREADY,
        WDATA => m_axi_z_rowptr_WDATA,
        WSTRB => m_axi_z_rowptr_WSTRB,
        WLAST => m_axi_z_rowptr_WLAST,
        WID => m_axi_z_rowptr_WID,
        WUSER => m_axi_z_rowptr_WUSER,
        ARVALID => m_axi_z_rowptr_ARVALID,
        ARREADY => m_axi_z_rowptr_ARREADY,
        ARADDR => m_axi_z_rowptr_ARADDR,
        ARID => m_axi_z_rowptr_ARID,
        ARLEN => m_axi_z_rowptr_ARLEN,
        ARSIZE => m_axi_z_rowptr_ARSIZE,
        ARBURST => m_axi_z_rowptr_ARBURST,
        ARLOCK => m_axi_z_rowptr_ARLOCK,
        ARCACHE => m_axi_z_rowptr_ARCACHE,
        ARPROT => m_axi_z_rowptr_ARPROT,
        ARQOS => m_axi_z_rowptr_ARQOS,
        ARREGION => m_axi_z_rowptr_ARREGION,
        ARUSER => m_axi_z_rowptr_ARUSER,
        RVALID => m_axi_z_rowptr_RVALID,
        RREADY => m_axi_z_rowptr_RREADY,
        RDATA => m_axi_z_rowptr_RDATA,
        RLAST => m_axi_z_rowptr_RLAST,
        RID => m_axi_z_rowptr_RID,
        RUSER => m_axi_z_rowptr_RUSER,
        RRESP => m_axi_z_rowptr_RRESP,
        BVALID => m_axi_z_rowptr_BVALID,
        BREADY => m_axi_z_rowptr_BREADY,
        BRESP => m_axi_z_rowptr_BRESP,
        BID => m_axi_z_rowptr_BID,
        BUSER => m_axi_z_rowptr_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARVALID,
        I_ARREADY => z_rowptr_ARREADY,
        I_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARADDR,
        I_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARID,
        I_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARLEN,
        I_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARSIZE,
        I_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARLOCK,
        I_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARCACHE,
        I_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARQOS,
        I_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARPROT,
        I_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARUSER,
        I_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARBURST,
        I_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARREGION,
        I_RVALID => z_rowptr_RVALID,
        I_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_RREADY,
        I_RDATA => z_rowptr_RDATA,
        I_RID => z_rowptr_RID,
        I_RUSER => z_rowptr_RUSER,
        I_RRESP => z_rowptr_RRESP,
        I_RLAST => z_rowptr_RLAST,
        I_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWVALID,
        I_AWREADY => z_rowptr_AWREADY,
        I_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWADDR,
        I_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWID,
        I_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWLEN,
        I_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWSIZE,
        I_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWLOCK,
        I_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWCACHE,
        I_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWQOS,
        I_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWPROT,
        I_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWUSER,
        I_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWBURST,
        I_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWREGION,
        I_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WVALID,
        I_WREADY => z_rowptr_WREADY,
        I_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WDATA,
        I_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WID,
        I_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WUSER,
        I_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WLAST,
        I_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WSTRB,
        I_BVALID => z_rowptr_BVALID,
        I_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_BREADY,
        I_BRESP => z_rowptr_BRESP,
        I_BID => z_rowptr_BID,
        I_BUSER => z_rowptr_BUSER);

    z_colind_m_axi_U : component row_product_z_colind_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_Z_COLIND_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_Z_COLIND_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_Z_COLIND_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_Z_COLIND_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_Z_COLIND_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_Z_COLIND_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_Z_COLIND_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_Z_COLIND_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_Z_COLIND_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_Z_COLIND_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_Z_COLIND_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_Z_COLIND_CACHE_VALUE)
    port map (
        AWVALID => m_axi_z_colind_AWVALID,
        AWREADY => m_axi_z_colind_AWREADY,
        AWADDR => m_axi_z_colind_AWADDR,
        AWID => m_axi_z_colind_AWID,
        AWLEN => m_axi_z_colind_AWLEN,
        AWSIZE => m_axi_z_colind_AWSIZE,
        AWBURST => m_axi_z_colind_AWBURST,
        AWLOCK => m_axi_z_colind_AWLOCK,
        AWCACHE => m_axi_z_colind_AWCACHE,
        AWPROT => m_axi_z_colind_AWPROT,
        AWQOS => m_axi_z_colind_AWQOS,
        AWREGION => m_axi_z_colind_AWREGION,
        AWUSER => m_axi_z_colind_AWUSER,
        WVALID => m_axi_z_colind_WVALID,
        WREADY => m_axi_z_colind_WREADY,
        WDATA => m_axi_z_colind_WDATA,
        WSTRB => m_axi_z_colind_WSTRB,
        WLAST => m_axi_z_colind_WLAST,
        WID => m_axi_z_colind_WID,
        WUSER => m_axi_z_colind_WUSER,
        ARVALID => m_axi_z_colind_ARVALID,
        ARREADY => m_axi_z_colind_ARREADY,
        ARADDR => m_axi_z_colind_ARADDR,
        ARID => m_axi_z_colind_ARID,
        ARLEN => m_axi_z_colind_ARLEN,
        ARSIZE => m_axi_z_colind_ARSIZE,
        ARBURST => m_axi_z_colind_ARBURST,
        ARLOCK => m_axi_z_colind_ARLOCK,
        ARCACHE => m_axi_z_colind_ARCACHE,
        ARPROT => m_axi_z_colind_ARPROT,
        ARQOS => m_axi_z_colind_ARQOS,
        ARREGION => m_axi_z_colind_ARREGION,
        ARUSER => m_axi_z_colind_ARUSER,
        RVALID => m_axi_z_colind_RVALID,
        RREADY => m_axi_z_colind_RREADY,
        RDATA => m_axi_z_colind_RDATA,
        RLAST => m_axi_z_colind_RLAST,
        RID => m_axi_z_colind_RID,
        RUSER => m_axi_z_colind_RUSER,
        RRESP => m_axi_z_colind_RRESP,
        BVALID => m_axi_z_colind_BVALID,
        BREADY => m_axi_z_colind_BREADY,
        BRESP => m_axi_z_colind_BRESP,
        BID => m_axi_z_colind_BID,
        BUSER => m_axi_z_colind_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => z_colind_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => z_colind_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => z_colind_RDATA,
        I_RID => z_colind_RID,
        I_RUSER => z_colind_RUSER,
        I_RRESP => z_colind_RRESP,
        I_RLAST => z_colind_RLAST,
        I_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWVALID,
        I_AWREADY => z_colind_AWREADY,
        I_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWADDR,
        I_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWID,
        I_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWLEN,
        I_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWSIZE,
        I_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWLOCK,
        I_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWCACHE,
        I_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWQOS,
        I_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWPROT,
        I_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWUSER,
        I_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWBURST,
        I_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWREGION,
        I_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WVALID,
        I_WREADY => z_colind_WREADY,
        I_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WDATA,
        I_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WID,
        I_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WUSER,
        I_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WLAST,
        I_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WSTRB,
        I_BVALID => z_colind_BVALID,
        I_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_BREADY,
        I_BRESP => z_colind_BRESP,
        I_BID => z_colind_BID,
        I_BUSER => z_colind_BUSER);

    z_data_m_axi_U : component row_product_z_data_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_Z_DATA_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_Z_DATA_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_Z_DATA_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_Z_DATA_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_Z_DATA_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_Z_DATA_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_Z_DATA_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_Z_DATA_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_Z_DATA_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_Z_DATA_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_Z_DATA_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_Z_DATA_CACHE_VALUE)
    port map (
        AWVALID => m_axi_z_data_AWVALID,
        AWREADY => m_axi_z_data_AWREADY,
        AWADDR => m_axi_z_data_AWADDR,
        AWID => m_axi_z_data_AWID,
        AWLEN => m_axi_z_data_AWLEN,
        AWSIZE => m_axi_z_data_AWSIZE,
        AWBURST => m_axi_z_data_AWBURST,
        AWLOCK => m_axi_z_data_AWLOCK,
        AWCACHE => m_axi_z_data_AWCACHE,
        AWPROT => m_axi_z_data_AWPROT,
        AWQOS => m_axi_z_data_AWQOS,
        AWREGION => m_axi_z_data_AWREGION,
        AWUSER => m_axi_z_data_AWUSER,
        WVALID => m_axi_z_data_WVALID,
        WREADY => m_axi_z_data_WREADY,
        WDATA => m_axi_z_data_WDATA,
        WSTRB => m_axi_z_data_WSTRB,
        WLAST => m_axi_z_data_WLAST,
        WID => m_axi_z_data_WID,
        WUSER => m_axi_z_data_WUSER,
        ARVALID => m_axi_z_data_ARVALID,
        ARREADY => m_axi_z_data_ARREADY,
        ARADDR => m_axi_z_data_ARADDR,
        ARID => m_axi_z_data_ARID,
        ARLEN => m_axi_z_data_ARLEN,
        ARSIZE => m_axi_z_data_ARSIZE,
        ARBURST => m_axi_z_data_ARBURST,
        ARLOCK => m_axi_z_data_ARLOCK,
        ARCACHE => m_axi_z_data_ARCACHE,
        ARPROT => m_axi_z_data_ARPROT,
        ARQOS => m_axi_z_data_ARQOS,
        ARREGION => m_axi_z_data_ARREGION,
        ARUSER => m_axi_z_data_ARUSER,
        RVALID => m_axi_z_data_RVALID,
        RREADY => m_axi_z_data_RREADY,
        RDATA => m_axi_z_data_RDATA,
        RLAST => m_axi_z_data_RLAST,
        RID => m_axi_z_data_RID,
        RUSER => m_axi_z_data_RUSER,
        RRESP => m_axi_z_data_RRESP,
        BVALID => m_axi_z_data_BVALID,
        BREADY => m_axi_z_data_BREADY,
        BRESP => m_axi_z_data_BRESP,
        BID => m_axi_z_data_BID,
        BUSER => m_axi_z_data_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => z_data_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => z_data_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => z_data_RDATA,
        I_RID => z_data_RID,
        I_RUSER => z_data_RUSER,
        I_RRESP => z_data_RRESP,
        I_RLAST => z_data_RLAST,
        I_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWVALID,
        I_AWREADY => z_data_AWREADY,
        I_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWADDR,
        I_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWID,
        I_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWLEN,
        I_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWSIZE,
        I_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWLOCK,
        I_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWCACHE,
        I_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWQOS,
        I_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWPROT,
        I_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWUSER,
        I_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWBURST,
        I_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWREGION,
        I_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WVALID,
        I_WREADY => z_data_WREADY,
        I_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WDATA,
        I_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WID,
        I_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WUSER,
        I_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WLAST,
        I_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WSTRB,
        I_BVALID => z_data_BVALID,
        I_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_BREADY,
        I_BRESP => z_data_BRESP,
        I_BID => z_data_BID,
        I_BUSER => z_data_BUSER);

    Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0 : component row_product_Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_start,
        ap_done => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_done,
        ap_continue => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_continue,
        ap_idle => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_idle,
        ap_ready => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_ready,
        m_axi_z_rowptr_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWVALID,
        m_axi_z_rowptr_AWREADY => z_rowptr_AWREADY,
        m_axi_z_rowptr_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWADDR,
        m_axi_z_rowptr_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWID,
        m_axi_z_rowptr_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWLEN,
        m_axi_z_rowptr_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWSIZE,
        m_axi_z_rowptr_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWBURST,
        m_axi_z_rowptr_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWLOCK,
        m_axi_z_rowptr_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWCACHE,
        m_axi_z_rowptr_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWPROT,
        m_axi_z_rowptr_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWQOS,
        m_axi_z_rowptr_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWREGION,
        m_axi_z_rowptr_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_AWUSER,
        m_axi_z_rowptr_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WVALID,
        m_axi_z_rowptr_WREADY => z_rowptr_WREADY,
        m_axi_z_rowptr_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WDATA,
        m_axi_z_rowptr_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WSTRB,
        m_axi_z_rowptr_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WLAST,
        m_axi_z_rowptr_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WID,
        m_axi_z_rowptr_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_WUSER,
        m_axi_z_rowptr_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARVALID,
        m_axi_z_rowptr_ARREADY => z_rowptr_ARREADY,
        m_axi_z_rowptr_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARADDR,
        m_axi_z_rowptr_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARID,
        m_axi_z_rowptr_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARLEN,
        m_axi_z_rowptr_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARSIZE,
        m_axi_z_rowptr_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARBURST,
        m_axi_z_rowptr_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARLOCK,
        m_axi_z_rowptr_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARCACHE,
        m_axi_z_rowptr_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARPROT,
        m_axi_z_rowptr_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARQOS,
        m_axi_z_rowptr_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARREGION,
        m_axi_z_rowptr_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_ARUSER,
        m_axi_z_rowptr_RVALID => z_rowptr_RVALID,
        m_axi_z_rowptr_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_RREADY,
        m_axi_z_rowptr_RDATA => z_rowptr_RDATA,
        m_axi_z_rowptr_RLAST => z_rowptr_RLAST,
        m_axi_z_rowptr_RID => z_rowptr_RID,
        m_axi_z_rowptr_RUSER => z_rowptr_RUSER,
        m_axi_z_rowptr_RRESP => z_rowptr_RRESP,
        m_axi_z_rowptr_BVALID => z_rowptr_BVALID,
        m_axi_z_rowptr_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_rowptr_BREADY,
        m_axi_z_rowptr_BRESP => z_rowptr_BRESP,
        m_axi_z_rowptr_BID => z_rowptr_BID,
        m_axi_z_rowptr_BUSER => z_rowptr_BUSER,
        m_axi_x_rowptr_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWVALID,
        m_axi_x_rowptr_AWREADY => ap_const_logic_0,
        m_axi_x_rowptr_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWADDR,
        m_axi_x_rowptr_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWID,
        m_axi_x_rowptr_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWLEN,
        m_axi_x_rowptr_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWSIZE,
        m_axi_x_rowptr_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWBURST,
        m_axi_x_rowptr_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWLOCK,
        m_axi_x_rowptr_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWCACHE,
        m_axi_x_rowptr_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWPROT,
        m_axi_x_rowptr_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWQOS,
        m_axi_x_rowptr_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWREGION,
        m_axi_x_rowptr_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_AWUSER,
        m_axi_x_rowptr_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WVALID,
        m_axi_x_rowptr_WREADY => ap_const_logic_0,
        m_axi_x_rowptr_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WDATA,
        m_axi_x_rowptr_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WSTRB,
        m_axi_x_rowptr_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WLAST,
        m_axi_x_rowptr_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WID,
        m_axi_x_rowptr_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_WUSER,
        m_axi_x_rowptr_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARVALID,
        m_axi_x_rowptr_ARREADY => x_rowptr_ARREADY,
        m_axi_x_rowptr_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARADDR,
        m_axi_x_rowptr_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARID,
        m_axi_x_rowptr_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARLEN,
        m_axi_x_rowptr_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARSIZE,
        m_axi_x_rowptr_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARBURST,
        m_axi_x_rowptr_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARLOCK,
        m_axi_x_rowptr_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARCACHE,
        m_axi_x_rowptr_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARPROT,
        m_axi_x_rowptr_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARQOS,
        m_axi_x_rowptr_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARREGION,
        m_axi_x_rowptr_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_ARUSER,
        m_axi_x_rowptr_RVALID => x_rowptr_RVALID,
        m_axi_x_rowptr_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_RREADY,
        m_axi_x_rowptr_RDATA => x_rowptr_RDATA,
        m_axi_x_rowptr_RLAST => x_rowptr_RLAST,
        m_axi_x_rowptr_RID => x_rowptr_RID,
        m_axi_x_rowptr_RUSER => x_rowptr_RUSER,
        m_axi_x_rowptr_RRESP => x_rowptr_RRESP,
        m_axi_x_rowptr_BVALID => ap_const_logic_0,
        m_axi_x_rowptr_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_rowptr_BREADY,
        m_axi_x_rowptr_BRESP => ap_const_lv2_0,
        m_axi_x_rowptr_BID => ap_const_lv1_0,
        m_axi_x_rowptr_BUSER => ap_const_lv1_0,
        m_axi_x_colind_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWVALID,
        m_axi_x_colind_AWREADY => ap_const_logic_0,
        m_axi_x_colind_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWADDR,
        m_axi_x_colind_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWID,
        m_axi_x_colind_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWLEN,
        m_axi_x_colind_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWSIZE,
        m_axi_x_colind_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWBURST,
        m_axi_x_colind_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWLOCK,
        m_axi_x_colind_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWCACHE,
        m_axi_x_colind_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWPROT,
        m_axi_x_colind_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWQOS,
        m_axi_x_colind_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWREGION,
        m_axi_x_colind_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_AWUSER,
        m_axi_x_colind_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WVALID,
        m_axi_x_colind_WREADY => ap_const_logic_0,
        m_axi_x_colind_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WDATA,
        m_axi_x_colind_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WSTRB,
        m_axi_x_colind_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WLAST,
        m_axi_x_colind_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WID,
        m_axi_x_colind_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_WUSER,
        m_axi_x_colind_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARVALID,
        m_axi_x_colind_ARREADY => x_colind_ARREADY,
        m_axi_x_colind_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARADDR,
        m_axi_x_colind_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARID,
        m_axi_x_colind_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARLEN,
        m_axi_x_colind_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARSIZE,
        m_axi_x_colind_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARBURST,
        m_axi_x_colind_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARLOCK,
        m_axi_x_colind_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARCACHE,
        m_axi_x_colind_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARPROT,
        m_axi_x_colind_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARQOS,
        m_axi_x_colind_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARREGION,
        m_axi_x_colind_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_ARUSER,
        m_axi_x_colind_RVALID => x_colind_RVALID,
        m_axi_x_colind_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_RREADY,
        m_axi_x_colind_RDATA => x_colind_RDATA,
        m_axi_x_colind_RLAST => x_colind_RLAST,
        m_axi_x_colind_RID => x_colind_RID,
        m_axi_x_colind_RUSER => x_colind_RUSER,
        m_axi_x_colind_RRESP => x_colind_RRESP,
        m_axi_x_colind_BVALID => ap_const_logic_0,
        m_axi_x_colind_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_colind_BREADY,
        m_axi_x_colind_BRESP => ap_const_lv2_0,
        m_axi_x_colind_BID => ap_const_lv1_0,
        m_axi_x_colind_BUSER => ap_const_lv1_0,
        m_axi_x_data_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWVALID,
        m_axi_x_data_AWREADY => ap_const_logic_0,
        m_axi_x_data_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWADDR,
        m_axi_x_data_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWID,
        m_axi_x_data_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWLEN,
        m_axi_x_data_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWSIZE,
        m_axi_x_data_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWBURST,
        m_axi_x_data_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWLOCK,
        m_axi_x_data_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWCACHE,
        m_axi_x_data_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWPROT,
        m_axi_x_data_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWQOS,
        m_axi_x_data_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWREGION,
        m_axi_x_data_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_AWUSER,
        m_axi_x_data_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WVALID,
        m_axi_x_data_WREADY => ap_const_logic_0,
        m_axi_x_data_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WDATA,
        m_axi_x_data_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WSTRB,
        m_axi_x_data_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WLAST,
        m_axi_x_data_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WID,
        m_axi_x_data_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_WUSER,
        m_axi_x_data_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARVALID,
        m_axi_x_data_ARREADY => x_data_ARREADY,
        m_axi_x_data_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARADDR,
        m_axi_x_data_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARID,
        m_axi_x_data_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARLEN,
        m_axi_x_data_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARSIZE,
        m_axi_x_data_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARBURST,
        m_axi_x_data_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARLOCK,
        m_axi_x_data_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARCACHE,
        m_axi_x_data_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARPROT,
        m_axi_x_data_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARQOS,
        m_axi_x_data_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARREGION,
        m_axi_x_data_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_ARUSER,
        m_axi_x_data_RVALID => x_data_RVALID,
        m_axi_x_data_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_RREADY,
        m_axi_x_data_RDATA => x_data_RDATA,
        m_axi_x_data_RLAST => x_data_RLAST,
        m_axi_x_data_RID => x_data_RID,
        m_axi_x_data_RUSER => x_data_RUSER,
        m_axi_x_data_RRESP => x_data_RRESP,
        m_axi_x_data_BVALID => ap_const_logic_0,
        m_axi_x_data_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_x_data_BREADY,
        m_axi_x_data_BRESP => ap_const_lv2_0,
        m_axi_x_data_BID => ap_const_lv1_0,
        m_axi_x_data_BUSER => ap_const_lv1_0,
        m_axi_y_rowptr_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWVALID,
        m_axi_y_rowptr_AWREADY => ap_const_logic_0,
        m_axi_y_rowptr_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWADDR,
        m_axi_y_rowptr_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWID,
        m_axi_y_rowptr_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWLEN,
        m_axi_y_rowptr_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWSIZE,
        m_axi_y_rowptr_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWBURST,
        m_axi_y_rowptr_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWLOCK,
        m_axi_y_rowptr_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWCACHE,
        m_axi_y_rowptr_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWPROT,
        m_axi_y_rowptr_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWQOS,
        m_axi_y_rowptr_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWREGION,
        m_axi_y_rowptr_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_AWUSER,
        m_axi_y_rowptr_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WVALID,
        m_axi_y_rowptr_WREADY => ap_const_logic_0,
        m_axi_y_rowptr_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WDATA,
        m_axi_y_rowptr_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WSTRB,
        m_axi_y_rowptr_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WLAST,
        m_axi_y_rowptr_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WID,
        m_axi_y_rowptr_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_WUSER,
        m_axi_y_rowptr_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARVALID,
        m_axi_y_rowptr_ARREADY => y_rowptr_ARREADY,
        m_axi_y_rowptr_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARADDR,
        m_axi_y_rowptr_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARID,
        m_axi_y_rowptr_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARLEN,
        m_axi_y_rowptr_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARSIZE,
        m_axi_y_rowptr_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARBURST,
        m_axi_y_rowptr_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARLOCK,
        m_axi_y_rowptr_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARCACHE,
        m_axi_y_rowptr_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARPROT,
        m_axi_y_rowptr_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARQOS,
        m_axi_y_rowptr_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARREGION,
        m_axi_y_rowptr_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_ARUSER,
        m_axi_y_rowptr_RVALID => y_rowptr_RVALID,
        m_axi_y_rowptr_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_RREADY,
        m_axi_y_rowptr_RDATA => y_rowptr_RDATA,
        m_axi_y_rowptr_RLAST => y_rowptr_RLAST,
        m_axi_y_rowptr_RID => y_rowptr_RID,
        m_axi_y_rowptr_RUSER => y_rowptr_RUSER,
        m_axi_y_rowptr_RRESP => y_rowptr_RRESP,
        m_axi_y_rowptr_BVALID => ap_const_logic_0,
        m_axi_y_rowptr_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_rowptr_BREADY,
        m_axi_y_rowptr_BRESP => ap_const_lv2_0,
        m_axi_y_rowptr_BID => ap_const_lv1_0,
        m_axi_y_rowptr_BUSER => ap_const_lv1_0,
        m_axi_y_data_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWVALID,
        m_axi_y_data_AWREADY => ap_const_logic_0,
        m_axi_y_data_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWADDR,
        m_axi_y_data_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWID,
        m_axi_y_data_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWLEN,
        m_axi_y_data_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWSIZE,
        m_axi_y_data_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWBURST,
        m_axi_y_data_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWLOCK,
        m_axi_y_data_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWCACHE,
        m_axi_y_data_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWPROT,
        m_axi_y_data_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWQOS,
        m_axi_y_data_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWREGION,
        m_axi_y_data_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_AWUSER,
        m_axi_y_data_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WVALID,
        m_axi_y_data_WREADY => ap_const_logic_0,
        m_axi_y_data_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WDATA,
        m_axi_y_data_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WSTRB,
        m_axi_y_data_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WLAST,
        m_axi_y_data_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WID,
        m_axi_y_data_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_WUSER,
        m_axi_y_data_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARVALID,
        m_axi_y_data_ARREADY => y_data_ARREADY,
        m_axi_y_data_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARADDR,
        m_axi_y_data_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARID,
        m_axi_y_data_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARLEN,
        m_axi_y_data_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARSIZE,
        m_axi_y_data_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARBURST,
        m_axi_y_data_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARLOCK,
        m_axi_y_data_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARCACHE,
        m_axi_y_data_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARPROT,
        m_axi_y_data_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARQOS,
        m_axi_y_data_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARREGION,
        m_axi_y_data_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_ARUSER,
        m_axi_y_data_RVALID => y_data_RVALID,
        m_axi_y_data_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_RREADY,
        m_axi_y_data_RDATA => y_data_RDATA,
        m_axi_y_data_RLAST => y_data_RLAST,
        m_axi_y_data_RID => y_data_RID,
        m_axi_y_data_RUSER => y_data_RUSER,
        m_axi_y_data_RRESP => y_data_RRESP,
        m_axi_y_data_BVALID => ap_const_logic_0,
        m_axi_y_data_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_data_BREADY,
        m_axi_y_data_BRESP => ap_const_lv2_0,
        m_axi_y_data_BID => ap_const_lv1_0,
        m_axi_y_data_BUSER => ap_const_lv1_0,
        m_axi_y_colind_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWVALID,
        m_axi_y_colind_AWREADY => ap_const_logic_0,
        m_axi_y_colind_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWADDR,
        m_axi_y_colind_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWID,
        m_axi_y_colind_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWLEN,
        m_axi_y_colind_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWSIZE,
        m_axi_y_colind_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWBURST,
        m_axi_y_colind_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWLOCK,
        m_axi_y_colind_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWCACHE,
        m_axi_y_colind_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWPROT,
        m_axi_y_colind_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWQOS,
        m_axi_y_colind_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWREGION,
        m_axi_y_colind_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_AWUSER,
        m_axi_y_colind_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WVALID,
        m_axi_y_colind_WREADY => ap_const_logic_0,
        m_axi_y_colind_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WDATA,
        m_axi_y_colind_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WSTRB,
        m_axi_y_colind_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WLAST,
        m_axi_y_colind_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WID,
        m_axi_y_colind_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_WUSER,
        m_axi_y_colind_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARVALID,
        m_axi_y_colind_ARREADY => y_colind_ARREADY,
        m_axi_y_colind_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARADDR,
        m_axi_y_colind_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARID,
        m_axi_y_colind_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARLEN,
        m_axi_y_colind_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARSIZE,
        m_axi_y_colind_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARBURST,
        m_axi_y_colind_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARLOCK,
        m_axi_y_colind_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARCACHE,
        m_axi_y_colind_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARPROT,
        m_axi_y_colind_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARQOS,
        m_axi_y_colind_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARREGION,
        m_axi_y_colind_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_ARUSER,
        m_axi_y_colind_RVALID => y_colind_RVALID,
        m_axi_y_colind_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_RREADY,
        m_axi_y_colind_RDATA => y_colind_RDATA,
        m_axi_y_colind_RLAST => y_colind_RLAST,
        m_axi_y_colind_RID => y_colind_RID,
        m_axi_y_colind_RUSER => y_colind_RUSER,
        m_axi_y_colind_RRESP => y_colind_RRESP,
        m_axi_y_colind_BVALID => ap_const_logic_0,
        m_axi_y_colind_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_y_colind_BREADY,
        m_axi_y_colind_BRESP => ap_const_lv2_0,
        m_axi_y_colind_BID => ap_const_lv1_0,
        m_axi_y_colind_BUSER => ap_const_lv1_0,
        m_axi_z_colind_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWVALID,
        m_axi_z_colind_AWREADY => z_colind_AWREADY,
        m_axi_z_colind_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWADDR,
        m_axi_z_colind_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWID,
        m_axi_z_colind_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWLEN,
        m_axi_z_colind_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWSIZE,
        m_axi_z_colind_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWBURST,
        m_axi_z_colind_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWLOCK,
        m_axi_z_colind_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWCACHE,
        m_axi_z_colind_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWPROT,
        m_axi_z_colind_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWQOS,
        m_axi_z_colind_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWREGION,
        m_axi_z_colind_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_AWUSER,
        m_axi_z_colind_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WVALID,
        m_axi_z_colind_WREADY => z_colind_WREADY,
        m_axi_z_colind_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WDATA,
        m_axi_z_colind_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WSTRB,
        m_axi_z_colind_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WLAST,
        m_axi_z_colind_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WID,
        m_axi_z_colind_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_WUSER,
        m_axi_z_colind_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARVALID,
        m_axi_z_colind_ARREADY => ap_const_logic_0,
        m_axi_z_colind_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARADDR,
        m_axi_z_colind_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARID,
        m_axi_z_colind_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARLEN,
        m_axi_z_colind_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARSIZE,
        m_axi_z_colind_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARBURST,
        m_axi_z_colind_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARLOCK,
        m_axi_z_colind_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARCACHE,
        m_axi_z_colind_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARPROT,
        m_axi_z_colind_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARQOS,
        m_axi_z_colind_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARREGION,
        m_axi_z_colind_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_ARUSER,
        m_axi_z_colind_RVALID => ap_const_logic_0,
        m_axi_z_colind_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_RREADY,
        m_axi_z_colind_RDATA => ap_const_lv32_0,
        m_axi_z_colind_RLAST => ap_const_logic_0,
        m_axi_z_colind_RID => ap_const_lv1_0,
        m_axi_z_colind_RUSER => ap_const_lv1_0,
        m_axi_z_colind_RRESP => ap_const_lv2_0,
        m_axi_z_colind_BVALID => z_colind_BVALID,
        m_axi_z_colind_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_colind_BREADY,
        m_axi_z_colind_BRESP => z_colind_BRESP,
        m_axi_z_colind_BID => z_colind_BID,
        m_axi_z_colind_BUSER => z_colind_BUSER,
        m_axi_z_data_AWVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWVALID,
        m_axi_z_data_AWREADY => z_data_AWREADY,
        m_axi_z_data_AWADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWADDR,
        m_axi_z_data_AWID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWID,
        m_axi_z_data_AWLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWLEN,
        m_axi_z_data_AWSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWSIZE,
        m_axi_z_data_AWBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWBURST,
        m_axi_z_data_AWLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWLOCK,
        m_axi_z_data_AWCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWCACHE,
        m_axi_z_data_AWPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWPROT,
        m_axi_z_data_AWQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWQOS,
        m_axi_z_data_AWREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWREGION,
        m_axi_z_data_AWUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_AWUSER,
        m_axi_z_data_WVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WVALID,
        m_axi_z_data_WREADY => z_data_WREADY,
        m_axi_z_data_WDATA => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WDATA,
        m_axi_z_data_WSTRB => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WSTRB,
        m_axi_z_data_WLAST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WLAST,
        m_axi_z_data_WID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WID,
        m_axi_z_data_WUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_WUSER,
        m_axi_z_data_ARVALID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARVALID,
        m_axi_z_data_ARREADY => ap_const_logic_0,
        m_axi_z_data_ARADDR => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARADDR,
        m_axi_z_data_ARID => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARID,
        m_axi_z_data_ARLEN => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARLEN,
        m_axi_z_data_ARSIZE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARSIZE,
        m_axi_z_data_ARBURST => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARBURST,
        m_axi_z_data_ARLOCK => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARLOCK,
        m_axi_z_data_ARCACHE => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARCACHE,
        m_axi_z_data_ARPROT => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARPROT,
        m_axi_z_data_ARQOS => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARQOS,
        m_axi_z_data_ARREGION => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARREGION,
        m_axi_z_data_ARUSER => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_ARUSER,
        m_axi_z_data_RVALID => ap_const_logic_0,
        m_axi_z_data_RREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_RREADY,
        m_axi_z_data_RDATA => ap_const_lv32_0,
        m_axi_z_data_RLAST => ap_const_logic_0,
        m_axi_z_data_RID => ap_const_lv1_0,
        m_axi_z_data_RUSER => ap_const_lv1_0,
        m_axi_z_data_RRESP => ap_const_lv2_0,
        m_axi_z_data_BVALID => z_data_BVALID,
        m_axi_z_data_BREADY => Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_m_axi_z_data_BREADY,
        m_axi_z_data_BRESP => z_data_BRESP,
        m_axi_z_data_BID => z_data_BID,
        m_axi_z_data_BUSER => z_data_BUSER);




    Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_continue <= ap_const_logic_1;
    Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_start <= ap_start;
    Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_start_full_n <= ap_const_logic_1;
    Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_start_write <= ap_const_logic_0;
    ap_done <= Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_done;
    ap_idle <= Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_idle;
    ap_ready <= Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_done;
    ap_sync_ready <= Block_ZN8ap_fixedILi32ELi16EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei_exit111_proc_U0_ap_ready;
end behav;
